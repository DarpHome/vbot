{"module_name":"encoding.xml","description":"## Description\n\n`xml` is a module to parse XML documents into a tree structure. It also supports validation of XML documents against a DTD.\n\nNote that this is not a streaming XML parser. It reads the entire document into memory and then parses it. This is not a problem for small documents, but it might be a problem for extremely large documents (several hundred megabytes or more).\n\nThe public function `parse_single_node` can be used to parse a single node from an implementation of `io.Reader`, which can help parse large XML documents on an element-by-element basis. Sample usage is provided in the `parser_test.v` file.\n\n## Usage\n\n### Parsing XML Files\n\nThere are three different ways to parse an XML Document:\n\n1. Pass the entire XML document as a string to `XMLDocument.from_string`. 2. Specify a file path to `XMLDocument.from_file`. 3. Use a source that implements `io.Reader` and pass it to `XMLDocument.from_reader`.\n\n\n```v\nimport encoding.xml\n\n//...\ndoc := xml.XMLDocument.from_file('test/sample.xml')!\n```\n\n### Validating XML Documents\n\nSimply call `validate` on the parsed XML document.\n\n### Querying\n\nCheck the `get_element...` methods defined on the XMLDocument struct.\n\n### Escaping and Un-escaping XML Entities\n\nWhen the `validate` method is called, the XML document is parsed and all text\nnodes are un-escaped. This means that the text nodes will contain the actual\ntext and not the escaped version of the text.\n\nWhen the XML document is serialized (using `str` or `pretty_str`), all text nodes are escaped.\n\nThe escaping and un-escaping can also be done manually using the `escape_text` and\n`unescape_text` methods.\n","contents":[{"attributes":{},"comments":[{"text":"\u0001 XMLNode represents a single XML node. It contains the node name,","is_multi":false,"pos":{"len":66,"line_nr":14,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 a map of attributes, and a list of children. The children can be","is_multi":false,"pos":{"len":66,"line_nr":15,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 other XML nodes, CDATA, plain text, or comments.","is_multi":false,"pos":{"len":50,"line_nr":16,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 get_elements_by_attribute returns all elements with the given attribute-value pair in","is_multi":false,"pos":{"len":87,"line_nr":54,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 the subtree rooted at this node. If there are no such elements, an empty array is returned.","is_multi":false,"pos":{"len":93,"line_nr":55,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\query.v","content":"fn (node XMLNode) get_elements_by_attribute(attribute string, value string) []XMLNode","name":"get_elements_by_attribute","parent_name":"XMLNode","return_type":"[]XMLNode","pos":{"len":89,"line_nr":56,"pos":1277,"col":0,"last_line":77},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 get_elements_by_tag returns all elements with the given tag name in the subtree","is_multi":false,"pos":{"len":81,"line_nr":31,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 rooted at this node. If there are no such elements, an empty array is returned.","is_multi":false,"pos":{"len":81,"line_nr":32,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\query.v","content":"fn (node XMLNode) get_elements_by_tag(tag string) []XMLNode","name":"get_elements_by_tag","parent_name":"XMLNode","return_type":"[]XMLNode","pos":{"len":63,"line_nr":33,"pos":756,"col":0,"last_line":52},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pretty_str returns a pretty-printed version of the XML node. It requires the current indentation","is_multi":false,"pos":{"len":98,"line_nr":4,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 the node is at, the depth of the node in the tree, and a map of reverse entities to use when","is_multi":false,"pos":{"len":94,"line_nr":5,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 escaping text.","is_multi":false,"pos":{"len":16,"line_nr":6,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\encoding.v","content":"fn (node XMLNode) pretty_str(original_indent string, depth int, reverse_entities map[string]string) string","name":"pretty_str","parent_name":"XMLNode","return_type":"string","pos":{"len":110,"line_nr":7,"pos":242,"col":0,"last_line":66},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 get_element_by_id returns the first element with the given id, or none if no","is_multi":false,"pos":{"len":78,"line_nr":2,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 such element exists in the subtree rooted at this node.","is_multi":false,"pos":{"len":57,"line_nr":3,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\query.v","content":"fn (node XMLNode) get_element_by_id(id string) ?XMLNode","name":"get_element_by_id","parent_name":"XMLNode","return_type":"?XMLNode","pos":{"len":59,"line_nr":4,"pos":151,"col":0,"last_line":29},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"struct XMLNode {\npub:\n\tname       string            @[required]\n\tattributes map[string]string\n\tchildren   []XMLNodeContents\n}","name":"XMLNode","parent_name":"","return_type":"","pos":{"len":18,"line_nr":17,"pos":381,"col":0,"last_line":22},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 XMLDocument is the struct that represents a single XML document.","is_multi":false,"pos":{"len":66,"line_nr":24,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It contains the prolog and the single root node. The prolog struct","is_multi":false,"pos":{"len":68,"line_nr":25,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 is embedded into the XMLDocument struct, so that the prolog fields","is_multi":false,"pos":{"len":68,"line_nr":26,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 are accessible directly from the this struct.","is_multi":false,"pos":{"len":47,"line_nr":27,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Public prolog fields include version, enccoding, comments preceding","is_multi":false,"pos":{"len":69,"line_nr":28,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 the root node, and the document type definition.","is_multi":false,"pos":{"len":50,"line_nr":29,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 get_elements_by_attribute returns all elements with the given attribute-value pair.","is_multi":false,"pos":{"len":85,"line_nr":85,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If there are no such elements, an empty array is returned.","is_multi":false,"pos":{"len":60,"line_nr":86,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\query.v","content":"fn (doc XMLDocument) get_elements_by_attribute(attribute string, value string) []XMLNode","name":"get_elements_by_attribute","parent_name":"XMLDocument","return_type":"[]XMLNode","pos":{"len":92,"line_nr":87,"pos":2085,"col":0,"last_line":89},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 get_elements_by_tag returns all elements with the given tag name.","is_multi":false,"pos":{"len":67,"line_nr":91,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If there are no such elements, an empty array is returned.","is_multi":false,"pos":{"len":60,"line_nr":92,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\query.v","content":"fn (doc XMLDocument) get_elements_by_tag(tag string) []XMLNode","name":"get_elements_by_tag","parent_name":"XMLDocument","return_type":"[]XMLNode","pos":{"len":66,"line_nr":93,"pos":2375,"col":0,"last_line":95},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pretty_str returns a pretty-printed version of the XML document. It requires the string used to","is_multi":false,"pos":{"len":97,"line_nr":133,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 indent each level of the document.","is_multi":false,"pos":{"len":36,"line_nr":134,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\encoding.v","content":"fn (doc XMLDocument) pretty_str(indent string) string","name":"pretty_str","parent_name":"XMLDocument","return_type":"string","pos":{"len":57,"line_nr":135,"pos":3582,"col":0,"last_line":168},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 str returns a string representation of the XML document. It uses a 2-space indentation","is_multi":false,"pos":{"len":88,"line_nr":170,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 to pretty-print the document.","is_multi":false,"pos":{"len":31,"line_nr":171,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\encoding.v","content":"fn (doc XMLDocument) str() string","name":"str","parent_name":"XMLDocument","return_type":"string","pos":{"len":37,"line_nr":172,"pos":4730,"col":0,"last_line":174},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 validate checks the document is well-formed and valid. It returns a new","is_multi":false,"pos":{"len":73,"line_nr":41,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 document with the parsed entities expanded when validation is successful.","is_multi":false,"pos":{"len":75,"line_nr":42,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Otherwise it returns an error.","is_multi":false,"pos":{"len":32,"line_nr":43,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\validation.v","content":"fn (doc XMLDocument) validate() !XMLDocument","name":"validate","parent_name":"XMLDocument","return_type":"!XMLDocument","pos":{"len":48,"line_nr":44,"pos":1131,"col":0,"last_line":95},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 get_element_by_id returns the first element with the given id, or none if no","is_multi":false,"pos":{"len":78,"line_nr":79,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 such element exists.","is_multi":false,"pos":{"len":22,"line_nr":80,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\query.v","content":"fn (doc XMLDocument) get_element_by_id(id string) ?XMLNode","name":"get_element_by_id","parent_name":"XMLDocument","return_type":"?XMLNode","pos":{"len":62,"line_nr":81,"pos":1829,"col":0,"last_line":83},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"struct XMLDocument {\n\tProlog\npub:\n\troot XMLNode @[required]\n}","name":"XMLDocument","parent_name":"","return_type":"","pos":{"len":22,"line_nr":30,"pos":892,"col":0,"last_line":34},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\entity.v","content":"const default_entities = {\n\t'lt':   '<'\n\t'gt':   '>'\n\t'amp':  '&'\n\t'apos': \"'\"\n\t'quot': '\"'\n}","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":4,"pos":28,"col":0,"last_line":10},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\entity.v","content":"const default_entities_reverse = {\n\t'<': 'lt'\n\t'>': 'gt'\n\t'&': 'amp'\n\t\"'\": 'apos'\n\t'\"': 'quot'\n}","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":12,"pos":127,"col":0,"last_line":18},"platform":"cross","kind":"const_group","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Constants","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"const_group","public":false,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\entity.v","content":"struct EscapeConfig {\n\treverse_entities map[string]string = xml.default_entities_reverse\n}","name":"EscapeConfig","parent_name":"","return_type":"","pos":{"len":23,"line_nr":21,"pos":239,"col":0,"last_line":23},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 escape_text replaces all entities in the given string with their respective","is_multi":false,"pos":{"len":77,"line_nr":25,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 XML entity strings. See default_entities, which can be overridden.","is_multi":false,"pos":{"len":68,"line_nr":26,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\entity.v","content":"fn escape_text(content string, config EscapeConfig) string","name":"escape_text","parent_name":"","return_type":"string","pos":{"len":62,"line_nr":27,"pos":484,"col":0,"last_line":36},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\entity.v","content":"struct UnescapeConfig {\n\tentities map[string]string = xml.default_entities\n}","name":"UnescapeConfig","parent_name":"","return_type":"","pos":{"len":25,"line_nr":39,"pos":823,"col":0,"last_line":41},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 unescape_text replaces all entities in the given string with their respective","is_multi":false,"pos":{"len":79,"line_nr":43,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 original characters or strings. See default_entities_reverse, which can be overridden.","is_multi":false,"pos":{"len":88,"line_nr":44,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\entity.v","content":"fn unescape_text(content string, config UnescapeConfig) !string","name":"unescape_text","parent_name":"","return_type":"!string","pos":{"len":67,"line_nr":45,"pos":1076,"col":0,"last_line":78},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 parse_single_node parses a single XML node from the reader. The first character of the tag is passed","is_multi":false,"pos":{"len":102,"line_nr":541,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 in as the first_char parameter.","is_multi":false,"pos":{"len":33,"line_nr":542,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 This function is meant to assist in parsing nested nodes one at a time. Using this function as","is_multi":false,"pos":{"len":96,"line_nr":543,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 opposed to the recommended static functions makes it easier to parse smaller nodes in extremely large","is_multi":false,"pos":{"len":103,"line_nr":544,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 XML documents without running out of memory.","is_multi":false,"pos":{"len":46,"line_nr":545,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\parser.v","content":"fn parse_single_node(first_char u8, mut reader io.Reader) !XMLNode","name":"parse_single_node","parent_name":"","return_type":"!XMLNode","pos":{"len":70,"line_nr":546,"pos":13231,"col":0,"last_line":577},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 XMLDocument.from_string parses an XML document from a string.","is_multi":false,"pos":{"len":63,"line_nr":579,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\parser.v","content":"fn XMLDocument.from_string(raw_contents string) !XMLDocument","name":"XMLDocument.from_string","parent_name":"","return_type":"!XMLDocument","pos":{"len":64,"line_nr":580,"pos":14156,"col":0,"last_line":585},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 XMLDocument.from_file parses an XML document from a file. Note that the file is read in its entirety","is_multi":false,"pos":{"len":102,"line_nr":587,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 and then parsed. If the file is too large, try using the XMLDocument.from_reader function instead.","is_multi":false,"pos":{"len":100,"line_nr":588,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\parser.v","content":"fn XMLDocument.from_file(path string) !XMLDocument","name":"XMLDocument.from_file","parent_name":"","return_type":"!XMLDocument","pos":{"len":54,"line_nr":589,"pos":14546,"col":0,"last_line":594},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 XMLDocument.from_reader parses an XML document from a reader. This is the most generic way to parse","is_multi":false,"pos":{"len":101,"line_nr":596,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 an XML document from any arbitrary source that implements that io.Reader interface.","is_multi":false,"pos":{"len":85,"line_nr":597,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\parser.v","content":"fn XMLDocument.from_reader(mut reader io.Reader) !XMLDocument","name":"XMLDocument.from_reader","parent_name":"","return_type":"!XMLDocument","pos":{"len":65,"line_nr":598,"pos":14910,"col":0,"last_line":616},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"type XMLNodeContents = XMLCData | XMLComment | XMLNode | string","name":"XMLNodeContents","parent_name":"","return_type":"","pos":{"len":24,"line_nr":2,"pos":12,"col":0,"last_line":2},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"struct XMLCData {\npub:\n\ttext string @[required]\n}","name":"XMLCData","parent_name":"","return_type":"","pos":{"len":19,"line_nr":4,"pos":81,"col":0,"last_line":7},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"struct XMLComment {\npub:\n\ttext string @[required]\n}","name":"XMLComment","parent_name":"","return_type":"","pos":{"len":21,"line_nr":9,"pos":136,"col":0,"last_line":12},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"type DTDListItem = DTDElement | DTDEntity","name":"DTDListItem","parent_name":"","return_type":"","pos":{"len":20,"line_nr":36,"pos":959,"col":0,"last_line":36},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"struct DTDEntity {\n\tname  string @[required]\n\tvalue string @[required]\n}","name":"DTDEntity","parent_name":"","return_type":"","pos":{"len":20,"line_nr":38,"pos":1006,"col":0,"last_line":41},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"struct DTDElement {\n\tname       string   @[required]\n\tdefinition []string @[required]\n}","name":"DTDElement","parent_name":"","return_type":"","pos":{"len":21,"line_nr":43,"pos":1084,"col":0,"last_line":46},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"struct DocumentTypeDefinition {\n\tname string\n\tlist []DTDListItem\n}","name":"DocumentTypeDefinition","parent_name":"","return_type":"","pos":{"len":33,"line_nr":48,"pos":1177,"col":0,"last_line":51},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\xml\\types.v","content":"struct DocumentType {\n\tname string  @[required]\n\tdtd  DTDInfo\n}","name":"DocumentType","parent_name":"","return_type":"","pos":{"len":23,"line_nr":53,"pos":1249,"col":0,"last_line":56},"platform":"cross","kind":"struct_","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:33"}