{"module_name":"net.http.file","description":"","contents":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\http\\file\\entity.v","content":"struct Entity {\n\tos.FileInfo\n\tpath     string\n\tmod_time time.Time\n\turl      string\n\tfname    string\n}","name":"Entity","parent_name":"","return_type":"","pos":{"len":17,"line_nr":5,"pos":36,"col":0,"last_line":11},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\http\\file\\static_server.v","content":"struct StaticServeParams {\npub mut:\n\tfolder         string        = '.' // the folder, that will be used as a base for serving all static resources; If it was /tmp, then: http://localhost:4001/x.txt => /tmp/x.txt\n\ton             string        = 'localhost:4001' // on which address:port to listen for http requests\n\tworkers        int           = runtime.nr_jobs() // how many worker threads to use for serving the responses, by default it is limited to the number of available cores; can be controlled with setting VJOBS\n\tshutdown_after time.Duration = time.infinite // after this time has passed, the webserver will gracefully shutdown on its own\n\tfilter_myexe   bool = true // whether to filter the name of the static file executable from the automatic folder listings for / . Useful with `v -e 'import net.http.file; file.serve()'`\n}","name":"StaticServeParams","parent_name":"","return_type":"","pos":{"len":28,"line_nr":10,"pos":109,"col":0,"last_line":17},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 serve will start a static files web server.","is_multi":false,"pos":{"len":45,"line_nr":19,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":20,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 The most common usage is the following:","is_multi":false,"pos":{"len":41,"line_nr":21,"pos":0,"col":0,"last_line":0}},{"text":"\u0001      v -e 'import net.http.file; file.serve()'","is_multi":false,"pos":{"len":48,"line_nr":22,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 which will listen for http requests on port 4001 by default, and serve all the files in the current folder.","is_multi":false,"pos":{"len":109,"line_nr":23,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":24,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Another example: `v -e 'import net.http.file; file.serve(folder: \"/tmp\")` , same but will serve all files inside the /tmp folder.","is_multi":false,"pos":{"len":131,"line_nr":25,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Another example: `v -e 'import net.http.file; file.serve(folder: \"~/Projects\", on: \":5002\")` , expose all the files inside the ~/Projects folder, on http://localhost:5002/ .","is_multi":false,"pos":{"len":175,"line_nr":26,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\http\\file\\static_server.v","content":"fn serve(params StaticServeParams)","name":"serve","parent_name":"","return_type":"void","pos":{"len":38,"line_nr":27,"pos":1519,"col":0,"last_line":48},"platform":"cross","kind":"function","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:35"}