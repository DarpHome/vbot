{"module_name":"context","contents":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\cancel.v","content":"type CancelFn = fn ()","name":"CancelFn","parent_name":"","return_type":"","pos":{"len":17,"line_nr":10,"pos":382,"col":0,"last_line":10},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\cancel.v","content":"interface Canceler {\n\tid string\nmut:\n\tcancel(remove_from_parent bool, err IError)\n\tdone() chan int\n}","name":"Canceler","parent_name":"","return_type":"","pos":{"len":104,"line_nr":12,"pos":409,"col":0,"last_line":17},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 A CancelContext can be canceled. When canceled, it also cancels any children","is_multi":false,"pos":{"len":78,"line_nr":19,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 that implement Canceler.","is_multi":false,"pos":{"len":26,"line_nr":20,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\cancel.v","content":"fn (ctx &CancelContext) deadline() ?time.Time","name":"deadline","parent_name":"CancelContext","return_type":"?time.Time","pos":{"len":49,"line_nr":57,"pos":1683,"col":0,"last_line":59},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\cancel.v","content":"fn (mut ctx CancelContext) done() chan int","name":"done","parent_name":"CancelContext","return_type":"chan int","pos":{"len":46,"line_nr":61,"pos":1751,"col":0,"last_line":66},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\cancel.v","content":"fn (mut ctx CancelContext) err() IError","name":"err","parent_name":"CancelContext","return_type":"IError","pos":{"len":43,"line_nr":68,"pos":1873,"col":0,"last_line":73},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\cancel.v","content":"fn (ctx &CancelContext) value(key Key) ?Any","name":"value","parent_name":"CancelContext","return_type":"?Any","pos":{"len":47,"line_nr":75,"pos":1989,"col":0,"last_line":80},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\cancel.v","content":"fn (ctx &CancelContext) str() string","name":"str","parent_name":"CancelContext","return_type":"string","pos":{"len":40,"line_nr":82,"pos":2121,"col":0,"last_line":84},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\cancel.v","content":"struct CancelContext {\n\tid string\nmut:\n\tcontext  Context\n\tmutex    &sync.Mutex = sync.new_mutex()\n\tdone     chan int\n\tchildren map[string]Canceler\n\terr      IError = none\n}","name":"CancelContext","parent_name":"","return_type":"","pos":{"len":24,"line_nr":21,"pos":623,"col":0,"last_line":29},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 with_cancel returns a copy of parent with a new done channel. The returned","is_multi":false,"pos":{"len":76,"line_nr":31,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 context's done channel is closed when the returned cancel function is called","is_multi":false,"pos":{"len":78,"line_nr":32,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 or when the parent context's done channel is closed, whichever happens first.","is_multi":false,"pos":{"len":79,"line_nr":33,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":34,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Canceling this context releases resources associated with it, so code should","is_multi":false,"pos":{"len":78,"line_nr":35,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 call cancel as soon as the operations running in this Context complete.","is_multi":false,"pos":{"len":73,"line_nr":36,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\cancel.v","content":"fn with_cancel(mut parent Context) (Context, CancelFn)","name":"with_cancel","parent_name":"","return_type":"(Context, CancelFn)","pos":{"len":58,"line_nr":37,"pos":1198,"col":0,"last_line":44},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Key represents the type for the ValueContext key","is_multi":false,"pos":{"len":50,"line_nr":17,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\context.v","content":"type Key = bool | f32 | f64 | i16 | i64 | i8 | int | string | u16 | u32 | u64 | u8 | voidptr","name":"Key","parent_name":"","return_type":"","pos":{"len":12,"line_nr":18,"pos":749,"col":0,"last_line":18},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Any represents a generic type for the ValueContext","is_multi":false,"pos":{"len":52,"line_nr":20,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\context.v","content":"interface Any {}","name":"Any","parent_name":"","return_type":"","pos":{"len":20,"line_nr":21,"pos":901,"col":0,"last_line":21},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 `Context` is an interface that defined the minimum required functionality","is_multi":false,"pos":{"len":75,"line_nr":23,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 for a Context.","is_multi":false,"pos":{"len":16,"line_nr":24,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":25,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `deadline()` returns the time when work done on behalf of this context","is_multi":false,"pos":{"len":72,"line_nr":26,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 should be canceled. deadline returns none when no deadline is","is_multi":false,"pos":{"len":63,"line_nr":27,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 set. Successive calls to deadline return the same results.","is_multi":false,"pos":{"len":60,"line_nr":28,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":29,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `value(key)` returns an Optional that wraps the value associated with this context for key.","is_multi":false,"pos":{"len":93,"line_nr":30,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It returns none if no value is associated with key. Successive calls to Value with","is_multi":false,"pos":{"len":84,"line_nr":31,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 the same key returns the same result.","is_multi":false,"pos":{"len":39,"line_nr":32,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":33,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Use context values only for request-scoped data that transits","is_multi":false,"pos":{"len":63,"line_nr":34,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 processes and API boundaries, not for passing optional parameters to","is_multi":false,"pos":{"len":70,"line_nr":35,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 functions.","is_multi":false,"pos":{"len":12,"line_nr":36,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":37,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 A key identifies a specific value in a Context. Functions that wish","is_multi":false,"pos":{"len":69,"line_nr":38,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 to store values in Context typically allocate a key in a global","is_multi":false,"pos":{"len":65,"line_nr":39,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 variable then use that key as the argument to context.with_value and","is_multi":false,"pos":{"len":70,"line_nr":40,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Context.value. A key can be any type that supports equality;","is_multi":false,"pos":{"len":62,"line_nr":41,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 modules should define keys as an unexported type to avoid","is_multi":false,"pos":{"len":59,"line_nr":42,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 collisions.","is_multi":false,"pos":{"len":13,"line_nr":43,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":44,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `done()` returns a channel that's closed when work done on behalf of this","is_multi":false,"pos":{"len":75,"line_nr":45,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 context should be canceled. done may return a closed channel if this context can","is_multi":false,"pos":{"len":82,"line_nr":46,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 never be canceled. Successive calls to done return the same value.","is_multi":false,"pos":{"len":68,"line_nr":47,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 The close of the done channel may happen asynchronously,","is_multi":false,"pos":{"len":58,"line_nr":48,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 after the cancel function returns.","is_multi":false,"pos":{"len":36,"line_nr":49,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":50,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 with_cancel arranges for done to be closed when cancel is called;","is_multi":false,"pos":{"len":67,"line_nr":51,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 with_deadline arranges for done to be closed when the deadline","is_multi":false,"pos":{"len":64,"line_nr":52,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 expires; with_timeout arranges for done to be closed when the timeout","is_multi":false,"pos":{"len":71,"line_nr":53,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 elapses.","is_multi":false,"pos":{"len":10,"line_nr":54,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":55,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `err()` returns an IError based on some conditions","is_multi":false,"pos":{"len":52,"line_nr":56,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If done is not yet closed, err returns none.","is_multi":false,"pos":{"len":46,"line_nr":57,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If done is closed, err returns a non-none error explaining why:","is_multi":false,"pos":{"len":65,"line_nr":58,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 canceled if the context was canceled","is_multi":false,"pos":{"len":38,"line_nr":59,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 or deadline_exceeded if the context's deadline passed.","is_multi":false,"pos":{"len":56,"line_nr":60,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 After err returns a non-none error, successive calls to err return the same error.","is_multi":false,"pos":{"len":84,"line_nr":61,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 str returns the `str` method of the corresponding Context struct","is_multi":false,"pos":{"len":66,"line_nr":70,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\context.v","content":"fn (ctx &Context) str() string","name":"str","parent_name":"Context","return_type":"string","pos":{"len":34,"line_nr":71,"pos":3040,"col":0,"last_line":98},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\context.v","content":"interface Context {\n\tdeadline() ?time.Time\n\tvalue(key Key) ?Any\nmut:\n\tdone() chan int\n\terr() IError\n}","name":"Context","parent_name":"","return_type":"","pos":{"len":105,"line_nr":62,"pos":2865,"col":0,"last_line":68},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 A TimerContext carries a timer and a deadline. It embeds a CancelContext to","is_multi":false,"pos":{"len":77,"line_nr":9,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 implement done and err. It implements cancel by stopping its timer then","is_multi":false,"pos":{"len":73,"line_nr":10,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 delegating to CancelContext.cancel","is_multi":false,"pos":{"len":36,"line_nr":11,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\deadline.v","content":"fn (ctx &TimerContext) deadline() ?time.Time","name":"deadline","parent_name":"TimerContext","return_type":"?time.Time","pos":{"len":48,"line_nr":73,"pos":2529,"col":0,"last_line":75},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\deadline.v","content":"fn (mut ctx TimerContext) done() chan int","name":"done","parent_name":"TimerContext","return_type":"chan int","pos":{"len":45,"line_nr":77,"pos":2604,"col":0,"last_line":79},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\deadline.v","content":"fn (mut ctx TimerContext) err() IError","name":"err","parent_name":"TimerContext","return_type":"IError","pos":{"len":42,"line_nr":81,"pos":2685,"col":0,"last_line":83},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\deadline.v","content":"fn (ctx &TimerContext) value(key Key) ?Any","name":"value","parent_name":"TimerContext","return_type":"?Any","pos":{"len":46,"line_nr":85,"pos":2762,"col":0,"last_line":87},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\deadline.v","content":"fn (mut ctx TimerContext) cancel(remove_from_parent bool, err IError)","name":"cancel","parent_name":"TimerContext","return_type":"void","pos":{"len":73,"line_nr":89,"pos":2848,"col":0,"last_line":96},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\deadline.v","content":"fn (ctx &TimerContext) str() string","name":"str","parent_name":"TimerContext","return_type":"string","pos":{"len":39,"line_nr":98,"pos":3126,"col":0,"last_line":101},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\deadline.v","content":"struct TimerContext {\n\tid string\nmut:\n\tcancel_ctx CancelContext\n\tdeadline   time.Time\n}","name":"TimerContext","parent_name":"","return_type":"","pos":{"len":23,"line_nr":12,"pos":562,"col":0,"last_line":17},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 with_deadline returns a copy of the parent context with the deadline adjusted","is_multi":false,"pos":{"len":79,"line_nr":19,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 to be no later than d. If the parent's deadline is already earlier than d,","is_multi":false,"pos":{"len":76,"line_nr":20,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 with_deadline(parent, d) is semantically equivalent to parent. The returned","is_multi":false,"pos":{"len":77,"line_nr":21,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 context's Done channel is closed when the deadline expires, when the returned","is_multi":false,"pos":{"len":79,"line_nr":22,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 cancel function is called, or when the parent context's Done channel is","is_multi":false,"pos":{"len":73,"line_nr":23,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 closed, whichever happens first.","is_multi":false,"pos":{"len":34,"line_nr":24,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":25,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Canceling this context releases resources associated with it, so code should","is_multi":false,"pos":{"len":78,"line_nr":26,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 call cancel as soon as the operations running in this Context complete.","is_multi":false,"pos":{"len":73,"line_nr":27,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\deadline.v","content":"fn with_deadline(mut parent Context, d time.Time) (Context, CancelFn)","name":"with_deadline","parent_name":"","return_type":"(Context, CancelFn)","pos":{"len":73,"line_nr":28,"pos":1243,"col":0,"last_line":63},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 with_timeout returns with_deadline(parent, time.now().add(timeout)).","is_multi":false,"pos":{"len":70,"line_nr":65,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":66,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Canceling this context releases resources associated with it, so code should","is_multi":false,"pos":{"len":78,"line_nr":67,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 call cancel as soon as the operations running in this Context complete","is_multi":false,"pos":{"len":72,"line_nr":68,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\deadline.v","content":"fn with_timeout(mut parent Context, timeout time.Duration) (Context, CancelFn)","name":"with_timeout","parent_name":"","return_type":"(Context, CancelFn)","pos":{"len":82,"line_nr":69,"pos":2382,"col":0,"last_line":71},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 An EmptyContext is never canceled, has no values.","is_multi":false,"pos":{"len":51,"line_nr":8,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"fn (ctx &EmptyContext) deadline() ?time.Time","name":"deadline","parent_name":"EmptyContext","return_type":"?time.Time","pos":{"len":48,"line_nr":11,"pos":439,"col":0,"last_line":13},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"fn (ctx &EmptyContext) done() chan int","name":"done","parent_name":"EmptyContext","return_type":"chan int","pos":{"len":42,"line_nr":15,"pos":506,"col":0,"last_line":19},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"fn (ctx &EmptyContext) err() IError","name":"err","parent_name":"EmptyContext","return_type":"IError","pos":{"len":39,"line_nr":21,"pos":595,"col":0,"last_line":23},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"fn (ctx &EmptyContext) value(key Key) ?Any","name":"value","parent_name":"EmptyContext","return_type":"?Any","pos":{"len":46,"line_nr":25,"pos":653,"col":0,"last_line":27},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"fn (ctx &EmptyContext) str() string","name":"str","parent_name":"EmptyContext","return_type":"string","pos":{"len":39,"line_nr":29,"pos":718,"col":0,"last_line":31},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"struct EmptyContext {}","name":"EmptyContext","parent_name":"","return_type":"","pos":{"len":23,"line_nr":9,"pos":411,"col":0,"last_line":9},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 str returns a string describing the Context.","is_multi":false,"pos":{"len":46,"line_nr":38,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"fn (ctx &BackgroundContext) str() string","name":"str","parent_name":"BackgroundContext","return_type":"string","pos":{"len":44,"line_nr":39,"pos":944,"col":0,"last_line":41},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"BackgroundContext","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 background returns an empty Context. It is never canceled, has no","is_multi":false,"pos":{"len":67,"line_nr":43,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 values, and has no deadline. It is typically used by the main function,","is_multi":false,"pos":{"len":73,"line_nr":44,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 initialization, and tests, and as the top-level Context for incoming","is_multi":false,"pos":{"len":70,"line_nr":45,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 requests.","is_multi":false,"pos":{"len":11,"line_nr":46,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"fn background() Context","name":"background","parent_name":"","return_type":"Context","pos":{"len":27,"line_nr":47,"pos":1252,"col":0,"last_line":49},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 str returns a string describing the Context.","is_multi":false,"pos":{"len":46,"line_nr":57,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"fn (ctx &TodoContext) str() string","name":"str","parent_name":"TodoContext","return_type":"string","pos":{"len":38,"line_nr":58,"pos":1507,"col":0,"last_line":60},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"TodoContext","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 todo returns an empty Context. Code should use todo when","is_multi":false,"pos":{"len":58,"line_nr":62,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 it's unclear which Context to use or it is not yet available (because the","is_multi":false,"pos":{"len":75,"line_nr":63,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 surrounding function has not yet been extended to accept a Context","is_multi":false,"pos":{"len":68,"line_nr":64,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 parameter).","is_multi":false,"pos":{"len":13,"line_nr":65,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\empty.v","content":"fn todo() Context","name":"todo","parent_name":"","return_type":"Context","pos":{"len":21,"line_nr":66,"pos":1796,"col":0,"last_line":68},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 A ValueContext carries a key-value pair. It implements Value for that key and","is_multi":false,"pos":{"len":79,"line_nr":8,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 delegates all other calls to the embedded Context.","is_multi":false,"pos":{"len":52,"line_nr":9,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\value.v","content":"fn (ctx &ValueContext) deadline() ?time.Time","name":"deadline","parent_name":"ValueContext","return_type":"?time.Time","pos":{"len":48,"line_nr":35,"pos":1155,"col":0,"last_line":37},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\value.v","content":"fn (mut ctx ValueContext) done() chan int","name":"done","parent_name":"ValueContext","return_type":"chan int","pos":{"len":45,"line_nr":39,"pos":1240,"col":0,"last_line":41},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\value.v","content":"fn (mut ctx ValueContext) err() IError","name":"err","parent_name":"ValueContext","return_type":"IError","pos":{"len":42,"line_nr":43,"pos":1318,"col":0,"last_line":45},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\value.v","content":"fn (ctx &ValueContext) value(key Key) ?Any","name":"value","parent_name":"ValueContext","return_type":"?Any","pos":{"len":46,"line_nr":47,"pos":1392,"col":0,"last_line":52},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\value.v","content":"fn (ctx &ValueContext) str() string","name":"str","parent_name":"ValueContext","return_type":"string","pos":{"len":39,"line_nr":54,"pos":1518,"col":0,"last_line":56},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\value.v","content":"struct ValueContext {\n\tkey   Key\n\tvalue Any\nmut:\n\tcontext Context\n}","name":"ValueContext","parent_name":"","return_type":"","pos":{"len":23,"line_nr":10,"pos":493,"col":0,"last_line":15},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 with_value returns a copy of parent in which the value associated with key is","is_multi":false,"pos":{"len":79,"line_nr":17,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 val.","is_multi":false,"pos":{"len":6,"line_nr":18,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":19,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Use context Values only for request-scoped data that transits processes and","is_multi":false,"pos":{"len":77,"line_nr":20,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 APIs, not for passing optional parameters to functions.","is_multi":false,"pos":{"len":57,"line_nr":21,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":22,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 The provided key must be comparable and should not be of type","is_multi":false,"pos":{"len":63,"line_nr":23,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 string or any other built-in type to avoid collisions between","is_multi":false,"pos":{"len":63,"line_nr":24,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 packages using context. Users of with_value should define their own","is_multi":false,"pos":{"len":69,"line_nr":25,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 types for keys","is_multi":false,"pos":{"len":16,"line_nr":26,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\context\\value.v","content":"fn with_value(parent Context, key Key, value Any) Context","name":"with_value","parent_name":"","return_type":"Context","pos":{"len":61,"line_nr":27,"pos":1018,"col":0,"last_line":33},"platform":"cross","kind":"function","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-02-05 19:45:29"}