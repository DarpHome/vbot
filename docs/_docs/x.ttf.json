{"module_name":"x.ttf","description":"# TTF font utility\n\n## introduction\n\nThis module is designed to perform two main task\n\n- Load the font file\n- Render text using a TTF font\n\nThe render system can be single or multiple, for example it is possible to have a bitmap render and a HW accelerated render.\n\n## TTF loader\n\nThis part of the module do a simple task, load a TTF file and preprocess all the loaded data in order to simplify the rendering phase.\n\nLet's start with a simple snippet of code that load a font from the disk:\n\n\n```v ignore\nmut ttf_font := ttf.TTF_File{}\nttf_font.buf = os.read_bytes(\"arial.ttf\") or { panic(err) }\nttf_font.init()\n```\n\n> **Note**\n> The font must be passed to the `TTF_file` as RAM buffer.\n\nAt this point the font \"arial\" is loaded and parsed and if it is a valid TTF font it is\nready for the rendering.\nWe can get some quick info on the font as string using the `get_info_string` function:\n\n```v oksyntax\nprintln(ttf_font.get_info_string())\n```\n\nproduces an output like this:\n\n```\n----- Font Info -----\nfont_family     : Arial\nfont_sub_family : Normal\nfull_name       : Arial\npostscript_name : ArialMT\nversion         : 1\nfont_revision   : 5.06\nmagic_number    : 5f0f3cf5\nflags           : 81b\ncreated  unixTS : 649950890\nmodified unixTS : 1282151447\nunits_per_em    : 2048\nbox             : [x_min:-1361, y_min:-665, x_Max:4096, y_Max:2060]\nmac_style       : 0\n-----------------------\n```\n\nOnce loaded a font the `TTF_File` struct is filled with the font data and texts can be rendered.\nAt high level no more action are required to use the loaded font.\nMultiple fonts can be loaded without problems at the same time.\n\n## TTF Bitmap render\n\nIn this module it is possible to have different renders running at the same time.\nAt the present time all the rendering are made on the CPU, sokol is used only to draw the\nrendered text to the screen.\nLet's start with a simple snippet of code:\n\n```v oksyntax\nimport os\nimport x.ttf\n\nfn main() {\nmut ttf_font := ttf.TTF_File{}\nttf_font.buf = os.read_bytes('arial.ttf') or { panic(err) }\nttf_font.init()\n// print font info\nprintln(ttf_font.get_info_string())\n}\n```\n\nThis simple code load a TTF font and display its basic information.\n\n### draw_text\n\nThe draw text function draw simple strings without indentation or other imagination tasks.\nAt this point we can render a simple text:\n\n```v oksyntax\nimport os\nimport x.ttf\n\nfn main() {\nmut ttf_font := ttf.TTF_File{}\nttf_font.buf = os.read_bytes('arial.ttf') or { panic(err) }\nttf_font.init()\n// print font info\nprintln(ttf_font.get_info_string())\n\nbmp_width := 200\nbmp_height := 64\nbmp_layers := 4 // number of planes for an RGBA buffer\n// memory size of the buffer\nbmp_size := bmp_width * bmp_height * bmp_layers\n\nfont_size := 32 // font size in points\ndevice_dpi := 72 // default screen DPI\n// Formula for scale calculation\n// scaler := (font_size * device dpi) / (72dpi * em_unit)\nscale := f32(font_size * device_dpi) / f32(72 * ttf_font.units_per_em)\n// height of the font to use in the buffer to separate the lines\ny_base := int((ttf_font.y_max - ttf_font.y_min) * scale)\n\n// declare the bitmap struct\nmut bmp := ttf.BitMap{\ntf: &ttf_font\nbuf: malloc(bmp_size)\nbuf_size: bmp_size\nwidth: bmp_width\nheight: bmp_height\nbp: bmp_layers\ncolor: 0x000000_FF // RGBA black\nscale: scale\n}\nbmp.init_filler()\nbmp.clear()\nbmp.set_pos(10, y_base)\nbmp.draw_text('Test Text!')\nbmp.save_as_ppm('test.ppm')\n}\n```\n\nThis is the low level render that draw the text on a bitmap and save the bitmap on a disk as\n`.ppm` file.\n\n> **Note**\n> The render in this case is a raw rendering without any postfiltering or other processing.\n\nUsing the low level rendering you need to manage all the amenities like allocate and release\nmemory and other tasks like calc the character dimensions.\n\nYou can specify the style for the text rendering in the `BitMap` struct::\n\n```v\nenum Style {\noutline\noutline_aliased\nfilled // default style\nraw\n}\n```\n\nUse this level only if you want achieve particular result on text rendering.\n\n### draw_text_block\n\nDraw text block draw a justified and indented block of multiline text in the bitmap.\n\n```v oksyntax\nimport os\nimport x.ttf\n\nfn main() {\nmut ttf_font := ttf.TTF_File{}\nttf_font.buf = os.read_bytes('arial.ttf') or { panic(err) }\nttf_font.init()\n// print font info\nprintln(ttf_font.get_info_string())\n\nbmp_width := 200\nbmp_height := 200\nbmp_layers := 4 // number of planes for an RGBA buffer\n// memory size of the buffer\nbmp_size := bmp_width * bmp_height * bmp_layers\n\nfont_size := 32 // font size in points\ndevice_dpi := 72 // default screen DPI\n// Formula for scale calculation\n// scaler := (font_size * device dpi) / (72dpi * em_unit)\nscale := f32(font_size * device_dpi) / f32(72 * ttf_font.units_per_em)\n// height of the font to use in the buffer to separate the lines\ny_base := int((ttf_font.y_max - ttf_font.y_min) * scale)\n\ntext := \"Today it is a good day!\nTomorrow I'm not so sure :(\nBut Vwill prevail for sure, V is the way!!\nòàèì@ò!£$%&\n\"\n// declare the bitmap struct\nmut bmp := ttf.BitMap{\ntf: &ttf_font\nbuf: malloc(bmp_size)\nbuf_size: bmp_size\nwidth: bmp_width\nheight: bmp_height\nbp: bmp_layers\ncolor: 0x000000_FF // RGBA black\nscale: scale\n}\nbmp.init_filler()\nbmp.clear()\nbmp.justify = true\nbmp.align = .left\nbmp.draw_text_block(text, x: 0, y: 0, w: bmp_width - 20, h: bmp_height)\nbmp.save_as_ppm('test.ppm')\n}\n```\n\nThis is the low level render that draw text block on the bitmap.\nA text block is defined from a `Text_block` struct:\n\n```v\nstruct Text_block {\nx         int  // x position of the left high corner\ny         int  // y position of the left high corner\nw         int  // width of the text block\nh         int  // height of the text block\ncut_lines bool = true // force to cut the line if the length is over the text block width\n}\n```\n\nand use the following bitmap fields:\n\n```v ignore\nstyle              Style      = .filled // default style\nalign              Text_align = .left   // default text align\njustify            bool\t\t\t\t    // justify text flag, default deactivated\njustify_fill_ratio f32        = 0.5     // justify fill ratio, if the ratio of the filled\n// row is >= of this then justify the text\n```\n\nIt is possible to modify these parameters to obtain the desired effect on the text rendering.\n\n## TTF Sokol render\n\nThe sokol render use the bitmap render to create the text and the `gg` functions to render\nthe text to the screen.\nIt is simpler to use in a `gg app` than the raw bitmap render.\nEach single text rendered need its own reder to be declared, after you can modify it.\nHere a simple example of the usage:\n\n```v oksyntax\nimport gg\nimport gx\nimport sokol.sapp\nimport sokol.sgl\nimport sokol.gfx\nimport x.ttf\nimport os\n\nconst win_width = 600\nconst win_height = 700\nconst bg_color = gx.white\nconst font_paths = [\n'arial.ttf',\n]\n\nstruct App_data {\npub mut:\ngg        &gg.Context = unsafe { nil }\nsg_img    gfx.Image\ninit_flag bool\nframe_c   int\n\ntf         []ttf.TTF_File\nttf_render []ttf.TTF_render_Sokol\n}\n\nfn my_init(mut app App_data) {\napp.init_flag = true\n}\n\nfn draw_frame(mut app App_data) {\ncframe_txt := 'Current Frame: ${app.frame_c}'\n\napp.gg.begin()\n\nsgl.defaults()\nsgl.matrix_mode_projection()\nsgl.ortho(0.0, f32(sapp.width()), f32(sapp.height()), 0.0, -1.0, 1.0)\n\n// draw text only if the app is already initialized\nif app.init_flag == true {\n// update the text\nmut txt1 := &app.ttf_render[0]\ntxt1.destroy_texture()\ntxt1.create_text(cframe_txt, 43)\ntxt1.create_texture()\ntxt1.draw_text_bmp(app.gg, 30, 60)\n}\napp.frame_c++\napp.gg.end()\n}\n\nfn main() {\nmut app := &App_data{}\n\napp.gg = gg.new_context(\nwidth: win_width\nheight: win_height\ncreate_window: true\nwindow_title: 'Test TTF module'\nuser_data: app\nbg_color: bg_color\nframe_fn: draw_frame\ninit_fn: my_init\n)\n\n// load TTF fonts\nfor font_path in font_paths {\nmut tf := ttf.TTF_File{}\ntf.buf = os.read_bytes(font_path) or { panic(err) }\nprintln('TrueTypeFont file [${font_path}] len: ${tf.buf.len}')\ntf.init()\nprintln(tf.get_info_string())\napp.tf << tf\n}\n\n// TTF render 0 Frame counter\napp.ttf_render << &ttf.TTF_render_Sokol{\nbmp: &ttf.BitMap{\ntf: &app.tf[0]\nbuf: unsafe { malloc(32000000) }\nbuf_size: (32000000)\ncolor: 0xFF0000FF\n// style: .raw\n}\n}\n\napp.gg.run()\n}\n```\n","contents":[{"attributes":{},"comments":[{"text":"\u0001 text align","is_multi":false,"pos":{"len":12,"line_nr":17,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\common.v","content":"enum Text_align {\n\tleft\n\tcenter\n\tright\n\tjustify\n}","name":"Text_align","parent_name":"","return_type":"","pos":{"len":19,"line_nr":18,"pos":400,"col":0,"last_line":23},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 draw style","is_multi":false,"pos":{"len":12,"line_nr":25,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\common.v","content":"enum Style {\n\toutline\n\toutline_aliased\n\tfilled\n\traw\n}","name":"Style","parent_name":"","return_type":"","pos":{"len":14,"line_nr":26,"pos":469,"col":0,"last_line":31},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* smooth draw functions\n*\n*****************************************************************************","is_multi":true,"pos":{"len":183,"line_nr":209,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 aline draw an aliased line on the bitmap","is_multi":false,"pos":{"len":42,"line_nr":214,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) aline(in_x0 int, in_y0 int, in_x1 int, in_y1 int, c u32)","name":"aline","parent_name":"BitMap","return_type":"void","pos":{"len":80,"line_nr":215,"pos":5875,"col":0,"last_line":302},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) box(in_x0 int, in_y0 int, in_x1 int, in_y1 int, c u32)","name":"box","parent_name":"BitMap","return_type":"void","pos":{"len":78,"line_nr":389,"pos":9198,"col":0,"last_line":394},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* Utility\n*\n*****************************************************************************","is_multi":true,"pos":{"len":169,"line_nr":47,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 clear clear the bitmap with 0 bytes","is_multi":false,"pos":{"len":37,"line_nr":52,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) clear()","name":"clear","parent_name":"BitMap","return_type":"void","pos":{"len":31,"line_nr":53,"pos":2100,"col":0,"last_line":58},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) clear_filler()","name":"clear_filler","parent_name":"BitMap","return_type":"void","pos":{"len":38,"line_nr":102,"pos":3497,"col":0,"last_line":106},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) draw_glyph(index u16) (int, int)","name":"draw_glyph","parent_name":"BitMap","return_type":"(int, int)","pos":{"len":56,"line_nr":704,"pos":18370,"col":0,"last_line":823},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) draw_text(in_string string) (int, int)","name":"draw_text","parent_name":"BitMap","return_type":"(int, int)","pos":{"len":62,"line_nr":629,"pos":16090,"col":0,"last_line":702},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 write out a text","is_multi":false,"pos":{"len":18,"line_nr":35,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\text_block.v","content":"fn (mut bmp BitMap) draw_text_block(text string, block Text_block)","name":"draw_text_block","parent_name":"BitMap","return_type":"void","pos":{"len":70,"line_nr":36,"pos":1083,"col":0,"last_line":119},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) exec_filler()","name":"exec_filler","parent_name":"BitMap","return_type":"void","pos":{"len":37,"line_nr":108,"pos":3596,"col":0,"last_line":131},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) fline(in_x0 int, in_y0 int, in_x1 int, in_y1 int, c u32)","name":"fline","parent_name":"BitMap","return_type":"void","pos":{"len":80,"line_nr":133,"pos":4110,"col":0,"last_line":182},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) get_bbox(in_string string) (int, int)","name":"get_bbox","parent_name":"BitMap","return_type":"(int, int)","pos":{"len":61,"line_nr":534,"pos":13025,"col":0,"last_line":603},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* TTF Query functions\n*\n*****************************************************************************","is_multi":true,"pos":{"len":181,"line_nr":457,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) get_chars_bbox(in_string string) []int","name":"get_chars_bbox","parent_name":"BitMap","return_type":"[]int","pos":{"len":62,"line_nr":462,"pos":11074,"col":0,"last_line":532},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\text_block.v","content":"fn (mut dev BitMap) get_justify_space_cw(txt string, w int, block_w int, space_cw int) f32","name":"get_justify_space_cw","parent_name":"BitMap","return_type":"f32","pos":{"len":94,"line_nr":22,"pos":685,"col":0,"last_line":33},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\common.v","content":"fn (mut bmp BitMap) get_raw_bytes() []u8","name":"get_raw_bytes","parent_name":"BitMap","return_type":"[]u8","pos":{"len":44,"line_nr":116,"pos":2421,"col":0,"last_line":126},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* Filler functions\n*\n*****************************************************************************","is_multi":true,"pos":{"len":178,"line_nr":86,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) init_filler()","name":"init_filler","parent_name":"BitMap","return_type":"void","pos":{"len":37,"line_nr":91,"pos":3292,"col":0,"last_line":100},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* draw functions\n*\n*****************************************************************************","is_multi":true,"pos":{"len":176,"line_nr":304,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) line(in_x0 int, in_y0 int, in_x1 int, in_y1 int, c u32)","name":"line","parent_name":"BitMap","return_type":"void","pos":{"len":79,"line_nr":309,"pos":7702,"col":0,"last_line":387},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* Draw functions\n*\n*****************************************************************************","is_multi":true,"pos":{"len":176,"line_nr":184,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) plot(x int, y int, c u32) bool","name":"plot","parent_name":"BitMap","return_type":"bool","pos":{"len":54,"line_nr":190,"pos":5226,"col":0,"last_line":207},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) quadratic(in_x0 int, in_y0 int, in_x1 int, in_y1 int, in_cx int, in_cy int, c u32)","name":"quadratic","parent_name":"BitMap","return_type":"void","pos":{"len":106,"line_nr":396,"pos":9446,"col":0,"last_line":455},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 write out a .ppm file","is_multi":false,"pos":{"len":23,"line_nr":86,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\common.v","content":"fn (mut bmp BitMap) save_as_ppm(file_name string)","name":"save_as_ppm","parent_name":"BitMap","return_type":"void","pos":{"len":53,"line_nr":87,"pos":1710,"col":0,"last_line":114},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\common.v","content":"fn (mut bmp BitMap) save_raw_data(file_name string)","name":"save_raw_data","parent_name":"BitMap","return_type":"void","pos":{"len":55,"line_nr":128,"pos":2624,"col":0,"last_line":130},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set draw position in the buffer","is_multi":false,"pos":{"len":33,"line_nr":72,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) set_pos(x f32, y f32)","name":"set_pos","parent_name":"BitMap","return_type":"void","pos":{"len":45,"line_nr":73,"pos":2758,"col":0,"last_line":76},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set the rotation angle in radiants","is_multi":false,"pos":{"len":36,"line_nr":78,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (mut bmp BitMap) set_rotation(a f32)","name":"set_rotation","parent_name":"BitMap","return_type":"void","pos":{"len":43,"line_nr":79,"pos":2891,"col":0,"last_line":84},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 transform matrix applied to the char","is_multi":false,"pos":{"len":38,"line_nr":66,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (bmp &BitMap) trf_ch(p &Point) (int, int)","name":"trf_ch","parent_name":"BitMap","return_type":"(int, int)","pos":{"len":48,"line_nr":67,"pos":2513,"col":0,"last_line":70},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 transform matrix applied to the text","is_multi":false,"pos":{"len":38,"line_nr":60,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"fn (bmp &BitMap) trf_txt(p &Point) (int, int)","name":"trf_txt","parent_name":"BitMap","return_type":"(int, int)","pos":{"len":49,"line_nr":61,"pos":2262,"col":0,"last_line":64},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_bmp.v","content":"struct BitMap {\npub mut:\n\ttf       &TTF_File = unsafe { nil }\n\tbuf      &u8       = unsafe { nil } // pointer to the memory buffer\n\tbuf_size int // allocated buf size in bytes\n\twidth    int = 1 // width of the buffer\n\theight   int = 1 // height of the buffer\n\tbp       int = 4 // byte per pixel of the buffer\n\tbg_color u32 = 0xFFFFFF_00 // background RGBA format\n\tcolor    u32 = 0x000000_FF // RGBA format\n\tscale    f32 = 1.0 // internal usage!!\n\tscale_x  f32 = 1.0 // X scale of the single glyph\n\tscale_y  f32 = 1.0 // Y scale of the single glyph\n\tangle    f32 = 0.0 // angle of rotation of the bitmap\n\t// spaces\n\tspace_cw   f32 = 1.0 // width of the space glyph internal usage!!\n\tspace_mult f32 = f32(0.0) // 1.0/16.0  // space between letter, is a multiplier for a standard space ax\n\t// used only by internal text rendering!!\n\ttr_matrix          []f32      = [f32(1), 0, 0, 0, 1, 0, 0, 0, 0] // transformation matrix\n\tch_matrix          []f32      = [f32(1), 0, 0, 0, 1, 0, 0, 0, 0] // character matrix\n\tstyle              Style      = .filled // default style\n\talign              Text_align = .left // default text align\n\tjustify            bool // justify text flag, default deactivated\n\tjustify_fill_ratio f32 = 0.5 // justify fill ratio, if the ratio of the filled row is >= of this then justify the text\n\tfiller             [][]int    // filler buffer for the renderer\n\t// flag to force font embedded metrics\n\tuse_font_metrics bool\n}","name":"BitMap","parent_name":"","return_type":"","pos":{"len":17,"line_nr":18,"pos":440,"col":0,"last_line":45},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* Colors\n*\n*****************************************************************************","is_multi":true,"pos":{"len":168,"line_nr":157,"pos":0,"col":0,"last_line":0}},{"text":"\n@[inline]\npub fn (mut dev BitMap) get_color(x int, y int) (int, int, int, int){\n\tif x < 0 || x >= dev.width || y < 0 || y >= dev.height {\n\t\treturn 0,0,0,0\n\t}\n\tmut i := (x + y * dev.width)*dev.bp\n\tunsafe{\n\t\treturn dev.buf[i], dev.buf[i+1], dev.buf[i+2], dev.buf[i+3]\n\t}\n}\n\n@[inline]\npub fn (mut dev BitMap) get_color_u32(x int, y int) u32{\n\tr, g, b, a := dev.get_color(x, y)\n\tunsafe{\n\t\treturn u32(r<<24) | u32(g<<16) | u32(b<<8) | u32(a)\n\t}\n}\n","is_multi":true,"pos":{"len":443,"line_nr":162,"pos":0,"col":0,"last_line":0}},{"text":"*****************************************************************************\n*\n* Drawing\n*\n*****************************************************************************","is_multi":true,"pos":{"len":169,"line_nr":182,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\common.v","content":"fn color_multiply_alpha(c u32, level f32) u32","name":"color_multiply_alpha","parent_name":"","return_type":"u32","pos":{"len":49,"line_nr":188,"pos":3873,"col":0,"last_line":190},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\common.v","content":"fn color_multiply(c u32, level f32) u32","name":"color_multiply","parent_name":"","return_type":"u32","pos":{"len":43,"line_nr":193,"pos":3973,"col":0,"last_line":204},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* Render functions\n*\n*****************************************************************************","is_multi":true,"pos":{"len":178,"line_nr":29,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_sokol_cpu.v","content":"fn (mut tf_skl TTF_render_Sokol) format_texture()","name":"format_texture","parent_name":"TTF_render_Sokol","return_type":"void","pos":{"len":53,"line_nr":34,"pos":914,"col":0,"last_line":36},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_sokol_cpu.v","content":"fn (mut tf_skl TTF_render_Sokol) create_text(in_txt string, in_font_size f32)","name":"create_text","parent_name":"TTF_render_Sokol","return_type":"void","pos":{"len":81,"line_nr":38,"pos":1002,"col":0,"last_line":72},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_sokol_cpu.v","content":"fn (mut tf_skl TTF_render_Sokol) create_text_block(in_txt string, in_w int, in_h int, in_font_size f32)","name":"create_text_block","parent_name":"TTF_render_Sokol","return_type":"void","pos":{"len":107,"line_nr":74,"pos":2115,"col":0,"last_line":111},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* Sokol Render functions\n*\n*****************************************************************************","is_multi":true,"pos":{"len":184,"line_nr":113,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_sokol_cpu.v","content":"fn (mut tf_skl TTF_render_Sokol) create_texture()","name":"create_texture","parent_name":"TTF_render_Sokol","return_type":"void","pos":{"len":53,"line_nr":118,"pos":3514,"col":0,"last_line":150},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_sokol_cpu.v","content":"fn (tf_skl TTF_render_Sokol) destroy_texture()","name":"destroy_texture","parent_name":"TTF_render_Sokol","return_type":"void","pos":{"len":50,"line_nr":152,"pos":4224,"col":0,"last_line":155},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Use only if usage: .dynamic","is_multi":false,"pos":{"len":29,"line_nr":157,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_sokol_cpu.v","content":"fn (mut tf_skl TTF_render_Sokol) update_text_texture()","name":"update_text_texture","parent_name":"TTF_render_Sokol","return_type":"void","pos":{"len":58,"line_nr":158,"pos":4381,"col":0,"last_line":166},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_sokol_cpu.v","content":"fn (tf_skl TTF_render_Sokol) draw_text_bmp(ctx &gg.Context, x f32, y f32)","name":"draw_text_bmp","parent_name":"TTF_render_Sokol","return_type":"void","pos":{"len":77,"line_nr":168,"pos":4660,"col":0,"last_line":219},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\render_sokol_cpu.v","content":"struct TTF_render_Sokol {\npub mut:\n\tbmp &BitMap = unsafe { nil } // Base bitmap render\n\t// rendering fields\n\tsg_img       gfx.Image   // sokol image\n\tsg_smp       gfx.Sampler // sokol sampler\n\tscale_reduct f32 = 2.0 // scale of the cpu texture for filtering\n\tdevice_dpi   int = 72 // device DPI\n}","name":"TTF_render_Sokol","parent_name":"","return_type":"","pos":{"len":27,"line_nr":19,"pos":429,"col":0,"last_line":27},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*********************************************************************\n*\n* BMP render module utility functions\n*\n* Copyright (c) 2021 Dario Deledda. All rights reserved.\n* Use of this source code is governed by an MIT license\n* that can be found in the LICENSE file.\n*\n* Note:\n*\n* TODO:\n*********************************************************************","is_multi":true,"pos":{"len":355,"line_nr":2,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\text_block.v","content":"struct Text_block {\n\tx         int  // x position of the left high corner\n\ty         int  // y position of the left high corner\n\tw         int  // width of the text block\n\th         int  // height of the text block\n\tcut_lines bool = true // force to cut the line if the length is over the text block width\n}","name":"Text_block","parent_name":"","return_type":"","pos":{"len":21,"line_nr":14,"pos":372,"col":0,"last_line":20},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* TTF_File structs\n*\n*****************************************************************************","is_multi":true,"pos":{"len":178,"line_nr":40,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (mut tf TTF_File) init()","name":"init","parent_name":"TTF_File","return_type":"void","pos":{"len":31,"line_nr":98,"pos":2664,"col":0,"last_line":112},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* TTF_File metrics and glyph\n*\n*****************************************************************************","is_multi":true,"pos":{"len":188,"line_nr":150,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (mut tf TTF_File) get_horizontal_metrics(glyph_index u16) (int, int)","name":"get_horizontal_metrics","parent_name":"TTF_File","return_type":"(int, int)","pos":{"len":75,"line_nr":155,"pos":4018,"col":0,"last_line":178},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (mut tf TTF_File) glyph_count() u16","name":"glyph_count","parent_name":"TTF_File","return_type":"u16","pos":{"len":42,"line_nr":208,"pos":5507,"col":0,"last_line":215},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (mut tf TTF_File) read_glyph_dim(index u16) (int, int, int, int)","name":"read_glyph_dim","parent_name":"TTF_File","return_type":"(int, int, int, int)","pos":{"len":71,"line_nr":217,"pos":5696,"col":0,"last_line":239},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (mut tf TTF_File) get_ttf_widths() ([]int, int, int)","name":"get_ttf_widths","parent_name":"TTF_File","return_type":"([]int, int, int)","pos":{"len":59,"line_nr":241,"pos":6335,"col":0,"last_line":291},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (mut tf TTF_File) read_glyph(index u16) Glyph","name":"read_glyph","parent_name":"TTF_File","return_type":"Glyph","pos":{"len":52,"line_nr":293,"pos":7623,"col":0,"last_line":347},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* CMAPS 0/4\n*\n*****************************************************************************","is_multi":true,"pos":{"len":171,"line_nr":831,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (mut tf TTF_File) map_code(char_code int) u16","name":"map_code","parent_name":"TTF_File","return_type":"u16","pos":{"len":52,"line_nr":836,"pos":21261,"col":0,"last_line":849},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (mut tf TTF_File) reset_kern()","name":"reset_kern","parent_name":"TTF_File","return_type":"void","pos":{"len":37,"line_nr":1071,"pos":27025,"col":0,"last_line":1075},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (mut tf TTF_File) next_kern(glyph_index int) (int, int)","name":"next_kern","parent_name":"TTF_File","return_type":"(int, int)","pos":{"len":62,"line_nr":1077,"pos":27121,"col":0,"last_line":1086},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* TTF_File Utility\n*\n*****************************************************************************","is_multi":true,"pos":{"len":178,"line_nr":1125,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"fn (tf TTF_File) get_info_string() string","name":"get_info_string","parent_name":"TTF_File","return_type":"string","pos":{"len":45,"line_nr":1130,"pos":28571,"col":0,"last_line":1147},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"struct TTF_File {\npub mut:\n\tbuf                     []u8\n\tpos                     u32\n\tlength                  u16\n\tscalar_type             u32\n\tsearch_range            u16\n\tentry_selector          u16\n\trange_shift             u16\n\ttables                  map[string]Offset_Table\n\tversion                 f32\n\tfont_revision           f32\n\tchecksum_adjustment     u32\n\tmagic_number            u32\n\tflags                   u16\n\tunits_per_em            u16\n\tcreated                 u64\n\tmodified                u64\n\tx_min                   f32\n\ty_min                   f32\n\tx_max                   f32\n\ty_max                   f32\n\tmac_style               u16\n\tlowest_rec_ppem         u16\n\tfont_direction_hint     i16\n\tindex_to_loc_format     i16\n\tglyph_data_format       i16\n\tfont_family             string\n\tfont_sub_family         string\n\tfull_name               string\n\tpostscript_name         string\n\tcmaps                   []TrueTypeCmap\n\tascent                  i16\n\tdescent                 i16\n\tline_gap                i16\n\tadvance_width_max       u16\n\tmin_left_side_bearing   i16\n\tmin_right_side_bearing  i16\n\tx_max_extent            i16\n\tcaret_slope_rise        i16\n\tcaret_slope_run         i16\n\tcaret_offset            i16\n\tmetric_data_format      i16\n\tnum_of_long_hor_metrics u16\n\tkern                    []Kern0Table\n\t// panose\n\tpanose_array []u8 = []u8{len: 12, init: 0}\n\t// cache\n\tglyph_cache map[int]Glyph\n\t// font widths array scale for PDF export\n\twidth_scale f32 = 1.0\n}","name":"TTF_File","parent_name":"","return_type":"","pos":{"len":19,"line_nr":45,"pos":1172,"col":0,"last_line":96},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"*****************************************************************************\n*\n* TTF_File Glyph Structs\n*\n*****************************************************************************","is_multi":true,"pos":{"len":184,"line_nr":114,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"struct Point {\npub mut:\n\tx        int\n\ty        int\n\ton_curve bool\n}","name":"Point","parent_name":"","return_type":"","pos":{"len":16,"line_nr":119,"pos":3303,"col":0,"last_line":124},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\x\\ttf\\ttf.v","content":"struct Glyph {\npub mut:\n\tg_type             u16 = ttf.g_type_simple\n\tcontour_ends       []u16\n\tnumber_of_contours i16\n\tpoints             []Point\n\tx_min              i16\n\tx_max              i16\n\ty_min              i16\n\ty_max              i16\n\tvalid_glyph        bool\n\tcomponents         []Component\n}","name":"Glyph","parent_name":"","return_type":"","pos":{"len":16,"line_nr":136,"pos":3519,"col":0,"last_line":148},"platform":"cross","kind":"struct_","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:44"}