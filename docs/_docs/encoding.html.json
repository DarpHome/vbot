{"module_name":"encoding.html","contents":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\html\\escape.v","content":"struct EscapeConfig {\n\tquote bool = true\n}","name":"EscapeConfig","parent_name":"","return_type":"","pos":{"len":23,"line_nr":6,"pos":59,"col":0,"last_line":8},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\html\\escape.v","content":"struct UnescapeConfig {\n\tEscapeConfig\n\tall bool\n}","name":"UnescapeConfig","parent_name":"","return_type":"","pos":{"len":25,"line_nr":11,"pos":117,"col":0,"last_line":14},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 escape converts special characters in the input, specifically \"<\", \">\", and \"&\"","is_multi":false,"pos":{"len":81,"line_nr":21,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 to HTML-safe sequences. If `quote` is set to true (which is default), quotes in","is_multi":false,"pos":{"len":81,"line_nr":22,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 HTML will also be translated. Both double and single quotes will be affected.","is_multi":false,"pos":{"len":79,"line_nr":23,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 **Note:** escape() supports funky accents by doing nothing about them. V's UTF-8","is_multi":false,"pos":{"len":82,"line_nr":24,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 support through `string` is robust enough to deal with these cases.","is_multi":false,"pos":{"len":69,"line_nr":25,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\html\\escape.v","content":"fn escape(input string, config EscapeConfig) string","name":"escape","parent_name":"","return_type":"string","pos":{"len":55,"line_nr":26,"pos":807,"col":0,"last_line":32},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 unescape converts entities like \"&lt;\" to \"<\". By default it is the converse of `escape`.","is_multi":false,"pos":{"len":91,"line_nr":34,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If `all` is set to true, it handles named, numeric, and hex values - for example,","is_multi":false,"pos":{"len":83,"line_nr":35,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `'&apos;'`, `'&#39;'`, and `'&#x27;'` then unescape to \"'\".","is_multi":false,"pos":{"len":61,"line_nr":36,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\encoding\\html\\escape.v","content":"fn unescape(input string, config UnescapeConfig) string","name":"unescape","parent_name":"","return_type":"string","pos":{"len":59,"line_nr":37,"pos":1260,"col":0,"last_line":45},"platform":"cross","kind":"function","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-02-05 19:45:31"}