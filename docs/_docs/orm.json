{"module_name":"orm","description":"# ORM\n\n## Null\n\nUse option fields in V structs for fields which can be NULL.  Regular, non-option fields are defied as NOT NULL when creating tables.\n\n## Attributes\n\n### Structs\n\n- `[table: 'name']` sets a custom table name\n\n### Fields\n\n- `[primary]` sets the field as the primary key\n- `[unique]` sets the field as unique\n- `[unique: 'foo']` adds the field to a unique group\n- `[skip]` or `[sql: '-']` field will be skipped\n- `[sql: type]` where `type` is a V type such as `int` or `f64`\n- `[sql: serial]` lets the DB backend choose a column type for a auto-increment field\n- `[sql: 'name']` sets a custom column name for the field\n- `[sql_type: 'SQL TYPE']` sets the sql type which is used in sql\n- `[default: 'raw_sql]` inserts `raw_sql` verbatim in a \"DEFAULT\" clause when\ncreate a new table, allowing for values like `CURRENT_TIME`- `[fkey: 'parent_id']` sets foreign key for an field which holds an array\n\n## Usage\n\n\n```v ignore\nimport time\n\n@[table: 'foos']\nstruct Foo {\nid          int         @[primary; sql: serial]\nname        string\ncreated_at  time.Time   @[default: 'CURRENT_TIME']\nupdated_at  ?string     @[sql_type: 'TIMESTAMP']\ndeleted_at  ?time.Time\nchildren    []Child     @[fkey: 'parent_id']\n}\n\nstruct Child {\nid        int    @[primary; sql: serial]\nparent_id int\nname      string\n}\n```\n\n### Create\n\n```v ignore\nsql db {\ncreate table Foo\n}!\n```\n\n### Drop\n\n```v ignore\nsql db {\ndrop table Foo\n}!\n```\n\n### Insert\n\n```v ignore\nfoo := Foo{\nname:       'abc'\ncreated_at: time.now()\n// updated_at defaults to none\n// deleted_at defaults to none\nchildren: [\nChild{\nname: 'abc'\n},\nChild{\nname: 'def'\n},\n]\n}\n\nsql db {\ninsert foo into Foo\n}!\n```\n\nWhen inserting, `[sql: serial]` fields, and fields with a `[default: 'raw_sql']`\nattribute are not sent to the database when the value being sent is the default\nfor the V struct field (e.g., 0 int, or an empty string).  This allows the\ndatabase to insert default values for auto-increment fields and where you have\nspecified a default.\n\n### Update\n\n```v ignore\nsql db {\nupdate Foo set updated_at = time.now() where name == 'abc' && updated_at is none\n}!\n```\n\nNote that `is none` and `!is none` can be used to select for NULL fields.\n\n### Delete\n```v ignore\nsql db {\ndelete from Foo where id > 10\n}!\n```\n\n### Select\n```v ignore\nresult := sql db {\nselect from Foo where id == 1\n}!\n```\n```v ignore\nresult := sql db {\nselect from Foo where id > 1 && name != 'lasanha' limit 5\n}!\n```\n```v ignore\nresult := sql db {\nselect from Foo where id > 1 order by id\n}!\n```\n\n### Example\n```v ignore\nimport db.pg\n\nstruct Member {\nid         string @[default: 'gen_random_uuid()'; primary; sql_type: 'uuid']\nname       string\ncreated_at string @[default: 'CURRENT_TIMESTAMP'; sql_type: 'TIMESTAMP']\n}\n\nfn main() {\ndb := pg.connect(pg.Config{\nhost: 'localhost'\nport: 5432\nuser: 'user'\npassword: 'password'\ndbname: 'dbname'\n})!\n\ndefer {\ndb.close()\n}\n\nsql db {\ncreate table Member\n}!\n\nnew_member := Member{\nname: 'John Doe'\n}\n\nsql db {\ninsert new_member into Member\n}!\n\nselected_members := sql db {\nselect from Member where name == 'John Doe' limit 1\n}!\njohn_doe := selected_members.first()\n\nsql db {\nupdate Member set name = 'Hitalo' where id == john_doe.id\n}!\n}\n```\n","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const num64 = [typeof[i64]().idx, typeof[u64]().idx]","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":4,"pos":25,"col":0,"last_line":4},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const nums = [\n\ttypeof[i8]().idx,\n\ttypeof[i16]().idx,\n\ttypeof[int]().idx,\n\ttypeof[u8]().idx,\n\ttypeof[u16]().idx,\n\ttypeof[u32]().idx,\n\ttypeof[bool]().idx,\n]","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":5,"pos":82,"col":0,"last_line":13},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const float = [\n\ttypeof[f32]().idx,\n\ttypeof[f64]().idx,\n]","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":14,"pos":242,"col":0,"last_line":17},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const type_string = typeof[string]().idx","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":18,"pos":304,"col":0,"last_line":18},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const serial = -1","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":19,"pos":349,"col":0,"last_line":19},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const time_ = -2","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":20,"pos":371,"col":0,"last_line":20},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const enum_ = -3","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":21,"pos":392,"col":0,"last_line":21},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const type_idx = {\n\t'i8':     typeof[i8]().idx\n\t'i16':    typeof[i16]().idx\n\t'int':    typeof[int]().idx\n\t'i64':    typeof[i64]().idx\n\t'u8':     typeof[u8]().idx\n\t'u16':    typeof[u16]().idx\n\t'u32':    typeof[u32]().idx\n\t'u64':    typeof[u64]().idx\n\t'f32':    typeof[f32]().idx\n\t'f64':    typeof[f64]().idx\n\t'bool':   typeof[bool]().idx\n\t'string': typeof[string]().idx\n}","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":22,"pos":413,"col":0,"last_line":35},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const string_max_len = 2048","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":36,"pos":788,"col":0,"last_line":36},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"const null_primitive = Primitive(Null{})","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":37,"pos":820,"col":0,"last_line":37},"platform":"cross","kind":"const_group","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Constants","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"const_group","public":false,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"type Primitive = InfixType\n\t| Null\n\t| bool\n\t| f32\n\t| f64\n\t| i16\n\t| i64\n\t| i8\n\t| int\n\t| string\n\t| time.Time\n\t| u16\n\t| u32\n\t| u64\n\t| u8","name":"Primitive","parent_name":"","return_type":"","pos":{"len":18,"line_nr":39,"pos":866,"col":0,"last_line":39},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"struct Null {}","name":"Null","parent_name":"","return_type":"","pos":{"len":15,"line_nr":55,"pos":1005,"col":0,"last_line":55},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"enum OperationKind {\n\tneq // !=\n\teq // ==\n\tgt // >\n\tlt // <\n\tge // >=\n\tle // <=\n\torm_like // LIKE\n\tis_null // IS NULL\n\tis_not_null // IS NOT NULL\n}","name":"OperationKind","parent_name":"","return_type":"","pos":{"len":22,"line_nr":57,"pos":1025,"col":0,"last_line":67},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"enum MathOperationKind {\n\tadd // +\n\tsub // -\n\tmul // *\n\tdiv // /\n}","name":"MathOperationKind","parent_name":"","return_type":"","pos":{"len":26,"line_nr":69,"pos":1178,"col":0,"last_line":74},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"enum StmtKind {\n\tinsert\n\tupdate\n\tdelete\n}","name":"StmtKind","parent_name":"","return_type":"","pos":{"len":17,"line_nr":76,"pos":1250,"col":0,"last_line":80},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"enum OrderType {\n\tasc\n\tdesc\n}","name":"OrderType","parent_name":"","return_type":"","pos":{"len":18,"line_nr":82,"pos":1297,"col":0,"last_line":85},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"enum SQLDialect {\n\tdefault\n\tsqlite\n}","name":"SQLDialect","parent_name":"","return_type":"","pos":{"len":19,"line_nr":87,"pos":1332,"col":0,"last_line":90},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Examples for QueryData in SQL: abc == 3 && b == 'test'","is_multi":false,"pos":{"len":56,"line_nr":124,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 => fields[abc, b]; data[3, 'test']; types[index of int, index of string]; kinds[.eq, .eq]; is_and[true];","is_multi":false,"pos":{"len":106,"line_nr":125,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Every field, data, type & kind of operation in the expr share the same index in the arrays","is_multi":false,"pos":{"len":92,"line_nr":126,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 is_and defines how they're addicted to each other either and or or","is_multi":false,"pos":{"len":68,"line_nr":127,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 parentheses defines which fields will be inside ()","is_multi":false,"pos":{"len":52,"line_nr":128,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 auto_fields are indexes of fields where db should generate a value when absent in an insert","is_multi":false,"pos":{"len":93,"line_nr":129,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"struct QueryData {\npub:\n\tfields      []string\n\tdata        []Primitive\n\ttypes       []int\n\tparentheses [][]int\n\tkinds       []OperationKind\n\tauto_fields []int\n\tis_and      []bool\n}","name":"QueryData","parent_name":"","return_type":"","pos":{"len":20,"line_nr":130,"pos":2394,"col":0,"last_line":139},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"struct InfixType {\npub:\n\tname     string\n\toperator MathOperationKind\n\tright    Primitive\n}","name":"InfixType","parent_name":"","return_type":"","pos":{"len":20,"line_nr":141,"pos":2580,"col":0,"last_line":146},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"struct TableField {\npub:\n\tname        string\n\ttyp         int\n\tnullable    bool\n\tdefault_val string\n\tattrs       []StructAttribute\n\tis_arr      bool\n}","name":"TableField","parent_name":"","return_type":"","pos":{"len":21,"line_nr":148,"pos":2676,"col":0,"last_line":156},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 table - Table name","is_multi":false,"pos":{"len":20,"line_nr":158,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 is_count - Either the data will be returned or an integer with the count","is_multi":false,"pos":{"len":74,"line_nr":159,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 has_where - Select all or use a where expr","is_multi":false,"pos":{"len":44,"line_nr":160,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 has_order - Order the results","is_multi":false,"pos":{"len":31,"line_nr":161,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 order - Name of the column which will be ordered","is_multi":false,"pos":{"len":50,"line_nr":162,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 order_type - Type of order (asc, desc)","is_multi":false,"pos":{"len":40,"line_nr":163,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 has_limit - Limits the output data","is_multi":false,"pos":{"len":36,"line_nr":164,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 primary - Name of the primary field","is_multi":false,"pos":{"len":37,"line_nr":165,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 has_offset - Add an offset to the result","is_multi":false,"pos":{"len":42,"line_nr":166,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 fields - Fields to select","is_multi":false,"pos":{"len":27,"line_nr":167,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 types - Types to select","is_multi":false,"pos":{"len":25,"line_nr":168,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"struct SelectConfig {\npub:\n\ttable      string\n\tis_count   bool\n\thas_where  bool\n\thas_order  bool\n\torder      string\n\torder_type OrderType\n\thas_limit  bool\n\tprimary    string = 'id' // should be set if primary is different than 'id' and 'has_limit' is false\n\thas_offset bool\n\tfields     []string\n\ttypes      []int\n}","name":"SelectConfig","parent_name":"","return_type":"","pos":{"len":23,"line_nr":169,"pos":3280,"col":0,"last_line":182},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Interfaces gets called from the backend and can be implemented","is_multi":false,"pos":{"len":64,"line_nr":184,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Since the orm supports arrays aswell, they have to be returned too.","is_multi":false,"pos":{"len":69,"line_nr":185,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 A row is represented as []Primitive, where the data is connected to the fields of the struct by their","is_multi":false,"pos":{"len":103,"line_nr":186,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 index. The indices are mapped with the SelectConfig.field array. This is the mapping for a struct.","is_multi":false,"pos":{"len":100,"line_nr":187,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 To have an array, there has to be an array of structs, basically [][]Primitive","is_multi":false,"pos":{"len":80,"line_nr":188,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":189,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Every function without last_id() returns an optional, which returns an error if present","is_multi":false,"pos":{"len":89,"line_nr":190,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 last_id returns the last inserted id of the db","is_multi":false,"pos":{"len":48,"line_nr":191,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"interface Connection {\n\t@select(config SelectConfig, data QueryData, where QueryData) ![][]Primitive\n\tinsert(table string, data QueryData) !\n\tupdate(table string, data QueryData, where QueryData) !\n\tdelete(table string, where QueryData) !\n\tcreate(table string, fields []TableField) !\n\tdrop(table string) !\n\tlast_id() int\n}","name":"Connection","parent_name":"","return_type":"","pos":{"len":326,"line_nr":192,"pos":4170,"col":0,"last_line":200},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Generates an sql stmt, from universal parameter","is_multi":false,"pos":{"len":49,"line_nr":202,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 q - The quotes character, which can be different in every type, so it's variable","is_multi":false,"pos":{"len":82,"line_nr":203,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 num - Stmt uses nums at prepared statements (? or ?1)","is_multi":false,"pos":{"len":55,"line_nr":204,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 qm - Character for prepared statement (qm for question mark, as in sqlite)","is_multi":false,"pos":{"len":76,"line_nr":205,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 start_pos - When num is true, it's the start position of the counter","is_multi":false,"pos":{"len":70,"line_nr":206,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"fn orm_stmt_gen(sql_dialect SQLDialect, table string, q string, kind StmtKind, num bool, qm string, start_pos int, data QueryData, where QueryData) (string, QueryData)","name":"orm_stmt_gen","parent_name":"","return_type":"(string, QueryData)","pos":{"len":171,"line_nr":207,"pos":4840,"col":0,"last_line":325},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Generates an sql select stmt, from universal parameter","is_multi":false,"pos":{"len":56,"line_nr":327,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 orm - See SelectConfig","is_multi":false,"pos":{"len":24,"line_nr":328,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 q, num, qm, start_pos - see orm_stmt_gen","is_multi":false,"pos":{"len":42,"line_nr":329,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 where - See QueryData","is_multi":false,"pos":{"len":23,"line_nr":330,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"fn orm_select_gen(cfg SelectConfig, q string, num bool, qm string, start_pos int, where QueryData) string","name":"orm_select_gen","parent_name":"","return_type":"string","pos":{"len":109,"line_nr":331,"pos":7629,"col":0,"last_line":386},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Generates an sql table stmt, from universal parameter","is_multi":false,"pos":{"len":55,"line_nr":424,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 table - Table name","is_multi":false,"pos":{"len":20,"line_nr":425,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 q - see orm_stmt_gen","is_multi":false,"pos":{"len":22,"line_nr":426,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 defaults - enables default values in stmt","is_multi":false,"pos":{"len":43,"line_nr":427,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 def_unique_len - sets default unique length for texts","is_multi":false,"pos":{"len":55,"line_nr":428,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 fields - See TableField","is_multi":false,"pos":{"len":25,"line_nr":429,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 sql_from_v - Function which maps type indices to sql type names","is_multi":false,"pos":{"len":65,"line_nr":430,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 alternative - Needed for msdb","is_multi":false,"pos":{"len":31,"line_nr":431,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\orm\\orm.v","content":"fn orm_table_gen(table string, q string, defaults bool, def_unique_len int, fields []TableField, sql_from_v fn (int) !string, alternative bool) !string","name":"orm_table_gen","parent_name":"","return_type":"!string","pos":{"len":155,"line_nr":432,"pos":9620,"col":0,"last_line":582},"platform":"cross","kind":"function","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:36"}