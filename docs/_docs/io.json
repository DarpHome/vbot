{"module_name":"io","contents":[{"attributes":{},"comments":[{"text":"\u0001 BufferedReader provides a buffered interface for a reader.","is_multi":false,"pos":{"len":60,"line_nr":2,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 read fufills the Reader interface.","is_multi":false,"pos":{"len":36,"line_nr":44,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\buffered_reader.v","content":"fn (mut r BufferedReader) read(mut buf []u8) !int","name":"read","parent_name":"BufferedReader","return_type":"!int","pos":{"len":53,"line_nr":45,"pos":1307,"col":0,"last_line":66},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 free deallocates the memory for a buffered reader's internal buffer.","is_multi":false,"pos":{"len":70,"line_nr":68,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\buffered_reader.v","content":"fn (mut r BufferedReader) free()","name":"free","parent_name":"BufferedReader","return_type":"void","pos":{"len":36,"line_nr":69,"pos":1810,"col":0,"last_line":73},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 end_of_stream returns whether the end of the stream was reached.","is_multi":false,"pos":{"len":66,"line_nr":110,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\buffered_reader.v","content":"fn (r BufferedReader) end_of_stream() bool","name":"end_of_stream","parent_name":"BufferedReader","return_type":"bool","pos":{"len":46,"line_nr":111,"pos":2764,"col":0,"last_line":113},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 read_line attempts to read a line from the buffered reader.","is_multi":false,"pos":{"len":61,"line_nr":115,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It will read until it finds the specified line delimiter","is_multi":false,"pos":{"len":58,"line_nr":116,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 such as (\\n, the default or \\0) or the end of stream.","is_multi":false,"pos":{"len":55,"line_nr":117,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\buffered_reader.v","content":"fn (mut r BufferedReader) read_line(config BufferedReadLineConfig) !string","name":"read_line","parent_name":"BufferedReader","return_type":"!string","pos":{"len":78,"line_nr":118,"pos":3020,"col":0,"last_line":157},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\buffered_reader.v","content":"struct BufferedReader {\nmut:\n\treader Reader\n\tbuf    []u8\n\toffset int // current offset in the buffer\n\tlen    int\n\tfails  int // how many times fill_buffer has read 0 bytes in a row\n\tmfails int // maximum fails, after which we can assume that the stream has ended\npub mut:\n\tend_of_stream bool // whether we reached the end of the upstream reader\n\ttotal_read    int  // total number of bytes read\n}","name":"BufferedReader","parent_name":"","return_type":"","pos":{"len":25,"line_nr":3,"pos":73,"col":0,"last_line":14},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 BufferedReaderConfig are options that can be given to a buffered reader.","is_multi":false,"pos":{"len":74,"line_nr":16,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\buffered_reader.v","content":"struct BufferedReaderConfig {\n\treader  Reader\n\tcap     int = 128 * 1024 // large for fast reading of big(ish) files\n\tretries int = 2 // how many times to retry before assuming the stream ended\n}","name":"BufferedReaderConfig","parent_name":"","return_type":"","pos":{"len":31,"line_nr":17,"pos":551,"col":0,"last_line":21},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 BufferedReadLineConfig are options that can be given to the read_line() function.","is_multi":false,"pos":{"len":83,"line_nr":23,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\buffered_reader.v","content":"struct BufferedReadLineConfig {\n\tdelim u8 = `\\n` // line delimiter\n}","name":"BufferedReadLineConfig","parent_name":"","return_type":"","pos":{"len":33,"line_nr":25,"pos":846,"col":0,"last_line":27},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_buffered_reader creates a new BufferedReader.","is_multi":false,"pos":{"len":51,"line_nr":29,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\buffered_reader.v","content":"fn new_buffered_reader(o BufferedReaderConfig) &BufferedReader","name":"new_buffered_reader","parent_name":"","return_type":"BufferedReader","pos":{"len":66,"line_nr":30,"pos":973,"col":0,"last_line":42},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 cp copies from `src` to `dst` by allocating","is_multi":false,"pos":{"len":45,"line_nr":4,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 a maximum of 1024 bytes buffer for reading","is_multi":false,"pos":{"len":44,"line_nr":5,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 until either EOF is reached on `src` or an error occurs.","is_multi":false,"pos":{"len":58,"line_nr":6,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 An error is returned if an error is encountered during write.","is_multi":false,"pos":{"len":63,"line_nr":7,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\io.v","content":"fn cp(mut src Reader, mut dst Writer) !","name":"cp","parent_name":"","return_type":"!","pos":{"len":43,"line_nr":8,"pos":255,"col":0,"last_line":17},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_multi_writer returns a Writer that writes to all writers. The write","is_multi":false,"pos":{"len":73,"line_nr":2,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 function of the returned Writer writes to all writers of the MultiWriter,","is_multi":false,"pos":{"len":75,"line_nr":3,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 returns the length of bytes written, and if any writer fails to write the","is_multi":false,"pos":{"len":75,"line_nr":4,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 full length an error is returned and writing to other writers stops, and if","is_multi":false,"pos":{"len":77,"line_nr":5,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 any writer returns an error the error is returned immediately and writing to","is_multi":false,"pos":{"len":78,"line_nr":6,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 other writers stops.","is_multi":false,"pos":{"len":22,"line_nr":7,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\multi_writer.v","content":"fn new_multi_writer(writers ...Writer) Writer","name":"new_multi_writer","parent_name":"","return_type":"Writer","pos":{"len":49,"line_nr":8,"pos":423,"col":0,"last_line":12},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 MultiWriter writes to all its writers.","is_multi":false,"pos":{"len":40,"line_nr":14,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 write writes to all writers of the MultiWriter. Returns the length of bytes","is_multi":false,"pos":{"len":77,"line_nr":20,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 written. If any writer fails to write the full length an error is returned","is_multi":false,"pos":{"len":76,"line_nr":21,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 and writing to other writers stops. If any writer returns an error the error","is_multi":false,"pos":{"len":78,"line_nr":22,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 is returned immediately and writing to other writers stops.","is_multi":false,"pos":{"len":61,"line_nr":23,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\multi_writer.v","content":"fn (mut m MultiWriter) write(buf []u8) !int","name":"write","parent_name":"MultiWriter","return_type":"!int","pos":{"len":47,"line_nr":24,"pos":919,"col":0,"last_line":32},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\multi_writer.v","content":"struct MultiWriter {\npub mut:\n\twriters []Writer\n}","name":"MultiWriter","parent_name":"","return_type":"","pos":{"len":22,"line_nr":15,"pos":564,"col":0,"last_line":18},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001/ Eof error means that we reach the end of the stream.","is_multi":false,"pos":{"len":55,"line_nr":2,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\reader.v","content":"struct Eof {\n\tError\n}","name":"Eof","parent_name":"","return_type":"","pos":{"len":14,"line_nr":3,"pos":68,"col":0,"last_line":5},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 NotExpected is a generic error that means that we receave a not expected error.","is_multi":false,"pos":{"len":81,"line_nr":7,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\reader.v","content":"struct NotExpected {\n\tcause string\n\tcode  int\n}","name":"NotExpected","parent_name":"","return_type":"","pos":{"len":22,"line_nr":8,"pos":178,"col":0,"last_line":11},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Reader represents a stream of data that can be read.","is_multi":false,"pos":{"len":54,"line_nr":21,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\reader.v","content":"interface Reader {\n\t// read reads up to buf.len bytes and places\n\t// them into buf.\n\t// A type that implements this should return\n\t// `io.Eof` on end of stream (EOF) instead of just returning 0\nmut:\n\tread(mut buf []u8) !int\n}","name":"Reader","parent_name":"","return_type":"","pos":{"len":229,"line_nr":22,"pos":398,"col":0,"last_line":29},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 ReadAllConfig allows options to be passed for the behaviour","is_multi":false,"pos":{"len":61,"line_nr":34,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 of read_all.","is_multi":false,"pos":{"len":14,"line_nr":35,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\reader.v","content":"struct ReadAllConfig {\n\tread_to_end_of_stream bool\nmut:\n\treader Reader\n}","name":"ReadAllConfig","parent_name":"","return_type":"","pos":{"len":24,"line_nr":36,"pos":771,"col":0,"last_line":40},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 read_all reads all bytes from a reader until either a 0 length read","is_multi":false,"pos":{"len":69,"line_nr":42,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 or if read_to_end_of_stream is true then the end of the stream (`none`).","is_multi":false,"pos":{"len":74,"line_nr":43,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\reader.v","content":"fn read_all(config ReadAllConfig) ![]u8","name":"read_all","parent_name":"","return_type":"![]u8","pos":{"len":43,"line_nr":44,"pos":996,"col":0,"last_line":61},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 read_any reads any available bytes from a reader","is_multi":false,"pos":{"len":50,"line_nr":63,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 (until the reader returns a read of 0 length).","is_multi":false,"pos":{"len":48,"line_nr":64,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\reader.v","content":"fn read_any(mut r Reader) ![]u8","name":"read_any","parent_name":"","return_type":"![]u8","pos":{"len":35,"line_nr":65,"pos":1487,"col":0,"last_line":79},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 RandomReader represents a stream of readable data from at a random location.","is_multi":false,"pos":{"len":78,"line_nr":81,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\reader.v","content":"interface RandomReader {\n\tread_from(pos u64, mut buf []u8) !int\n}","name":"RandomReader","parent_name":"","return_type":"","pos":{"len":69,"line_nr":82,"pos":1877,"col":0,"last_line":84},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 ReaderWriter represents a stream that can be read and written.","is_multi":false,"pos":{"len":64,"line_nr":2,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\readerwriter.v","content":"interface ReaderWriter {\n\tReader\n\tWriter\n}","name":"ReaderWriter","parent_name":"","return_type":"","pos":{"len":46,"line_nr":3,"pos":77,"col":0,"last_line":6},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 read reads up to `buf.len` bytes into `buf`. It returns","is_multi":false,"pos":{"len":57,"line_nr":16,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 the number of bytes read or any error encountered.","is_multi":false,"pos":{"len":52,"line_nr":17,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\readerwriter.v","content":"fn (mut r ReaderWriterImpl) read(mut buf []u8) !int","name":"read","parent_name":"ReaderWriterImpl","return_type":"!int","pos":{"len":55,"line_nr":18,"pos":412,"col":0,"last_line":20},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 write writes `buf.len` bytes from `buf` to the underlying","is_multi":false,"pos":{"len":59,"line_nr":22,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 data stream. It returns the number of bytes written or any error","is_multi":false,"pos":{"len":66,"line_nr":23,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 encountered.","is_multi":false,"pos":{"len":14,"line_nr":24,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\readerwriter.v","content":"fn (mut r ReaderWriterImpl) write(buf []u8) !int","name":"write","parent_name":"ReaderWriterImpl","return_type":"!int","pos":{"len":52,"line_nr":25,"pos":644,"col":0,"last_line":27},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"ReaderWriterImpl","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 make_readerwriter takes a rstream and a wstream and makes","is_multi":false,"pos":{"len":59,"line_nr":29,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 an rwstream with them.","is_multi":false,"pos":{"len":24,"line_nr":30,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\readerwriter.v","content":"fn make_readerwriter(r Reader, w Writer) ReaderWriterImpl","name":"make_readerwriter","parent_name":"","return_type":"ReaderWriterImpl","pos":{"len":61,"line_nr":31,"pos":812,"col":0,"last_line":36},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Writer is the interface that wraps the `write` method, which","is_multi":false,"pos":{"len":62,"line_nr":2,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 writes `buf.len` bytes to the underlying data stream.","is_multi":false,"pos":{"len":55,"line_nr":3,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\writer.v","content":"interface Writer {\nmut:\n\twrite(buf []u8) !int\n}","name":"Writer","parent_name":"","return_type":"","pos":{"len":51,"line_nr":4,"pos":132,"col":0,"last_line":7},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 RandomWriter is the interface that wraps the `write_to` method,","is_multi":false,"pos":{"len":65,"line_nr":9,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 which writes `buf.len` bytes to the underlying data stream at a random `pos`.","is_multi":false,"pos":{"len":79,"line_nr":10,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\io\\writer.v","content":"interface RandomWriter {\n\twrite_to(pos u64, buf []u8) !int\n}","name":"RandomWriter","parent_name":"","return_type":"","pos":{"len":64,"line_nr":11,"pos":333,"col":0,"last_line":13},"platform":"cross","kind":"interface_","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-02-05 19:45:32"}