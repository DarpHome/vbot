{"module_name":"toml.checker","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\checker\\checker.v","content":"const allowed_basic_escape_chars = [`u`, `U`, `b`, `t`, `n`, `f`, `r`, `\"`, `\\\\`]","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":14,"pos":319,"col":0,"last_line":14},"platform":"cross","kind":"const_group","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Constants","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"const_group","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Checker checks a tree of TOML `ast.Value`'s for common errors.","is_multi":false,"pos":{"len":64,"line_nr":19,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 check checks the `ast.Value` and all it's children","is_multi":false,"pos":{"len":52,"line_nr":24,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 for common errors.","is_multi":false,"pos":{"len":20,"line_nr":25,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\checker\\checker.v","content":"fn (c Checker) check(n &ast.Value) !","name":"check","parent_name":"Checker","return_type":"!","pos":{"len":40,"line_nr":26,"pos":722,"col":0,"last_line":28},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 check_quoted returns an error if `q` is not a valid quoted TOML string.","is_multi":false,"pos":{"len":73,"line_nr":388,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\checker\\checker.v","content":"fn (c Checker) check_quoted(q ast.Quoted) !","name":"check_quoted","parent_name":"Checker","return_type":"!","pos":{"len":47,"line_nr":389,"pos":13043,"col":0,"last_line":399},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 check_comment returns an error if the contents of `comment` isn't","is_multi":false,"pos":{"len":67,"line_nr":549,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 a valid TOML comment.","is_multi":false,"pos":{"len":23,"line_nr":550,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\checker\\checker.v","content":"fn (c Checker) check_comment(comment ast.Comment) !","name":"check_comment","parent_name":"Checker","return_type":"!","pos":{"len":55,"line_nr":551,"pos":19177,"col":0,"last_line":580},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\checker\\checker.v","content":"struct Checker {\n\tscanner &scanner.Scanner = unsafe { nil }\n}","name":"Checker","parent_name":"","return_type":"","pos":{"len":18,"line_nr":20,"pos":579,"col":0,"last_line":22},"platform":"cross","kind":"struct_","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-02-05 19:45:37"}