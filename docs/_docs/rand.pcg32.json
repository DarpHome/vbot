{"module_name":"rand.pcg32","description":"","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\pcg32\\pcg32.v","content":"const seed_len = 4","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":8,"pos":221,"col":0,"last_line":8},"platform":"cross","kind":"const_group","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Constants","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"const_group","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 PCG32RNG ported from http://www.pcg-random.org/download.html,","is_multi":false,"pos":{"len":63,"line_nr":10,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 https://github.com/imneme/pcg-c-basic/blob/master/pcg_basic.c, and","is_multi":false,"pos":{"len":68,"line_nr":11,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 https://github.com/imneme/pcg-c-basic/blob/master/pcg_basic.h","is_multi":false,"pos":{"len":63,"line_nr":12,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 seed seeds the PCG32RNG with 4 `u32` values.","is_multi":false,"pos":{"len":46,"line_nr":20,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 The first 2 represent the 64-bit initial state as `[lower 32 bits, higher 32 bits]`","is_multi":false,"pos":{"len":85,"line_nr":21,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 The last 2 represent the 64-bit stream/step of the PRNG.","is_multi":false,"pos":{"len":58,"line_nr":22,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\pcg32\\pcg32.v","content":"fn (mut rng PCG32RNG) seed(seed_data []u32)","name":"seed","parent_name":"PCG32RNG","return_type":"void","pos":{"len":47,"line_nr":23,"pos":807,"col":0,"last_line":37},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 byte returns a uniformly distributed pseudorandom 8-bit unsigned positive `byte`.","is_multi":false,"pos":{"len":83,"line_nr":39,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\pcg32\\pcg32.v","content":"fn (mut rng PCG32RNG) u8() u8","name":"u8","parent_name":"PCG32RNG","return_type":"u8","pos":{"len":33,"line_nr":41,"pos":1416,"col":0,"last_line":53},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 u16 returns a pseudorandom 16-bit unsigned integer (`u16`).","is_multi":false,"pos":{"len":61,"line_nr":55,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\pcg32\\pcg32.v","content":"fn (mut rng PCG32RNG) u16() u16","name":"u16","parent_name":"PCG32RNG","return_type":"u16","pos":{"len":35,"line_nr":57,"pos":1740,"col":0,"last_line":68},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 u32 returns a pseudorandom unsigned `u32`.","is_multi":false,"pos":{"len":44,"line_nr":70,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\pcg32\\pcg32.v","content":"fn (mut rng PCG32RNG) u32() u32","name":"u32","parent_name":"PCG32RNG","return_type":"u32","pos":{"len":35,"line_nr":72,"pos":2029,"col":0,"last_line":78},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 u64 returns a pseudorandom 64-bit unsigned `u64`.","is_multi":false,"pos":{"len":51,"line_nr":80,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\pcg32\\pcg32.v","content":"fn (mut rng PCG32RNG) u64() u64","name":"u64","parent_name":"PCG32RNG","return_type":"u64","pos":{"len":35,"line_nr":82,"pos":2376,"col":0,"last_line":84},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 block_size returns the number of bits that the RNG can produce in a single iteration.","is_multi":false,"pos":{"len":87,"line_nr":86,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\pcg32\\pcg32.v","content":"fn (mut rng PCG32RNG) block_size() int","name":"block_size","parent_name":"PCG32RNG","return_type":"int","pos":{"len":42,"line_nr":88,"pos":2564,"col":0,"last_line":90},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 free should be called when the generator is no longer needed","is_multi":false,"pos":{"len":62,"line_nr":92,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["unsafe"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\pcg32\\pcg32.v","content":"fn (mut rng PCG32RNG) free()","name":"free","parent_name":"PCG32RNG","return_type":"void","pos":{"len":32,"line_nr":94,"pos":2697,"col":0,"last_line":96},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\pcg32\\pcg32.v","content":"struct PCG32RNG {\n\tbuffer.PRNGBuffer\nmut:\n\tstate u64 = u64(0x853c49e6748fea9b) ^ seed.time_seed_64()\n\tinc   u64 = u64(0xda3e39cb94b95bdb) ^ seed.time_seed_64()\n}","name":"PCG32RNG","parent_name":"","return_type":"","pos":{"len":19,"line_nr":13,"pos":445,"col":0,"last_line":18},"platform":"cross","kind":"struct_","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:36"}