{"module_name":"net.websocket","contents":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"type AcceptClientFn = fn (mut c ServerClient) !bool","name":"AcceptClientFn","parent_name":"","return_type":"","pos":{"len":23,"line_nr":34,"pos":1313,"col":0,"last_line":34},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"type SocketMessageFn = fn (mut c Client, msg &Message) !","name":"SocketMessageFn","parent_name":"","return_type":"","pos":{"len":24,"line_nr":36,"pos":1370,"col":0,"last_line":36},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"type SocketMessageFn2 = fn (mut c Client, msg &Message, v voidptr) !","name":"SocketMessageFn2","parent_name":"","return_type":"","pos":{"len":25,"line_nr":38,"pos":1432,"col":0,"last_line":38},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"type SocketErrorFn = fn (mut c Client, err string) !","name":"SocketErrorFn","parent_name":"","return_type":"","pos":{"len":22,"line_nr":40,"pos":1506,"col":0,"last_line":40},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"type SocketErrorFn2 = fn (mut c Client, err string, v voidptr) !","name":"SocketErrorFn2","parent_name":"","return_type":"","pos":{"len":23,"line_nr":42,"pos":1564,"col":0,"last_line":42},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"type SocketOpenFn = fn (mut c Client) !","name":"SocketOpenFn","parent_name":"","return_type":"","pos":{"len":21,"line_nr":44,"pos":1634,"col":0,"last_line":44},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"type SocketOpenFn2 = fn (mut c Client, v voidptr) !","name":"SocketOpenFn2","parent_name":"","return_type":"","pos":{"len":22,"line_nr":46,"pos":1679,"col":0,"last_line":46},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"type SocketCloseFn = fn (mut c Client, code int, reason string) !","name":"SocketCloseFn","parent_name":"","return_type":"","pos":{"len":22,"line_nr":48,"pos":1736,"col":0,"last_line":48},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"type SocketCloseFn2 = fn (mut c Client, code int, reason string, v voidptr) !","name":"SocketCloseFn2","parent_name":"","return_type":"","pos":{"len":23,"line_nr":50,"pos":1807,"col":0,"last_line":50},"platform":"cross","kind":"typedef","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Server represents a websocket server connection","is_multi":false,"pos":{"len":49,"line_nr":16,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 free manages manual free of memory for Server instance","is_multi":false,"pos":{"len":56,"line_nr":250,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"fn (mut s Server) free()","name":"free","parent_name":"Server","return_type":"void","pos":{"len":28,"line_nr":251,"pos":7139,"col":0,"last_line":263},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 get_ping_interval return the interval that the server will send ping messages to clients","is_multi":false,"pos":{"len":90,"line_nr":68,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"fn (mut s Server) get_ping_interval() int","name":"get_ping_interval","parent_name":"Server","return_type":"int","pos":{"len":45,"line_nr":69,"pos":1958,"col":0,"last_line":73},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 get_state return current state in a thread safe way","is_multi":false,"pos":{"len":53,"line_nr":243,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"fn (s Server) get_state() State","name":"get_state","parent_name":"Server","return_type":"State","pos":{"len":35,"line_nr":244,"pos":6983,"col":0,"last_line":248},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 handle_handshake use an existing connection to respond to the handshake for a given key","is_multi":false,"pos":{"len":89,"line_nr":143,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"fn (mut s Server) handle_handshake(mut conn net.TcpConn, key string) !&ServerClient","name":"handle_handshake","parent_name":"Server","return_type":"ServerClient","pos":{"len":87,"line_nr":144,"pos":4300,"col":0,"last_line":173},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 listen start listen and process to incoming connections from websocket clients","is_multi":false,"pos":{"len":80,"line_nr":75,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"fn (mut s Server) listen() !","name":"listen","parent_name":"Server","return_type":"!","pos":{"len":32,"line_nr":76,"pos":2156,"col":0,"last_line":86},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_close registers a callback on closed socket","is_multi":false,"pos":{"len":48,"line_nr":76,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut s Server) on_close(fun SocketCloseFn)","name":"on_close","parent_name":"Server","return_type":"void","pos":{"len":49,"line_nr":77,"pos":2646,"col":0,"last_line":81},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_close_ref registers a callback on closed socket and provides a reference object","is_multi":false,"pos":{"len":84,"line_nr":83,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut s Server) on_close_ref(fun SocketCloseFn2, ref voidptr)","name":"on_close_ref","parent_name":"Server","return_type":"void","pos":{"len":67,"line_nr":84,"pos":2846,"col":0,"last_line":90},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_connect registers a callback when client connects to the server","is_multi":false,"pos":{"len":68,"line_nr":52,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut s Server) on_connect(fun AcceptClientFn) !","name":"on_connect","parent_name":"Server","return_type":"!","pos":{"len":54,"line_nr":53,"pos":1960,"col":0,"last_line":58},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_message registers a callback on new messages","is_multi":false,"pos":{"len":49,"line_nr":60,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut s Server) on_message(fun SocketMessageFn)","name":"on_message","parent_name":"Server","return_type":"void","pos":{"len":53,"line_nr":61,"pos":2220,"col":0,"last_line":65},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_message_ref registers a callback on new messages and provides a reference object","is_multi":false,"pos":{"len":85,"line_nr":67,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut s Server) on_message_ref(fun SocketMessageFn2, ref voidptr)","name":"on_message_ref","parent_name":"Server","return_type":"void","pos":{"len":71,"line_nr":68,"pos":2429,"col":0,"last_line":74},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set_ping_interval sets the interval that the server will send ping messages to clients","is_multi":false,"pos":{"len":88,"line_nr":61,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"fn (mut s Server) set_ping_interval(seconds int)","name":"set_ping_interval","parent_name":"Server","return_type":"void","pos":{"len":52,"line_nr":62,"pos":1741,"col":0,"last_line":66},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set_state sets current state in a thread safe way","is_multi":false,"pos":{"len":51,"line_nr":236,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"fn (mut s Server) set_state(state State)","name":"set_state","parent_name":"Server","return_type":"void","pos":{"len":44,"line_nr":237,"pos":6821,"col":0,"last_line":241},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"struct Server {\nmut:\n\tlogger &log.Logger = &log.Logger(&log.Log{\n\tlevel: .info\n})\n\tls                      &net.TcpListener = unsafe { nil } // listener used to get incoming connection to socket\n\taccept_client_callbacks []AcceptClientFn      // accept client callback functions\n\tmessage_callbacks       []MessageEventHandler // new message callback functions\n\tclose_callbacks         []CloseEventHandler   // close message callback functions\npub:\n\tfamily net.AddrFamily = .ip\n\tport   int  // port used as listen to incoming connections\n\tis_ssl bool // true if secure connection (not supported yet on server)\npub mut:\n\tserver_state shared ServerState\n}","name":"Server","parent_name":"","return_type":"","pos":{"len":17,"line_nr":17,"pos":381,"col":0,"last_line":32},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Client represents websocket client","is_multi":false,"pos":{"len":36,"line_nr":21,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 close closes the websocket connection","is_multi":false,"pos":{"len":39,"line_nr":330,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) close(code int, message string) !","name":"close","parent_name":"Client","return_type":"!","pos":{"len":56,"line_nr":331,"pos":9564,"col":0,"last_line":362},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 connect connects to remote websocket server","is_multi":false,"pos":{"len":45,"line_nr":113,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) connect() !","name":"connect","parent_name":"Client","return_type":"!","pos":{"len":34,"line_nr":114,"pos":3075,"col":0,"last_line":123},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 free handles manual free memory of Client struct","is_multi":false,"pos":{"len":50,"line_nr":498,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (c &Client) free()","name":"free","parent_name":"Client","return_type":"void","pos":{"len":25,"line_nr":499,"pos":14298,"col":0,"last_line":509},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 get_state return the current state of the websocket connection","is_multi":false,"pos":{"len":64,"line_nr":457,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (ws Client) get_state() State","name":"get_state","parent_name":"Client","return_type":"State","pos":{"len":36,"line_nr":458,"pos":13177,"col":0,"last_line":462},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 listen listens and processes incoming messages","is_multi":false,"pos":{"len":48,"line_nr":125,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) listen() !","name":"listen","parent_name":"Client","return_type":"!","pos":{"len":33,"line_nr":126,"pos":3417,"col":0,"last_line":226},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_close registers a callback on closed socket","is_multi":false,"pos":{"len":48,"line_nr":141,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut ws Client) on_close(fun SocketCloseFn)","name":"on_close","parent_name":"Client","return_type":"void","pos":{"len":50,"line_nr":142,"pos":4329,"col":0,"last_line":146},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_close_ref registers a callback on closed socket and provides a reference object","is_multi":false,"pos":{"len":84,"line_nr":148,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut ws Client) on_close_ref(fun SocketCloseFn2, ref voidptr)","name":"on_close_ref","parent_name":"Client","return_type":"void","pos":{"len":68,"line_nr":149,"pos":4531,"col":0,"last_line":155},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_error registers a callback on errors","is_multi":false,"pos":{"len":41,"line_nr":108,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut ws Client) on_error(fun SocketErrorFn)","name":"on_error","parent_name":"Client","return_type":"void","pos":{"len":50,"line_nr":109,"pos":3479,"col":0,"last_line":113},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_error_ref registers a callback on errors and provides a reference object","is_multi":false,"pos":{"len":77,"line_nr":115,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut ws Client) on_error_ref(fun SocketErrorFn2, ref voidptr)","name":"on_error_ref","parent_name":"Client","return_type":"void","pos":{"len":68,"line_nr":116,"pos":3674,"col":0,"last_line":122},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_message registers a callback on new messages","is_multi":false,"pos":{"len":49,"line_nr":92,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut ws Client) on_message(fun SocketMessageFn)","name":"on_message","parent_name":"Client","return_type":"void","pos":{"len":54,"line_nr":93,"pos":3056,"col":0,"last_line":97},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_message_ref registers a callback on new messages and provides a reference object","is_multi":false,"pos":{"len":85,"line_nr":99,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut ws Client) on_message_ref(fun SocketMessageFn2, ref voidptr)","name":"on_message_ref","parent_name":"Client","return_type":"void","pos":{"len":72,"line_nr":100,"pos":3267,"col":0,"last_line":106},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_open registers a callback on successful opening the websocket","is_multi":false,"pos":{"len":66,"line_nr":124,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut ws Client) on_open(fun SocketOpenFn)","name":"on_open","parent_name":"Client","return_type":"void","pos":{"len":48,"line_nr":125,"pos":3903,"col":0,"last_line":129},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 on_open_ref registers a callback on successful opening the websocket","is_multi":false,"pos":{"len":70,"line_nr":131,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 and provides a reference object","is_multi":false,"pos":{"len":33,"line_nr":132,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\events.v","content":"fn (mut ws Client) on_open_ref(fun SocketOpenFn2, ref voidptr)","name":"on_open_ref","parent_name":"Client","return_type":"void","pos":{"len":66,"line_nr":133,"pos":4122,"col":0,"last_line":139},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 parse_frame_header parses next message by decoding the incoming frames","is_multi":false,"pos":{"len":72,"line_nr":208,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\message.v","content":"fn (mut ws Client) parse_frame_header() !Frame","name":"parse_frame_header","parent_name":"Client","return_type":"!Frame","pos":{"len":50,"line_nr":209,"pos":6387,"col":0,"last_line":286},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 ping sends ping message to server","is_multi":false,"pos":{"len":35,"line_nr":233,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) ping() !","name":"ping","parent_name":"Client","return_type":"!","pos":{"len":31,"line_nr":234,"pos":6552,"col":0,"last_line":236},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pong sends pong message to server,","is_multi":false,"pos":{"len":36,"line_nr":238,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) pong() !","name":"pong","parent_name":"Client","return_type":"!","pos":{"len":31,"line_nr":239,"pos":6670,"col":0,"last_line":241},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 read_next_message reads 1 to n frames to compose a message","is_multi":false,"pos":{"len":60,"line_nr":119,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\message.v","content":"fn (mut ws Client) read_next_message() !Message","name":"read_next_message","parent_name":"Client","return_type":"!Message","pos":{"len":51,"line_nr":120,"pos":4058,"col":0,"last_line":179},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 reset_state resets the websocket and initialize default settings","is_multi":false,"pos":{"len":66,"line_nr":474,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) reset_state() !","name":"reset_state","parent_name":"Client","return_type":"!","pos":{"len":38,"line_nr":475,"pos":13736,"col":0,"last_line":482},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set_state sets current state of the websocket connection","is_multi":false,"pos":{"len":58,"line_nr":450,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) set_state(state State)","name":"set_state","parent_name":"Client","return_type":"void","pos":{"len":45,"line_nr":451,"pos":13001,"col":0,"last_line":455},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 validate_client validates client frame rules from RFC6455","is_multi":false,"pos":{"len":59,"line_nr":37,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\message.v","content":"fn (mut ws Client) validate_frame(frame &Frame) !","name":"validate_frame","parent_name":"Client","return_type":"!","pos":{"len":53,"line_nr":38,"pos":1283,"col":0,"last_line":69},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 write writes a byte array with a websocket messagetype to socket","is_multi":false,"pos":{"len":66,"line_nr":320,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) write(bytes []u8, code OPCode) !int","name":"write","parent_name":"Client","return_type":"!int","pos":{"len":58,"line_nr":321,"pos":9228,"col":0,"last_line":323},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 write_ptr writes len bytes provided a byteptr with a websocket messagetype","is_multi":false,"pos":{"len":76,"line_nr":243,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) write_ptr(bytes &u8, payload_len int, code OPCode) !int","name":"write_ptr","parent_name":"Client","return_type":"!int","pos":{"len":78,"line_nr":244,"pos":6828,"col":0,"last_line":318},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 write_str, writes a string with a websocket texttype to socket","is_multi":false,"pos":{"len":64,"line_nr":325,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (mut ws Client) write_string(str string) !int","name":"write_string","parent_name":"Client","return_type":"!int","pos":{"len":52,"line_nr":326,"pos":9413,"col":0,"last_line":328},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"struct Client {\n\tis_server bool\nmut:\n\tssl_conn          &ssl.SSLConn = unsafe { nil } // secure connection used when wss is used\n\tflags             []Flag       // flags used in handshake\n\tfragments         []Fragment   // current fragments\n\tmessage_callbacks []MessageEventHandler // all callbacks on_message\n\terror_callbacks   []ErrorEventHandler   // all callbacks on_error\n\topen_callbacks    []OpenEventHandler    // all callbacks on_open\n\tclose_callbacks   []CloseEventHandler   // all callbacks on_close\npub:\n\tis_ssl        bool   // true if secure socket is used\n\turi           Uri    // uri of current connection\n\tid            string // unique id of client\n\tread_timeout  i64\n\twrite_timeout i64\npub mut:\n\theader            http.Header  // headers that will be passed when connecting\n\tconn              &net.TcpConn = unsafe { nil } // underlying TCP socket connection\n\tnonce_size        int = 16 // size of nounce used for masking\n\tpanic_on_callback bool // set to true of callbacks can panic\n\tclient_state      shared ClientState // current state of connection\n\t// logger used to log messages\n\tlogger &log.Logger = &log.Logger(&log.Log{\n\tlevel: .info\n})\n\tresource_name string // name of current resource\n\tlast_pong_ut  i64    // last time in unix time we got a pong message\n}","name":"Client","parent_name":"","return_type":"","pos":{"len":17,"line_nr":22,"pos":441,"col":0,"last_line":50},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 str returns the string representation of the Uri","is_multi":false,"pos":{"len":50,"line_nr":12,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\uri.v","content":"fn (u Uri) str() string","name":"str","parent_name":"Uri","return_type":"string","pos":{"len":27,"line_nr":13,"pos":427,"col":0,"last_line":15},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Uri","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"struct ClientState {\npub mut:\n\tstate State = .closed // current state of connection\n}","name":"ClientState","parent_name":"","return_type":"","pos":{"len":22,"line_nr":16,"pos":312,"col":0,"last_line":19},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 State represents the state of the websocket connection.","is_multi":false,"pos":{"len":57,"line_nr":59,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"enum State {\n\tconnecting = 0\n\topen\n\tclosing\n\tclosed\n}","name":"State","parent_name":"","return_type":"","pos":{"len":14,"line_nr":60,"pos":1924,"col":0,"last_line":65},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Message represents a whole message combined from 1 to n frames","is_multi":false,"pos":{"len":64,"line_nr":67,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 free handles manual free memory of Message struct","is_multi":false,"pos":{"len":51,"line_nr":493,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn (m &Message) free()","name":"free","parent_name":"Message","return_type":"void","pos":{"len":26,"line_nr":494,"pos":14185,"col":0,"last_line":496},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"struct Message {\npub:\n\topcode  OPCode // websocket frame type of this message\n\tpayload []u8   // payload of the message\n}","name":"Message","parent_name":"","return_type":"","pos":{"len":18,"line_nr":68,"pos":2049,"col":0,"last_line":72},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 OPCode represents the supported websocket frame types","is_multi":false,"pos":{"len":55,"line_nr":74,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"enum OPCode {\n\tcontinuation = 0x00\n\ttext_frame   = 0x01\n\tbinary_frame = 0x02\n\tclose        = 0x08\n\tping         = 0x09\n\tpong         = 0x0A\n}","name":"OPCode","parent_name":"","return_type":"","pos":{"len":15,"line_nr":75,"pos":2233,"col":0,"last_line":82},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"struct ClientOpt {\n\tread_timeout  i64 = 30 * time.second\n\twrite_timeout i64 = 30 * time.second\n\tlogger        &log.Logger = &log.Logger(&log.Log{\n\tlevel: .info\n})\n}","name":"ClientOpt","parent_name":"","return_type":"","pos":{"len":20,"line_nr":85,"pos":2390,"col":0,"last_line":91},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_client instance a new websocket client","is_multi":false,"pos":{"len":44,"line_nr":93,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_client.v","content":"fn new_client(address string, opt ClientOpt) !&Client","name":"new_client","parent_name":"","return_type":"Client","pos":{"len":57,"line_nr":94,"pos":2606,"col":0,"last_line":111},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"struct ServerState {\nmut:\n\tping_interval int   = 30 // interval for sending ping to clients (seconds)\n\tstate         State = .closed // current state of connection\npub mut:\n\tclients map[string]&ServerClient // clients connected to this server\n}","name":"ServerState","parent_name":"","return_type":"","pos":{"len":22,"line_nr":8,"pos":80,"col":0,"last_line":14},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 ServerClient represents a connected client","is_multi":false,"pos":{"len":44,"line_nr":34,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"struct ServerClient {\npub:\n\tresource_name string // resource that the client access\n\tclient_key    string // unique key of client\npub mut:\n\tserver &Server = unsafe { nil }\n\tclient &Client = unsafe { nil }\n}","name":"ServerClient","parent_name":"","return_type":"","pos":{"len":23,"line_nr":35,"pos":1084,"col":0,"last_line":42},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"struct ServerOpt {\n\tlogger &log.Logger = &log.Logger(&log.Log{\n\tlevel: .info\n})\n}","name":"ServerOpt","parent_name":"","return_type":"","pos":{"len":20,"line_nr":45,"pos":1306,"col":0,"last_line":49},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_server instance a new websocket server on provided port and route","is_multi":false,"pos":{"len":71,"line_nr":51,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\net\\websocket\\websocket_server.v","content":"fn new_server(family net.AddrFamily, port int, route string, opt ServerOpt) &Server","name":"new_server","parent_name":"","return_type":"Server","pos":{"len":87,"line_nr":52,"pos":1466,"col":0,"last_line":59},"platform":"cross","kind":"function","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-02-05 19:45:34"}