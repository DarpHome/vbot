{"module_name":"crypto.cipher","description":"","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 free the resources taken by the Cbc `x`","is_multi":false,"pos":{"len":41,"line_nr":21,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["unsafe"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cbc.v","content":"fn (mut x Cbc) free()","name":"free","parent_name":"Cbc","return_type":"void","pos":{"len":25,"line_nr":23,"pos":667,"col":0,"last_line":32},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 encrypt_blocks encrypts the blocks in `src_` to `dst_`.","is_multi":false,"pos":{"len":57,"line_nr":54,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Please note: `dst_` is mutable for performance reasons.","is_multi":false,"pos":{"len":57,"line_nr":55,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cbc.v","content":"fn (mut x Cbc) encrypt_blocks(mut dst_ []u8, src_ []u8)","name":"encrypt_blocks","parent_name":"Cbc","return_type":"void","pos":{"len":59,"line_nr":56,"pos":1407,"col":0,"last_line":86},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 decrypt_blocks decrypts the blocks in `src` to `dst`.","is_multi":false,"pos":{"len":55,"line_nr":88,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Please note: `dst` is mutable for performance reasons.","is_multi":false,"pos":{"len":56,"line_nr":89,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cbc.v","content":"fn (mut x Cbc) decrypt_blocks(mut dst []u8, src []u8)","name":"decrypt_blocks","parent_name":"Cbc","return_type":"void","pos":{"len":57,"line_nr":90,"pos":2409,"col":0,"last_line":126},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Cbc","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_cbc returns a `DesCbc` which encrypts in cipher block chaining","is_multi":false,"pos":{"len":68,"line_nr":44,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 mode, using the given Block. The length of iv must be the same as the","is_multi":false,"pos":{"len":71,"line_nr":45,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Block's block size.","is_multi":false,"pos":{"len":21,"line_nr":46,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cbc.v","content":"fn new_cbc(b Block, iv []u8) Cbc","name":"new_cbc","parent_name":"","return_type":"Cbc","pos":{"len":36,"line_nr":47,"pos":1112,"col":0,"last_line":52},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 free the resources taken by the Cfb `x`","is_multi":false,"pos":{"len":41,"line_nr":22,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["unsafe"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cfb.v","content":"fn (mut x Cfb) free()","name":"free","parent_name":"Cfb","return_type":"void","pos":{"len":25,"line_nr":24,"pos":464,"col":0,"last_line":33},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cfb.v","content":"fn (mut x Cfb) xor_key_stream(mut dst_ []u8, src_ []u8)","name":"xor_key_stream","parent_name":"Cfb","return_type":"void","pos":{"len":59,"line_nr":65,"pos":1420,"col":0,"last_line":96},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Cfb","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_cfb_encrypter returns a `Cfb` which encrypts with cipher feedback mode,","is_multi":false,"pos":{"len":77,"line_nr":35,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 using the given Block. The iv must be the same length as the Block's block","is_multi":false,"pos":{"len":76,"line_nr":36,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 size","is_multi":false,"pos":{"len":6,"line_nr":37,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cfb.v","content":"fn new_cfb_encrypter(b Block, iv []u8) Cfb","name":"new_cfb_encrypter","parent_name":"","return_type":"Cfb","pos":{"len":46,"line_nr":38,"pos":758,"col":0,"last_line":40},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_cfb_decrypter returns a `Cfb` which decrypts with cipher feedback mode,","is_multi":false,"pos":{"len":77,"line_nr":42,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 using the given Block. The iv must be the same length as the Block's block","is_multi":false,"pos":{"len":76,"line_nr":43,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 size","is_multi":false,"pos":{"len":6,"line_nr":44,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cfb.v","content":"fn new_cfb_decrypter(b Block, iv []u8) Cfb","name":"new_cfb_decrypter","parent_name":"","return_type":"Cfb","pos":{"len":46,"line_nr":45,"pos":1005,"col":0,"last_line":47},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 A Block represents an implementation of block cipher","is_multi":false,"pos":{"len":54,"line_nr":4,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 using a given key. It provides the capability to encrypt","is_multi":false,"pos":{"len":58,"line_nr":5,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 or decrypt individual blocks. The mode implementations","is_multi":false,"pos":{"len":56,"line_nr":6,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 extend that capability to streams of blocks.","is_multi":false,"pos":{"len":46,"line_nr":7,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cipher.v","content":"interface Block {\n\tblock_size int // block_size returns the cipher's block size.\n\tencrypt(mut dst []u8, src []u8) // Encrypt encrypts the first block in src into dst.\n\t// Dst and src must overlap entirely or not at all.\n\tdecrypt(mut dst []u8, src []u8) // Decrypt decrypts the first block in src into dst.\n\t// Dst and src must overlap entirely or not at all.\n}","name":"Block","parent_name":"","return_type":"","pos":{"len":364,"line_nr":8,"pos":339,"col":0,"last_line":14},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 A Stream represents a stream cipher.","is_multi":false,"pos":{"len":38,"line_nr":16,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cipher.v","content":"interface Stream {\n\t// xor_key_stream XORs each byte in the given slice with a byte from the\n\t// cipher's key stream. Dst and src must overlap entirely or not at all.\n\t//\n\t// If len(dst) < len(src), xor_key_stream should panic. It is acceptable\n\t// to pass a dst bigger than src, and in that case, xor_key_stream will\n\t// only update dst[:len(src)] and will not touch the rest of dst.\n\t//\n\t// Multiple calls to xor_key_stream behave as if the concatenation of\n\t// the src buffers was passed in a single run. That is, Stream\n\t// maintains state and does not reset at each xor_key_stream call.\n\txor_key_stream(mut dst []u8, src []u8)\n}","name":"Stream","parent_name":"","return_type":"","pos":{"len":637,"line_nr":17,"pos":745,"col":0,"last_line":29},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 A BlockMode represents a block cipher running in a block-based mode (CBC,","is_multi":false,"pos":{"len":75,"line_nr":31,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 ECB etc).","is_multi":false,"pos":{"len":11,"line_nr":32,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\cipher.v","content":"interface BlockMode {\n\tblock_size int // block_size returns the mode's block size.\n\tcrypt_blocks(mut dst []u8, src []u8) // crypt_blocks encrypts or decrypts a number of blocks. The length of\n\t// src must be a multiple of the block size. Dst and src must overlap\n\t// entirely or not at all.\n\t//\n\t// If len(dst) < len(src), crypt_blocks should panic. It is acceptable\n\t// to pass a dst bigger than src, and in that case, crypt_blocks will\n\t// only update dst[:len(src)] and will not touch the rest of dst.\n\t//\n\t// Multiple calls to crypt_blocks behave as if the concatenation of\n\t// the src buffers was passed in a single run. That is, BlockMode\n\t// maintains state and does not reset at each crypt_blocks call.\n}","name":"BlockMode","parent_name":"","return_type":"","pos":{"len":716,"line_nr":33,"pos":1474,"col":0,"last_line":46},"platform":"cross","kind":"interface_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 free the resources taken by the Ctr `c`","is_multi":false,"pos":{"len":41,"line_nr":23,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["unsafe"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\ctr.v","content":"fn (mut x Ctr) free()","name":"free","parent_name":"Ctr","return_type":"void","pos":{"len":25,"line_nr":25,"pos":608,"col":0,"last_line":34},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\ctr.v","content":"fn (x &Ctr) xor_key_stream(mut dst_ []u8, src_ []u8)","name":"xor_key_stream","parent_name":"Ctr","return_type":"void","pos":{"len":56,"line_nr":51,"pos":1147,"col":0,"last_line":84},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Ctr","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_ctr returns a Ctr which encrypts/decrypts using the given Block in","is_multi":false,"pos":{"len":72,"line_nr":36,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 counter mode. The length of iv must be the same as the Block's block size.","is_multi":false,"pos":{"len":76,"line_nr":37,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\ctr.v","content":"fn new_ctr(b Block, iv []u8) Ctr","name":"new_ctr","parent_name":"","return_type":"Ctr","pos":{"len":36,"line_nr":38,"pos":889,"col":0,"last_line":49},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_ofb returns a Ofb that encrypts or decrypts using the block cipher b","is_multi":false,"pos":{"len":74,"line_nr":19,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 in output feedback mode. The initialization vector iv's length must be equal","is_multi":false,"pos":{"len":78,"line_nr":20,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 to b's block size.","is_multi":false,"pos":{"len":20,"line_nr":21,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\ofb.v","content":"fn new_ofb(b Block, iv []u8) Ofb","name":"new_ofb","parent_name":"","return_type":"Ofb","pos":{"len":36,"line_nr":22,"pos":575,"col":0,"last_line":35},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\ofb.v","content":"fn (mut x Ofb) xor_key_stream(mut dst_ []u8, src_ []u8)","name":"xor_key_stream","parent_name":"Ofb","return_type":"void","pos":{"len":59,"line_nr":37,"pos":880,"col":0,"last_line":63},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Ofb","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 NOTE: Implement other versions (joe-c)","is_multi":false,"pos":{"len":40,"line_nr":5,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 xor_bytes xors the bytes in a and b. The destination should have enough","is_multi":false,"pos":{"len":73,"line_nr":6,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 space, otherwise xor_bytes will panic. Returns the number of bytes xor'd.","is_multi":false,"pos":{"len":75,"line_nr":7,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\xor_generic.v","content":"fn xor_bytes(mut dst []u8, a []u8, b []u8) int","name":"xor_bytes","parent_name":"","return_type":"int","pos":{"len":50,"line_nr":8,"pos":379,"col":0,"last_line":18},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 safe_xor_bytes XORs the bytes in `a` and `b` into `dst` it does so `n` times.","is_multi":false,"pos":{"len":79,"line_nr":20,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Please note: `n` needs to be smaller or equal than the length of `a` and `b`.","is_multi":false,"pos":{"len":79,"line_nr":21,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\xor_generic.v","content":"fn safe_xor_bytes(mut dst []u8, a []u8, b []u8, n int)","name":"safe_xor_bytes","parent_name":"","return_type":"void","pos":{"len":58,"line_nr":22,"pos":715,"col":0,"last_line":26},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 xor_words XORs multiples of 4 or 8 bytes (depending on architecture.)","is_multi":false,"pos":{"len":71,"line_nr":28,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 The slice arguments `a` and `b` are assumed to be of equal length.","is_multi":false,"pos":{"len":68,"line_nr":29,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\crypto\\cipher\\xor_generic.v","content":"fn xor_words(mut dst []u8, a []u8, b []u8)","name":"xor_words","parent_name":"","return_type":"void","pos":{"len":46,"line_nr":30,"pos":967,"col":0,"last_line":32},"platform":"cross","kind":"function","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:31"}