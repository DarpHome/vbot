{"module_name":"sync","contents":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"enum Direction {\n\tpop\n\tpush\n}","name":"Direction","parent_name":"","return_type":"","pos":{"len":18,"line_nr":26,"pos":431,"col":0,"last_line":29},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"struct C.atomic_uintptr_t {}","name":"C.atomic_uintptr_t","parent_name":"","return_type":"","pos":{"len":29,"line_nr":32,"pos":477,"col":0,"last_line":32},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn (ch &Channel) auto_str(typename string) string","name":"auto_str","parent_name":"Channel","return_type":"string","pos":{"len":53,"line_nr":118,"pos":3009,"col":0,"last_line":120},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn (mut ch Channel) close()","name":"close","parent_name":"Channel","return_type":"void","pos":{"len":31,"line_nr":122,"pos":3133,"col":0,"last_line":155},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn (mut ch Channel) len() int","name":"len","parent_name":"Channel","return_type":"int","pos":{"len":33,"line_nr":158,"pos":4115,"col":0,"last_line":160},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn (mut ch Channel) closed() bool","name":"closed","parent_name":"Channel","return_type":"bool","pos":{"len":37,"line_nr":163,"pos":4211,"col":0,"last_line":165},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn (mut ch Channel) push(src voidptr)","name":"push","parent_name":"Channel","return_type":"void","pos":{"len":41,"line_nr":168,"pos":4307,"col":0,"last_line":172},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn (mut ch Channel) try_push(src voidptr) ChanState","name":"try_push","parent_name":"Channel","return_type":"ChanState","pos":{"len":55,"line_nr":175,"pos":4447,"col":0,"last_line":177},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn (mut ch Channel) pop(dest voidptr) bool","name":"pop","parent_name":"Channel","return_type":"bool","pos":{"len":46,"line_nr":361,"pos":9420,"col":0,"last_line":363},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn (mut ch Channel) try_pop(dest voidptr) ChanState","name":"try_pop","parent_name":"Channel","return_type":"ChanState","pos":{"len":55,"line_nr":366,"pos":9531,"col":0,"last_line":368},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"struct Channel {\n\tringbuf   &u8 = unsafe { nil } // queue for buffered channels\n\tstatusbuf &u8 = unsafe { nil } // flags to synchronize write/read in ringbuf\n\tobjsize   u32\nmut: // atomic\n\twritesem           Semaphore // to wake thread that wanted to write, but buffer was full\n\treadsem            Semaphore // to wake thread that wanted to read, but buffer was empty\n\twritesem_im        Semaphore\n\treadsem_im         Semaphore\n\twrite_adr          C.atomic_uintptr_t // if != NULL the next obj can be written here without wait\n\tread_adr           C.atomic_uintptr_t // if != NULL an obj can be read from here without wait\n\tadr_read           C.atomic_uintptr_t // used to identify origin of writesem\n\tadr_written        C.atomic_uintptr_t // used to identify origin of readsem\n\twrite_free         u32 // for queue state\n\tread_avail         u32\n\tbuf_elem_write_idx u32\n\tbuf_elem_read_idx  u32\n\t// for select\n\twrite_subscriber &Subscription = unsafe { nil }\n\tread_subscriber  &Subscription = unsafe { nil }\n\twrite_sub_mtx    u16\n\tread_sub_mtx     u16\n\tclosed           u16\npub:\n\tcap u32 // queue length in #objects\n}","name":"Channel","parent_name":"","return_type":"","pos":{"len":18,"line_nr":34,"pos":511,"col":0,"last_line":59},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn new_channel[T](n u32) &Channel","name":"new_channel","parent_name":"","return_type":"Channel","pos":{"len":37,"line_nr":61,"pos":1631,"col":0,"last_line":68},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Wait `timeout` on any of `channels[i]` until one of them can push (`is_push[i] = true`) or pop (`is_push[i] = false`)","is_multi":false,"pos":{"len":119,"line_nr":542,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 object referenced by `objrefs[i]`. `timeout = time.infinite` means wait unlimited time. `timeout <= 0` means return","is_multi":false,"pos":{"len":117,"line_nr":543,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 immediately if no transaction can be performed without waiting.","is_multi":false,"pos":{"len":65,"line_nr":544,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 return value: the index of the channel on which a transaction has taken place","is_multi":false,"pos":{"len":79,"line_nr":545,"pos":0,"col":0,"last_line":0}},{"text":"\u0001               -1 if waiting for a transaction has exceeded timeout","is_multi":false,"pos":{"len":68,"line_nr":546,"pos":0,"col":0,"last_line":0}},{"text":"\u0001               -2 if all channels are closed","is_multi":false,"pos":{"len":45,"line_nr":547,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\channels.c.v","content":"fn channel_select(mut channels []&Channel, dir []Direction, mut objrefs []voidptr, timeout time.Duration) int","name":"channel_select","parent_name":"","return_type":"int","pos":{"len":113,"line_nr":549,"pos":14682,"col":0,"last_line":643},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001[init_with=new_mutex] // TODO: implement support for this struct attribute, and disallow Mutex{} from outside the sync.new_mutex() function.","is_multi":false,"pos":{"len":141,"line_nr":30,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `SRWLOCK` is much more performant that `Mutex` on Windows, so use that in both cases since we don't","is_multi":false,"pos":{"len":101,"line_nr":32,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 want to share with other processes","is_multi":false,"pos":{"len":36,"line_nr":33,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m Mutex) destroy()","name":"destroy","parent_name":"Mutex","return_type":"void","pos":{"len":30,"line_nr":256,"pos":6518,"col":0,"last_line":258},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m Mutex) init()","name":"init","parent_name":"Mutex","return_type":"void","pos":{"len":27,"line_nr":66,"pos":1374,"col":0,"last_line":68},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 str returns a string representation of the Mutex pointer","is_multi":false,"pos":{"len":58,"line_nr":2,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\common_mutex.v","content":"fn (m &Mutex) str() string","name":"str","parent_name":"Mutex","return_type":"string","pos":{"len":30,"line_nr":3,"pos":73,"col":0,"last_line":5},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 try_lock try to lock the mutex instance and return immediately.","is_multi":false,"pos":{"len":65,"line_nr":78,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If the mutex was already locked, it will return false.","is_multi":false,"pos":{"len":56,"line_nr":79,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 NOTE: try_lock require Windows 7 or later. Before Windows 7, it will always return false.","is_multi":false,"pos":{"len":91,"line_nr":80,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 NOTE: To enable try_lock , you should compile your project with `-d windows_7`, like `v . -d windows_7`","is_multi":false,"pos":{"len":105,"line_nr":81,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-tryacquiresrwlockexclusive","is_multi":false,"pos":{"len":101,"line_nr":82,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m Mutex) try_lock() bool","name":"try_lock","parent_name":"Mutex","return_type":"bool","pos":{"len":36,"line_nr":83,"pos":1994,"col":0,"last_line":89},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m Mutex) unlock()","name":"unlock","parent_name":"Mutex","return_type":"void","pos":{"len":29,"line_nr":91,"pos":2134,"col":0,"last_line":93},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m Mutex) @lock()","name":"@lock","parent_name":"Mutex","return_type":"void","pos":{"len":28,"line_nr":74,"pos":1498,"col":0,"last_line":76},"platform":"windows","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"struct Mutex {\nmut:\n\tmx C.SRWLOCK // mutex handle\n}","name":"Mutex","parent_name":"","return_type":"","pos":{"len":16,"line_nr":35,"pos":1011,"col":0,"last_line":38},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m RwMutex) @lock()","name":"@lock","parent_name":"RwMutex","return_type":"void","pos":{"len":30,"line_nr":100,"pos":2317,"col":0,"last_line":102},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 RwMutex has separate read- and write locks","is_multi":false,"pos":{"len":44,"line_nr":95,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m RwMutex) @rlock()","name":"@rlock","parent_name":"RwMutex","return_type":"void","pos":{"len":31,"line_nr":96,"pos":2249,"col":0,"last_line":98},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m RwMutex) destroy()","name":"destroy","parent_name":"RwMutex","return_type":"void","pos":{"len":32,"line_nr":252,"pos":6462,"col":0,"last_line":254},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m RwMutex) init()","name":"init","parent_name":"RwMutex","return_type":"void","pos":{"len":29,"line_nr":70,"pos":1435,"col":0,"last_line":72},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Windows SRWLocks have different function to unlock","is_multi":false,"pos":{"len":52,"line_nr":130,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 So provide two functions here, too, to have a common interface","is_multi":false,"pos":{"len":64,"line_nr":131,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m RwMutex) runlock()","name":"runlock","parent_name":"RwMutex","return_type":"void","pos":{"len":32,"line_nr":132,"pos":3689,"col":0,"last_line":134},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 str returns a string representation of the RwMutex pointer","is_multi":false,"pos":{"len":60,"line_nr":7,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\common_mutex.v","content":"fn (m &RwMutex) str() string","name":"str","parent_name":"RwMutex","return_type":"string","pos":{"len":32,"line_nr":8,"pos":202,"col":0,"last_line":10},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 try_rlock try to lock the given RwMutex instance for reading and return immediately.","is_multi":false,"pos":{"len":86,"line_nr":104,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If the mutex was already locked, it will return false.","is_multi":false,"pos":{"len":56,"line_nr":105,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 NOTE: try_rlock require Windows 7 or later. Before Windows 7, it will always return false.","is_multi":false,"pos":{"len":92,"line_nr":106,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 NOTE: To enable try_rlock , you should compile your project with `-d windows_7`, like `v . -d windows_7`","is_multi":false,"pos":{"len":106,"line_nr":107,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-tryacquiresrwlockshared","is_multi":false,"pos":{"len":98,"line_nr":108,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m RwMutex) try_rlock() bool","name":"try_rlock","parent_name":"RwMutex","return_type":"bool","pos":{"len":39,"line_nr":109,"pos":2835,"col":0,"last_line":115},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 try_wlock try to lock the given RwMutex instance for writing and return immediately.","is_multi":false,"pos":{"len":86,"line_nr":117,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If the mutex was already locked, it will return false.","is_multi":false,"pos":{"len":56,"line_nr":118,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 NOTE: try_wlock require Windows 7 or later. Before Windows 7, it will always return false.","is_multi":false,"pos":{"len":92,"line_nr":119,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 NOTE: To enable try_wlock , you should compile your project with `-d windows_7`, like `v . -d windows_7`","is_multi":false,"pos":{"len":106,"line_nr":120,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-tryacquiresrwlockexclusive","is_multi":false,"pos":{"len":101,"line_nr":121,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m RwMutex) try_wlock() bool","name":"try_wlock","parent_name":"RwMutex","return_type":"bool","pos":{"len":39,"line_nr":122,"pos":3426,"col":0,"last_line":128},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut m RwMutex) unlock()","name":"unlock","parent_name":"RwMutex","return_type":"void","pos":{"len":31,"line_nr":136,"pos":3758,"col":0,"last_line":138},"platform":"windows","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"struct RwMutex {\nmut:\n\tmx C.SRWLOCK // mutex handle\n}","name":"RwMutex","parent_name":"","return_type":"","pos":{"len":18,"line_nr":41,"pos":1076,"col":0,"last_line":44},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 do execute the function only setting times.","is_multi":false,"pos":{"len":45,"line_nr":21,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\many_times.v","content":"fn (mut m ManyTimes) do(f fn ())","name":"do","parent_name":"ManyTimes","return_type":"void","pos":{"len":36,"line_nr":22,"pos":343,"col":0,"last_line":26},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\many_times.v","content":"struct ManyTimes {\nmut:\n\tm RwMutex\npub:\n\ttimes u64 = 1\n\tcount u64\n}","name":"ManyTimes","parent_name":"","return_type":"","pos":{"len":20,"line_nr":4,"pos":36,"col":0,"last_line":10},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_many_times return a new ManyTimes struct.","is_multi":false,"pos":{"len":47,"line_nr":12,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\many_times.v","content":"fn new_many_times(times u64) &ManyTimes","name":"new_many_times","parent_name":"","return_type":"ManyTimes","pos":{"len":43,"line_nr":13,"pos":158,"col":0,"last_line":19},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 do executes the function `f()` only once","is_multi":false,"pos":{"len":42,"line_nr":18,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\once.v","content":"fn (mut o Once) do(f fn ())","name":"do","parent_name":"Once","return_type":"void","pos":{"len":31,"line_nr":19,"pos":249,"col":0,"last_line":23},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 do_with_param executes `f(param)` only once`","is_multi":false,"pos":{"len":46,"line_nr":34,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 This method can be used as a workaround for passing closures to once.do/1 on Windows","is_multi":false,"pos":{"len":86,"line_nr":35,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 (they are not implemented there yet) - just pass your data explicitly.","is_multi":false,"pos":{"len":72,"line_nr":36,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 i.e. instead of:","is_multi":false,"pos":{"len":18,"line_nr":37,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 ```v","is_multi":false,"pos":{"len":6,"line_nr":38,"pos":0,"col":0,"last_line":0}},{"text":"\u0001    once.do(fn [mut o] () {","is_multi":false,"pos":{"len":28,"line_nr":39,"pos":0,"col":0,"last_line":0}},{"text":"\u0001        o.add(5)","is_multi":false,"pos":{"len":17,"line_nr":40,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 })","is_multi":false,"pos":{"len":4,"line_nr":41,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 ```","is_multi":false,"pos":{"len":5,"line_nr":42,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":43,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 ... you can use:","is_multi":false,"pos":{"len":18,"line_nr":44,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 ```v","is_multi":false,"pos":{"len":6,"line_nr":45,"pos":0,"col":0,"last_line":0}},{"text":"\u0001    once.do_with_param(fn (mut o One) {","is_multi":false,"pos":{"len":40,"line_nr":46,"pos":0,"col":0,"last_line":0}},{"text":"\u0001        o.add(5)","is_multi":false,"pos":{"len":17,"line_nr":47,"pos":0,"col":0,"last_line":0}},{"text":"\u0001    }, o)","is_multi":false,"pos":{"len":10,"line_nr":48,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 ```","is_multi":false,"pos":{"len":5,"line_nr":49,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\once.v","content":"fn (mut o Once) do_with_param(f fn (voidptr), param voidptr)","name":"do_with_param","parent_name":"Once","return_type":"void","pos":{"len":64,"line_nr":51,"pos":882,"col":0,"last_line":55},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\once.v","content":"struct Once {\nmut:\n\tm RwMutex\npub:\n\tcount u64\n}","name":"Once","parent_name":"","return_type":"","pos":{"len":15,"line_nr":4,"pos":36,"col":0,"last_line":9},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_once return a new Once struct.","is_multi":false,"pos":{"len":36,"line_nr":11,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\once.v","content":"fn new_once() &Once","name":"new_once","parent_name":"","return_type":"Once","pos":{"len":23,"line_nr":12,"pos":127,"col":0,"last_line":16},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"struct C.SRWLOCK {}","name":"C.SRWLOCK","parent_name":"","return_type":"","pos":{"len":20,"line_nr":25,"pos":646,"col":0,"last_line":25},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"struct C.CONDITION_VARIABLE {}","name":"C.CONDITION_VARIABLE","parent_name":"","return_type":"","pos":{"len":31,"line_nr":28,"pos":682,"col":0,"last_line":28},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut sem Semaphore) init(n u32)","name":"init","parent_name":"Semaphore","return_type":"void","pos":{"len":38,"line_nr":151,"pos":4007,"col":0,"last_line":155},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut sem Semaphore) post()","name":"post","parent_name":"Semaphore","return_type":"void","pos":{"len":33,"line_nr":157,"pos":4159,"col":0,"last_line":170},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut sem Semaphore) wait()","name":"wait","parent_name":"Semaphore","return_type":"void","pos":{"len":33,"line_nr":172,"pos":4503,"col":0,"last_line":197},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut sem Semaphore) try_wait() bool","name":"try_wait","parent_name":"Semaphore","return_type":"bool","pos":{"len":42,"line_nr":199,"pos":5092,"col":0,"last_line":207},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (mut sem Semaphore) timed_wait(timeout time.Duration) bool","name":"timed_wait","parent_name":"Semaphore","return_type":"bool","pos":{"len":65,"line_nr":209,"pos":5294,"col":0,"last_line":250},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn (s Semaphore) destroy()","name":"destroy","parent_name":"Semaphore","return_type":"void","pos":{"len":30,"line_nr":260,"pos":6572,"col":0,"last_line":262},"platform":"windows","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"struct Semaphore {\n\tmtx  C.SRWLOCK\n\tcond C.CONDITION_VARIABLE\nmut:\n\tcount u32\n}","name":"Semaphore","parent_name":"","return_type":"","pos":{"len":20,"line_nr":47,"pos":1143,"col":0,"last_line":52},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn new_mutex() &Mutex","name":"new_mutex","parent_name":"","return_type":"Mutex","pos":{"len":25,"line_nr":54,"pos":1228,"col":0,"last_line":58},"platform":"windows","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn new_rwmutex() &RwMutex","name":"new_rwmutex","parent_name":"","return_type":"RwMutex","pos":{"len":29,"line_nr":60,"pos":1298,"col":0,"last_line":64},"platform":"windows","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn new_semaphore() &Semaphore","name":"new_semaphore","parent_name":"","return_type":"Semaphore","pos":{"len":33,"line_nr":141,"pos":3839,"col":0,"last_line":143},"platform":"windows","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\sync_windows.c.v","content":"fn new_semaphore_init(n u32) &Semaphore","name":"new_semaphore_init","parent_name":"","return_type":"Semaphore","pos":{"len":43,"line_nr":145,"pos":3908,"col":0,"last_line":149},"platform":"windows","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\thread_windows.c.v","content":"fn thread_id() u64","name":"thread_id","parent_name":"","return_type":"u64","pos":{"len":22,"line_nr":4,"pos":44,"col":0,"last_line":6},"platform":"windows","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 WaitGroup","is_multi":false,"pos":{"len":11,"line_nr":14,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Do not copy an instance of WaitGroup, use a ref instead.","is_multi":false,"pos":{"len":58,"line_nr":15,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":16,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 usage: in main thread:","is_multi":false,"pos":{"len":24,"line_nr":17,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `wg := sync.new_waitgroup()","is_multi":false,"pos":{"len":29,"line_nr":18,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `wg.add(nr_jobs)` before starting jobs with `go ...`","is_multi":false,"pos":{"len":54,"line_nr":19,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `wg.wait()` to wait for all jobs to have finished","is_multi":false,"pos":{"len":51,"line_nr":20,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":21,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 in each parallel job:","is_multi":false,"pos":{"len":23,"line_nr":22,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `wg.done()` when finished","is_multi":false,"pos":{"len":27,"line_nr":23,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":24,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 [init_with=new_waitgroup] // TODO: implement support for init_with struct attribute, and disallow WaitGroup{} from outside the sync.new_waitgroup() function.","is_multi":false,"pos":{"len":159,"line_nr":25,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\waitgroup.c.v","content":"fn (mut wg WaitGroup) init()","name":"init","parent_name":"WaitGroup","return_type":"void","pos":{"len":32,"line_nr":40,"pos":1181,"col":0,"last_line":42},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 add increments (+ve delta) or decrements (-ve delta) task count by delta","is_multi":false,"pos":{"len":74,"line_nr":44,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 and unblocks any wait() calls if task count becomes zero.","is_multi":false,"pos":{"len":59,"line_nr":45,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 add panics if task count drops below zero.","is_multi":false,"pos":{"len":44,"line_nr":46,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\waitgroup.c.v","content":"fn (mut wg WaitGroup) add(delta int)","name":"add","parent_name":"WaitGroup","return_type":"void","pos":{"len":40,"line_nr":47,"pos":1418,"col":0,"last_line":67},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 done is a convenience fn for add(-1)","is_multi":false,"pos":{"len":38,"line_nr":69,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\waitgroup.c.v","content":"fn (mut wg WaitGroup) done()","name":"done","parent_name":"WaitGroup","return_type":"void","pos":{"len":32,"line_nr":70,"pos":1985,"col":0,"last_line":72},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 wait blocks until all tasks are done (task count becomes zero)","is_multi":false,"pos":{"len":64,"line_nr":74,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\waitgroup.c.v","content":"fn (mut wg WaitGroup) wait()","name":"wait","parent_name":"WaitGroup","return_type":"void","pos":{"len":32,"line_nr":75,"pos":2101,"col":0,"last_line":83},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\waitgroup.c.v","content":"struct WaitGroup {\nmut:\n\ttask_count u32       // current task count - reading/writing should be atomic\n\twait_count u32       // current wait count - reading/writing should be atomic\n\tsem        Semaphore // This blocks wait() until tast_countreleased by add()\n}","name":"WaitGroup","parent_name":"","return_type":"","pos":{"len":20,"line_nr":27,"pos":829,"col":0,"last_line":32},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\sync\\waitgroup.c.v","content":"fn new_waitgroup() &WaitGroup","name":"new_waitgroup","parent_name":"","return_type":"WaitGroup","pos":{"len":33,"line_nr":34,"pos":1096,"col":0,"last_line":38},"platform":"cross","kind":"function","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-02-05 19:45:36"}