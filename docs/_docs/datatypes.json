{"module_name":"datatypes","contents":[{"attributes":{},"comments":[{"text":"\u0001 new_bloom_filter_fast creates a new bloom_filter. `table_size` is 16384, and `num_functions` is 4.","is_multi":false,"pos":{"len":100,"line_nr":38,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bloom_filter.v","content":"fn new_bloom_filter_fast[T](hash_func fn (T) u32) &BloomFilter[T]","name":"new_bloom_filter_fast","parent_name":"","return_type":"BloomFilter[T]","pos":{"len":69,"line_nr":39,"pos":1145,"col":0,"last_line":46},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_bloom_filter creates a new bloom_filter. `table_size` should be greater than 0, and `num_functions` should be 1~16.","is_multi":false,"pos":{"len":121,"line_nr":48,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bloom_filter.v","content":"fn new_bloom_filter[T](hash_func fn (T) u32, table_size int, num_functions int) !&BloomFilter[T]","name":"new_bloom_filter","parent_name":"","return_type":"BloomFilter[T]","pos":{"len":100,"line_nr":49,"pos":1469,"col":0,"last_line":63},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 adds the element to bloom filter.","is_multi":false,"pos":{"len":35,"line_nr":65,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bloom_filter.v","content":"fn (mut b BloomFilter[T]) add(element T)","name":"add","parent_name":"BloomFilter[T]","return_type":"void","pos":{"len":44,"line_nr":66,"pos":1973,"col":0,"last_line":75},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 checks the element is exists.","is_multi":false,"pos":{"len":31,"line_nr":77,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bloom_filter.v","content":"fn (b &BloomFilter[T]) exists(element T) bool","name":"exists","parent_name":"BloomFilter[T]","return_type":"bool","pos":{"len":49,"line_nr":78,"pos":2264,"col":0,"last_line":91},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 @union returns the union of the two bloom filters.","is_multi":false,"pos":{"len":52,"line_nr":93,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bloom_filter.v","content":"fn (l &BloomFilter[T]) @union(r &BloomFilter[T]) !&BloomFilter[T]","name":"@union","parent_name":"BloomFilter[T]","return_type":"BloomFilter[T]","pos":{"len":69,"line_nr":94,"pos":2630,"col":0,"last_line":111},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 intersection returns the intersection of bloom filters.","is_multi":false,"pos":{"len":57,"line_nr":113,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bloom_filter.v","content":"fn (l &BloomFilter[T]) intersection(r &BloomFilter[T]) !&BloomFilter[T]","name":"intersection","parent_name":"BloomFilter[T]","return_type":"BloomFilter[T]","pos":{"len":75,"line_nr":114,"pos":3194,"col":0,"last_line":131},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"BloomFilter[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Pure Binary Seach Tree implementation","is_multi":false,"pos":{"len":39,"line_nr":56,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":57,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Pure V implementation of the Binary Search Tree","is_multi":false,"pos":{"len":49,"line_nr":58,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Time complexity of main operation O(log N)","is_multi":false,"pos":{"len":44,"line_nr":59,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Space complexity O(N)","is_multi":false,"pos":{"len":23,"line_nr":60,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"struct BSTree[T] {\nmut:\n\troot &BSTreeNode[T] = unsafe { 0 }\n}","name":"BSTree","parent_name":"","return_type":"","pos":{"len":17,"line_nr":61,"pos":1452,"col":0,"last_line":64},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 insert give the possibility to insert an element in the BST.","is_multi":false,"pos":{"len":62,"line_nr":66,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (mut bst BSTree[T]) insert(value T) bool","name":"insert","parent_name":"BSTree[T]","return_type":"bool","pos":{"len":47,"line_nr":67,"pos":1583,"col":0,"last_line":73},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 contains checks if an element with a given `value` is inside the BST.","is_multi":false,"pos":{"len":71,"line_nr":93,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (bst &BSTree[T]) contains(value T) bool","name":"contains","parent_name":"BSTree[T]","return_type":"bool","pos":{"len":46,"line_nr":94,"pos":2362,"col":0,"last_line":96},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 remove removes an element with `value` from the BST.","is_multi":false,"pos":{"len":54,"line_nr":113,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (mut bst BSTree[T]) remove(value T) bool","name":"remove","parent_name":"BSTree[T]","return_type":"bool","pos":{"len":47,"line_nr":114,"pos":2961,"col":0,"last_line":119},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 is_empty checks if the BST is empty","is_multi":false,"pos":{"len":37,"line_nr":177,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (bst &BSTree[T]) is_empty() bool","name":"is_empty","parent_name":"BSTree[T]","return_type":"bool","pos":{"len":39,"line_nr":178,"pos":4851,"col":0,"last_line":180},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 in_order_traversal traverses the BST in order, and returns the result as an array.","is_multi":false,"pos":{"len":84,"line_nr":182,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (bst &BSTree[T]) in_order_traversal() []T","name":"in_order_traversal","parent_name":"BSTree[T]","return_type":"[]T","pos":{"len":48,"line_nr":183,"pos":5015,"col":0,"last_line":187},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 post_order_traversal traverses the BST in post order, and returns the result in an array.","is_multi":false,"pos":{"len":91,"line_nr":199,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (bst &BSTree[T]) post_order_traversal() []T","name":"post_order_traversal","parent_name":"BSTree[T]","return_type":"[]T","pos":{"len":50,"line_nr":200,"pos":5629,"col":0,"last_line":204},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pre_order_traversal traverses the BST in pre order, and returns the result as an array.","is_multi":false,"pos":{"len":89,"line_nr":218,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (bst &BSTree[T]) pre_order_traversal() []T","name":"pre_order_traversal","parent_name":"BSTree[T]","return_type":"[]T","pos":{"len":49,"line_nr":219,"pos":6279,"col":0,"last_line":223},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 to_left returns the value of the node to the left of the node with `value` specified if it exists,","is_multi":false,"pos":{"len":100,"line_nr":251,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 otherwise the a false value is returned.","is_multi":false,"pos":{"len":42,"line_nr":252,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":253,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 An example of usage can be the following one","is_multi":false,"pos":{"len":46,"line_nr":254,"pos":0,"col":0,"last_line":0}},{"text":"\u0001```v","is_multi":false,"pos":{"len":5,"line_nr":255,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 left_value, exist := bst.to_left(10)","is_multi":false,"pos":{"len":38,"line_nr":256,"pos":0,"col":0,"last_line":0}},{"text":"\u0001```","is_multi":false,"pos":{"len":4,"line_nr":257,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (bst &BSTree[T]) to_left(value T) !T","name":"to_left","parent_name":"BSTree[T]","return_type":"!T","pos":{"len":43,"line_nr":258,"pos":7486,"col":0,"last_line":268},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 to_right return the value of the element to the right of the node with `value` specified, if exist","is_multi":false,"pos":{"len":100,"line_nr":270,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 otherwise, the boolean value is false","is_multi":false,"pos":{"len":39,"line_nr":271,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 An example of usage can be the following one","is_multi":false,"pos":{"len":46,"line_nr":272,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":273,"pos":0,"col":0,"last_line":0}},{"text":"\u0001```v","is_multi":false,"pos":{"len":5,"line_nr":274,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 left_value, exist := bst.to_right(10)","is_multi":false,"pos":{"len":39,"line_nr":275,"pos":0,"col":0,"last_line":0}},{"text":"\u0001```","is_multi":false,"pos":{"len":4,"line_nr":276,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (bst &BSTree[T]) to_right(value T) !T","name":"to_right","parent_name":"BSTree[T]","return_type":"!T","pos":{"len":44,"line_nr":277,"pos":7995,"col":0,"last_line":287},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 max return the max element inside the BST.","is_multi":false,"pos":{"len":44,"line_nr":289,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Time complexity O(N) if the BST is not balanced","is_multi":false,"pos":{"len":49,"line_nr":290,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (bst &BSTree[T]) max() !T","name":"max","parent_name":"BSTree[T]","return_type":"!T","pos":{"len":32,"line_nr":291,"pos":8357,"col":0,"last_line":300},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 min return the minimum element in the BST.","is_multi":false,"pos":{"len":44,"line_nr":302,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Time complexity O(N) if the BST is not balanced.","is_multi":false,"pos":{"len":50,"line_nr":303,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\bstree.v","content":"fn (bst &BSTree[T]) min() !T","name":"min","parent_name":"BSTree[T]","return_type":"!T","pos":{"len":32,"line_nr":304,"pos":8676,"col":0,"last_line":313},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"BSTree[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"enum Direction {\n\tfront\n\tback\n}","name":"Direction","parent_name":"","return_type":"","pos":{"len":18,"line_nr":2,"pos":18,"col":0,"last_line":5},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 DoublyLinkedList[T] represents a generic doubly linked list of elements, each of type T.","is_multi":false,"pos":{"len":90,"line_nr":14,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"struct DoublyLinkedList[T] {\nmut:\n\thead &DoublyListNode[T] = unsafe { 0 }\n\ttail &DoublyListNode[T] = unsafe { 0 }\n\t// Internal iter pointer for allowing safe modification\n\t// of the list while iterating. TODO: use an option\n\t// instead of a pointer to determine it is initialized.\n\titer &DoublyListIter[T] = unsafe { 0 }\n\tlen  int\n}","name":"DoublyLinkedList","parent_name":"","return_type":"","pos":{"len":27,"line_nr":15,"pos":270,"col":0,"last_line":24},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 is_empty checks if the linked list is empty","is_multi":false,"pos":{"len":45,"line_nr":26,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (list DoublyLinkedList[T]) is_empty() bool","name":"is_empty","parent_name":"DoublyLinkedList[T]","return_type":"bool","pos":{"len":49,"line_nr":27,"pos":655,"col":0,"last_line":29},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 len returns the length of the linked list","is_multi":false,"pos":{"len":43,"line_nr":31,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (list DoublyLinkedList[T]) len() int","name":"len","parent_name":"DoublyLinkedList[T]","return_type":"int","pos":{"len":43,"line_nr":32,"pos":777,"col":0,"last_line":34},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 first returns the first element of the linked list","is_multi":false,"pos":{"len":52,"line_nr":36,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (list DoublyLinkedList[T]) first() !T","name":"first","parent_name":"DoublyLinkedList[T]","return_type":"!T","pos":{"len":44,"line_nr":37,"pos":897,"col":0,"last_line":42},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 last returns the last element of the linked list","is_multi":false,"pos":{"len":50,"line_nr":44,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (list DoublyLinkedList[T]) last() !T","name":"last","parent_name":"DoublyLinkedList[T]","return_type":"!T","pos":{"len":43,"line_nr":45,"pos":1086,"col":0,"last_line":50},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 push_back adds an element to the end of the linked list","is_multi":false,"pos":{"len":57,"line_nr":52,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) push_back(item T)","name":"push_back","parent_name":"DoublyLinkedList[T]","return_type":"void","pos":{"len":55,"line_nr":53,"pos":1281,"col":0,"last_line":67},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 push_front adds an element to the beginning of the linked list","is_multi":false,"pos":{"len":64,"line_nr":69,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) push_front(item T)","name":"push_front","parent_name":"DoublyLinkedList[T]","return_type":"void","pos":{"len":56,"line_nr":70,"pos":1657,"col":0,"last_line":84},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 push_many adds array of elements to the beginning of the linked list","is_multi":false,"pos":{"len":70,"line_nr":86,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) push_many(elements []T, direction Direction)","name":"push_many","parent_name":"DoublyLinkedList[T]","return_type":"void","pos":{"len":82,"line_nr":87,"pos":2040,"col":0,"last_line":101},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pop_back removes the last element of the linked list","is_multi":false,"pos":{"len":54,"line_nr":103,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) pop_back() !T","name":"pop_back","parent_name":"DoublyLinkedList[T]","return_type":"!T","pos":{"len":51,"line_nr":104,"pos":2378,"col":0,"last_line":122},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pop_front removes the last element of the linked list","is_multi":false,"pos":{"len":55,"line_nr":124,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) pop_front() !T","name":"pop_front","parent_name":"DoublyLinkedList[T]","return_type":"!T","pos":{"len":52,"line_nr":125,"pos":2844,"col":0,"last_line":143},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 insert adds an element to the linked list at the given index","is_multi":false,"pos":{"len":62,"line_nr":145,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) insert(idx int, item T) !","name":"insert","parent_name":"DoublyLinkedList[T]","return_type":"!","pos":{"len":63,"line_nr":146,"pos":3318,"col":0,"last_line":160},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 index searches the linked list for item and returns the forward index","is_multi":false,"pos":{"len":71,"line_nr":234,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 or none if not found.","is_multi":false,"pos":{"len":23,"line_nr":235,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (list &DoublyLinkedList[T]) index(item T) !int","name":"index","parent_name":"DoublyLinkedList[T]","return_type":"!int","pos":{"len":53,"line_nr":236,"pos":5838,"col":0,"last_line":251},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 delete removes index idx from the linked list and is safe to call","is_multi":false,"pos":{"len":67,"line_nr":253,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 for any idx.","is_multi":false,"pos":{"len":14,"line_nr":254,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) delete(idx int)","name":"delete","parent_name":"DoublyLinkedList[T]","return_type":"void","pos":{"len":53,"line_nr":255,"pos":6218,"col":0,"last_line":270},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 str returns a string representation of the linked list","is_multi":false,"pos":{"len":56,"line_nr":272,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (list DoublyLinkedList[T]) str() string","name":"str","parent_name":"DoublyLinkedList[T]","return_type":"string","pos":{"len":46,"line_nr":273,"pos":6644,"col":0,"last_line":275},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 array returns a array representation of the linked list","is_multi":false,"pos":{"len":57,"line_nr":277,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (list DoublyLinkedList[T]) array() []T","name":"array","parent_name":"DoublyLinkedList[T]","return_type":"[]T","pos":{"len":45,"line_nr":278,"pos":6782,"col":0,"last_line":286},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 next implements the iter interface to use DoublyLinkedList with","is_multi":false,"pos":{"len":65,"line_nr":288,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 V's `for x in list {` loop syntax.","is_multi":false,"pos":{"len":36,"line_nr":289,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) next() ?T","name":"next","parent_name":"DoublyLinkedList[T]","return_type":"?T","pos":{"len":47,"line_nr":290,"pos":7100,"col":0,"last_line":306},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 iterator returns a new iterator instance for the `list`.","is_multi":false,"pos":{"len":58,"line_nr":308,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) iterator() DoublyListIter[T]","name":"iterator","parent_name":"DoublyLinkedList[T]","return_type":"DoublyListIter[T]","pos":{"len":66,"line_nr":309,"pos":7524,"col":0,"last_line":313},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 back_iterator returns a new backwards iterator instance for the `list`.","is_multi":false,"pos":{"len":73,"line_nr":315,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut list DoublyLinkedList[T]) back_iterator() DoublyListIterBack[T]","name":"back_iterator","parent_name":"DoublyLinkedList[T]","return_type":"DoublyListIterBack[T]","pos":{"len":75,"line_nr":316,"pos":7719,"col":0,"last_line":320},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"DoublyLinkedList[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 DoublyListIter[T] is an iterator for DoublyLinkedList.","is_multi":false,"pos":{"len":56,"line_nr":322,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It starts from *the start* and moves forwards to *the end* of the list.","is_multi":false,"pos":{"len":73,"line_nr":323,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It can be used with V's `for x in iter {` construct.","is_multi":false,"pos":{"len":54,"line_nr":324,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 One list can have multiple independent iterators, pointing to different positions/places in the list.","is_multi":false,"pos":{"len":103,"line_nr":325,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 A DoublyListIter iterator instance always traverses the list from *start to finish*.","is_multi":false,"pos":{"len":86,"line_nr":326,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"struct DoublyListIter[T] {\nmut:\n\tnode &DoublyListNode[T] = unsafe { 0 }\n}","name":"DoublyListIter","parent_name":"","return_type":"","pos":{"len":25,"line_nr":327,"pos":8234,"col":0,"last_line":330},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 next returns *the next* element of the list, or `none` when the end of the list is reached.","is_multi":false,"pos":{"len":93,"line_nr":332,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It is called by V's `for x in iter{` on each iteration.","is_multi":false,"pos":{"len":57,"line_nr":333,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut iter DoublyListIter[T]) next() ?T","name":"next","parent_name":"DoublyListIter[T]","return_type":"?T","pos":{"len":45,"line_nr":334,"pos":8467,"col":0,"last_line":341},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"DoublyListIter[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 DoublyListIterBack[T] is an iterator for DoublyLinkedList.","is_multi":false,"pos":{"len":60,"line_nr":343,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It starts from *the end* and moves backwards to *the start* of the list.","is_multi":false,"pos":{"len":74,"line_nr":344,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It can be used with V's `for x in iter {` construct.","is_multi":false,"pos":{"len":54,"line_nr":345,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 One list can have multiple independent iterators, pointing to different positions/places in the list.","is_multi":false,"pos":{"len":103,"line_nr":346,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 A DoublyListIterBack iterator instance always traverses the list from *finish to start*.","is_multi":false,"pos":{"len":90,"line_nr":347,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"struct DoublyListIterBack[T] {\nmut:\n\tnode &DoublyListNode[T] = unsafe { 0 }\n}","name":"DoublyListIterBack","parent_name":"","return_type":"","pos":{"len":29,"line_nr":348,"pos":9023,"col":0,"last_line":351},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 next returns *the previous* element of the list, or `none` when the start of the list is reached.","is_multi":false,"pos":{"len":99,"line_nr":353,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It is called by V's `for x in iter{` on each iteration.","is_multi":false,"pos":{"len":57,"line_nr":354,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\doubly_linked_list.v","content":"fn (mut iter DoublyListIterBack[T]) next() ?T","name":"next","parent_name":"DoublyListIterBack[T]","return_type":"?T","pos":{"len":49,"line_nr":355,"pos":9266,"col":0,"last_line":362},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"DoublyListIterBack[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 MinHeap is a binary minimum heap data structure.","is_multi":false,"pos":{"len":50,"line_nr":2,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\heap.v","content":"struct MinHeap[T] {\nmut:\n\tdata []T\n}","name":"MinHeap","parent_name":"","return_type":"","pos":{"len":18,"line_nr":3,"pos":70,"col":0,"last_line":6},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 insert adds an element to the heap.","is_multi":false,"pos":{"len":37,"line_nr":8,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\heap.v","content":"fn (mut heap MinHeap[T]) insert(item T)","name":"insert","parent_name":"MinHeap[T]","return_type":"void","pos":{"len":43,"line_nr":9,"pos":151,"col":0,"last_line":20},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 insert array of elements to the heap.","is_multi":false,"pos":{"len":39,"line_nr":22,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\heap.v","content":"fn (mut heap MinHeap[T]) insert_many(elements []T)","name":"insert_many","parent_name":"MinHeap[T]","return_type":"void","pos":{"len":54,"line_nr":23,"pos":599,"col":0,"last_line":27},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pop removes the top-most element from the heap.","is_multi":false,"pos":{"len":49,"line_nr":29,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\heap.v","content":"fn (mut heap MinHeap[T]) pop() !T","name":"pop","parent_name":"MinHeap[T]","return_type":"!T","pos":{"len":37,"line_nr":30,"pos":751,"col":0,"last_line":52},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 peek gets the top-most element from the heap without removing it.","is_multi":false,"pos":{"len":67,"line_nr":54,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\heap.v","content":"fn (heap MinHeap[T]) peek() !T","name":"peek","parent_name":"MinHeap[T]","return_type":"!T","pos":{"len":34,"line_nr":55,"pos":1644,"col":0,"last_line":60},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 len returns the number of elements in the heap.","is_multi":false,"pos":{"len":49,"line_nr":62,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\heap.v","content":"fn (heap MinHeap[T]) len() int","name":"len","parent_name":"MinHeap[T]","return_type":"int","pos":{"len":34,"line_nr":63,"pos":1816,"col":0,"last_line":65},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"MinHeap[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"struct ListNode[T] {\nmut:\n\tdata T\n\tnext &ListNode[T] = unsafe { 0 }\n}","name":"ListNode","parent_name":"","return_type":"","pos":{"len":19,"line_nr":2,"pos":18,"col":0,"last_line":6},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"struct LinkedList[T] {\nmut:\n\thead &ListNode[T] = unsafe { 0 }\n\tlen  int\n\t// Internal iter pointer for allowing safe modification\n\t// of the list while iterating. TODO: use an option\n\t// instead of a pointer to determine if it is initialized.\n\titer &ListIter[T] = unsafe { 0 }\n}","name":"LinkedList","parent_name":"","return_type":"","pos":{"len":21,"line_nr":8,"pos":93,"col":0,"last_line":16},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 is_empty checks if the linked list is empty","is_multi":false,"pos":{"len":45,"line_nr":18,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (list LinkedList[T]) is_empty() bool","name":"is_empty","parent_name":"LinkedList[T]","return_type":"bool","pos":{"len":43,"line_nr":19,"pos":423,"col":0,"last_line":21},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 len returns the length of the linked list","is_multi":false,"pos":{"len":43,"line_nr":23,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (list LinkedList[T]) len() int","name":"len","parent_name":"LinkedList[T]","return_type":"int","pos":{"len":37,"line_nr":24,"pos":539,"col":0,"last_line":26},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 first returns the first element of the linked list","is_multi":false,"pos":{"len":52,"line_nr":28,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (list LinkedList[T]) first() !T","name":"first","parent_name":"LinkedList[T]","return_type":"!T","pos":{"len":38,"line_nr":29,"pos":653,"col":0,"last_line":31},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 last returns the last element of the linked list","is_multi":false,"pos":{"len":50,"line_nr":33,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (list LinkedList[T]) last() !T","name":"last","parent_name":"LinkedList[T]","return_type":"!T","pos":{"len":37,"line_nr":34,"pos":835,"col":0,"last_line":44},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 index returns the element at the given index of the linked list","is_multi":false,"pos":{"len":65,"line_nr":46,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (list LinkedList[T]) index(idx int) !T","name":"index","parent_name":"LinkedList[T]","return_type":"!T","pos":{"len":45,"line_nr":47,"pos":1130,"col":0,"last_line":63},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 push adds an element to the end of the linked list","is_multi":false,"pos":{"len":52,"line_nr":65,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (mut list LinkedList[T]) push(item T)","name":"push","parent_name":"LinkedList[T]","return_type":"void","pos":{"len":44,"line_nr":66,"pos":1580,"col":0,"last_line":81},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 push adds an array of elements to the end of the linked list","is_multi":false,"pos":{"len":62,"line_nr":83,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (mut list LinkedList[T]) push_many(elements []T)","name":"push_many","parent_name":"LinkedList[T]","return_type":"void","pos":{"len":55,"line_nr":84,"pos":1946,"col":0,"last_line":88},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pop removes the last element of the linked list","is_multi":false,"pos":{"len":49,"line_nr":90,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (mut list LinkedList[T]) pop() !T","name":"pop","parent_name":"LinkedList[T]","return_type":"!T","pos":{"len":40,"line_nr":91,"pos":2097,"col":0,"last_line":111},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 shift removes the first element of the linked list","is_multi":false,"pos":{"len":52,"line_nr":113,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (mut list LinkedList[T]) shift() !T","name":"shift","parent_name":"LinkedList[T]","return_type":"!T","pos":{"len":42,"line_nr":114,"pos":2627,"col":0,"last_line":123},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 insert adds an element to the linked list at the given index","is_multi":false,"pos":{"len":62,"line_nr":125,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (mut list LinkedList[T]) insert(idx int, item T) !","name":"insert","parent_name":"LinkedList[T]","return_type":"!","pos":{"len":57,"line_nr":126,"pos":2902,"col":0,"last_line":151},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 prepend adds an element to the beginning of the linked list (equivalent to insert(0, item))","is_multi":false,"pos":{"len":93,"line_nr":153,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (mut list LinkedList[T]) prepend(item T)","name":"prepend","parent_name":"LinkedList[T]","return_type":"void","pos":{"len":47,"line_nr":154,"pos":3499,"col":0,"last_line":156},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 str returns a string representation of the linked list","is_multi":false,"pos":{"len":56,"line_nr":158,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (list LinkedList[T]) str() string","name":"str","parent_name":"LinkedList[T]","return_type":"string","pos":{"len":40,"line_nr":159,"pos":3638,"col":0,"last_line":161},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 array returns a array representation of the linked list","is_multi":false,"pos":{"len":57,"line_nr":163,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (list LinkedList[T]) array() []T","name":"array","parent_name":"LinkedList[T]","return_type":"[]T","pos":{"len":39,"line_nr":164,"pos":3770,"col":0,"last_line":172},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 next implements the iteration interface to use LinkedList","is_multi":false,"pos":{"len":59,"line_nr":174,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 with V's `for` loop syntax.","is_multi":false,"pos":{"len":29,"line_nr":175,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (mut list LinkedList[T]) next() ?T","name":"next","parent_name":"LinkedList[T]","return_type":"?T","pos":{"len":41,"line_nr":176,"pos":4069,"col":0,"last_line":192},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 iterator returns a new iterator instance for the `list`.","is_multi":false,"pos":{"len":58,"line_nr":194,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (mut list LinkedList[T]) iterator() ListIter[T]","name":"iterator","parent_name":"LinkedList[T]","return_type":"ListIter[T]","pos":{"len":54,"line_nr":195,"pos":4481,"col":0,"last_line":199},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"LinkedList[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 ListIter[T] is an iterator for LinkedList.","is_multi":false,"pos":{"len":44,"line_nr":201,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It can be used with V's `for x in iter {` construct.","is_multi":false,"pos":{"len":54,"line_nr":202,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 One list can have multiple independent iterators, pointing to different positions/places in the list.","is_multi":false,"pos":{"len":103,"line_nr":203,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 An iterator instance always traverses the list from start to finish.","is_multi":false,"pos":{"len":70,"line_nr":204,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"struct ListIter[T] {\nmut:\n\tnode &ListNode[T] = unsafe { 0 }\n}","name":"ListIter","parent_name":"","return_type":"","pos":{"len":19,"line_nr":205,"pos":4862,"col":0,"last_line":208},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 next returns the next element of the list, or `none` when the end of the list is reached.","is_multi":false,"pos":{"len":91,"line_nr":210,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It is called by V's `for x in iter{` on each iteration.","is_multi":false,"pos":{"len":57,"line_nr":211,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\linked_list.v","content":"fn (mut iter ListIter[T]) next() ?T","name":"next","parent_name":"ListIter[T]","return_type":"?T","pos":{"len":39,"line_nr":212,"pos":5081,"col":0,"last_line":219},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"ListIter[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\quadtree.v","content":"struct AABB {\npub mut:\n\tx      f64\n\ty      f64\n\twidth  f64\n\theight f64\n}","name":"AABB","parent_name":"","return_type":"","pos":{"len":15,"line_nr":2,"pos":18,"col":0,"last_line":8},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 create returns a new configurable root node for the tree.","is_multi":false,"pos":{"len":59,"line_nr":20,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\quadtree.v","content":"fn (mut q Quadtree) create(x f64, y f64, width f64, height f64, capacity int, depth int, level int) Quadtree","name":"create","parent_name":"Quadtree","return_type":"Quadtree","pos":{"len":112,"line_nr":21,"pos":292,"col":0,"last_line":35},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 insert recursively adds a particle in the correct index of the tree.","is_multi":false,"pos":{"len":70,"line_nr":37,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\quadtree.v","content":"fn (mut q Quadtree) insert(p AABB)","name":"insert","parent_name":"Quadtree","return_type":"void","pos":{"len":38,"line_nr":38,"pos":685,"col":0,"last_line":64},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 retrieve recursively checks if a particle is in a specific index of the tree.","is_multi":false,"pos":{"len":79,"line_nr":66,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\quadtree.v","content":"fn (mut q Quadtree) retrieve(p AABB) []AABB","name":"retrieve","parent_name":"Quadtree","return_type":"[]AABB","pos":{"len":47,"line_nr":67,"pos":1265,"col":0,"last_line":77},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 clear flushes out nodes and particles from the tree.","is_multi":false,"pos":{"len":54,"line_nr":79,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\quadtree.v","content":"fn (mut q Quadtree) clear()","name":"clear","parent_name":"Quadtree","return_type":"void","pos":{"len":31,"line_nr":80,"pos":1596,"col":0,"last_line":88},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 get_nodes recursively returns the subdivisions the tree has.","is_multi":false,"pos":{"len":62,"line_nr":90,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\quadtree.v","content":"fn (q Quadtree) get_nodes() []Quadtree","name":"get_nodes","parent_name":"Quadtree","return_type":"[]Quadtree","pos":{"len":42,"line_nr":91,"pos":1810,"col":0,"last_line":100},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\quadtree.v","content":"struct Quadtree {\npub mut:\n\tperimeter AABB\n\tcapacity  int\n\tdepth     int\n\tlevel     int\n\tparticles []AABB\n\tnodes     []Quadtree\n}","name":"Quadtree","parent_name":"","return_type":"","pos":{"len":19,"line_nr":10,"pos":96,"col":0,"last_line":18},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"struct Queue[T] {\nmut:\n\telements LinkedList[T]\n}","name":"Queue","parent_name":"","return_type":"","pos":{"len":16,"line_nr":2,"pos":18,"col":0,"last_line":5},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 is_empty checks if the queue is empty","is_multi":false,"pos":{"len":39,"line_nr":7,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"fn (queue Queue[T]) is_empty() bool","name":"is_empty","parent_name":"Queue[T]","return_type":"bool","pos":{"len":39,"line_nr":8,"pos":113,"col":0,"last_line":10},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 len returns the length of the queue","is_multi":false,"pos":{"len":37,"line_nr":12,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"fn (queue Queue[T]) len() int","name":"len","parent_name":"Queue[T]","return_type":"int","pos":{"len":33,"line_nr":13,"pos":231,"col":0,"last_line":15},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 peek returns the head of the queue (first element added)","is_multi":false,"pos":{"len":58,"line_nr":17,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"fn (queue Queue[T]) peek() !T","name":"peek","parent_name":"Queue[T]","return_type":"!T","pos":{"len":33,"line_nr":18,"pos":359,"col":0,"last_line":20},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 last returns the tail of the queue (last element added)","is_multi":false,"pos":{"len":57,"line_nr":22,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"fn (queue Queue[T]) last() !T","name":"last","parent_name":"Queue[T]","return_type":"!T","pos":{"len":33,"line_nr":23,"pos":488,"col":0,"last_line":25},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 index returns the element at the given index of the queue","is_multi":false,"pos":{"len":59,"line_nr":27,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"fn (queue Queue[T]) index(idx int) !T","name":"index","parent_name":"Queue[T]","return_type":"!T","pos":{"len":41,"line_nr":28,"pos":618,"col":0,"last_line":30},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 push adds an element to the tail of the queue","is_multi":false,"pos":{"len":47,"line_nr":32,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"fn (mut queue Queue[T]) push(item T)","name":"push","parent_name":"Queue[T]","return_type":"void","pos":{"len":40,"line_nr":33,"pos":748,"col":0,"last_line":35},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pop removes the element at the head of the queue and returns it","is_multi":false,"pos":{"len":65,"line_nr":37,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"fn (mut queue Queue[T]) pop() !T","name":"pop","parent_name":"Queue[T]","return_type":"!T","pos":{"len":36,"line_nr":38,"pos":888,"col":0,"last_line":40},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 str returns a string representation of the queue","is_multi":false,"pos":{"len":50,"line_nr":42,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"fn (queue Queue[T]) str() string","name":"str","parent_name":"Queue[T]","return_type":"string","pos":{"len":36,"line_nr":43,"pos":1013,"col":0,"last_line":45},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 array returns a array representation of the queue","is_multi":false,"pos":{"len":51,"line_nr":47,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\queue.v","content":"fn (queue Queue[T]) array() []T","name":"array","parent_name":"Queue[T]","return_type":"[]T","pos":{"len":35,"line_nr":48,"pos":1137,"col":0,"last_line":50},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Queue[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 RingBuffer represents a ring buffer also known as a circular buffer.","is_multi":false,"pos":{"len":70,"line_nr":4,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"struct RingBuffer[T] {\nmut:\n\treader  int // index of the tail where data is going to be read\n\twriter  int // index of the head where data is going to be written\n\tcontent []T\n}","name":"RingBuffer","parent_name":"","return_type":"","pos":{"len":21,"line_nr":5,"pos":142,"col":0,"last_line":10},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_ringbuffer creates an empty ring buffer of size `s`.","is_multi":false,"pos":{"len":58,"line_nr":12,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn new_ringbuffer[T](s int) RingBuffer[T]","name":"new_ringbuffer","parent_name":"","return_type":"RingBuffer[T]","pos":{"len":45,"line_nr":13,"pos":383,"col":0,"last_line":17},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 push adds an element to the ring buffer.","is_multi":false,"pos":{"len":42,"line_nr":19,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (mut rb RingBuffer[T]) push(element T) !","name":"push","parent_name":"RingBuffer[T]","return_type":"!","pos":{"len":47,"line_nr":20,"pos":695,"col":0,"last_line":27},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pop returns the oldest element in the buffer.","is_multi":false,"pos":{"len":47,"line_nr":29,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (mut rb RingBuffer[T]) pop() !T","name":"pop","parent_name":"RingBuffer[T]","return_type":"!T","pos":{"len":38,"line_nr":30,"pos":916,"col":0,"last_line":38},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 push_many pushes an array to the buffer.","is_multi":false,"pos":{"len":42,"line_nr":40,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (mut rb RingBuffer[T]) push_many(elements []T) !","name":"push_many","parent_name":"RingBuffer[T]","return_type":"!","pos":{"len":55,"line_nr":41,"pos":1132,"col":0,"last_line":45},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pop_many returns `n` elements of the buffer starting with the oldest one.","is_multi":false,"pos":{"len":75,"line_nr":47,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (mut rb RingBuffer[T]) pop_many(n u64) ![]T","name":"pop_many","parent_name":"RingBuffer[T]","return_type":"![]T","pos":{"len":50,"line_nr":48,"pos":1325,"col":0,"last_line":54},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 is_empty returns `true` if the ring buffer is empty, `false` otherwise.","is_multi":false,"pos":{"len":73,"line_nr":56,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (rb RingBuffer[T]) is_empty() bool","name":"is_empty","parent_name":"RingBuffer[T]","return_type":"bool","pos":{"len":41,"line_nr":57,"pos":1559,"col":0,"last_line":59},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 is_full returns `true` if the ring buffer is full, `false` otherwise.","is_multi":false,"pos":{"len":71,"line_nr":61,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (rb RingBuffer[T]) is_full() bool","name":"is_full","parent_name":"RingBuffer[T]","return_type":"bool","pos":{"len":40,"line_nr":62,"pos":1830,"col":0,"last_line":70},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 capacity returns the capacity of the ring buffer.","is_multi":false,"pos":{"len":51,"line_nr":72,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (rb RingBuffer[T]) capacity() int","name":"capacity","parent_name":"RingBuffer[T]","return_type":"int","pos":{"len":40,"line_nr":73,"pos":2081,"col":0,"last_line":75},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 clear empties the ring buffer and all pushed elements.","is_multi":false,"pos":{"len":56,"line_nr":77,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (mut rb RingBuffer[T]) clear()","name":"clear","parent_name":"RingBuffer[T]","return_type":"void","pos":{"len":37,"line_nr":78,"pos":2299,"col":0,"last_line":82},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 occupied returns the occupied capacity of the buffer.","is_multi":false,"pos":{"len":55,"line_nr":84,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (rb RingBuffer[T]) occupied() int","name":"occupied","parent_name":"RingBuffer[T]","return_type":"int","pos":{"len":40,"line_nr":85,"pos":2480,"col":0,"last_line":102},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 remaining returns the remaining capacity of the buffer.","is_multi":false,"pos":{"len":57,"line_nr":104,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\ringbuffer.v","content":"fn (rb RingBuffer[T]) remaining() int","name":"remaining","parent_name":"RingBuffer[T]","return_type":"int","pos":{"len":41,"line_nr":105,"pos":2786,"col":0,"last_line":107},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"RingBuffer[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"struct Set[T] {\nmut:\n\telements map[T]u8\n}","name":"Set","parent_name":"","return_type":"","pos":{"len":14,"line_nr":2,"pos":18,"col":0,"last_line":5},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 checks the element is exists.","is_multi":false,"pos":{"len":31,"line_nr":7,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (set Set[T]) exists(element T) bool","name":"exists","parent_name":"Set[T]","return_type":"bool","pos":{"len":42,"line_nr":8,"pos":98,"col":0,"last_line":10},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 adds the element to set, if it is not present already.","is_multi":false,"pos":{"len":56,"line_nr":12,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (mut set Set[T]) add(element T)","name":"add","parent_name":"Set[T]","return_type":"void","pos":{"len":38,"line_nr":13,"pos":236,"col":0,"last_line":15},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 removes the element from set.","is_multi":false,"pos":{"len":31,"line_nr":17,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (mut set Set[T]) remove(element T)","name":"remove","parent_name":"Set[T]","return_type":"void","pos":{"len":41,"line_nr":18,"pos":340,"col":0,"last_line":20},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pick returns an arbitrary element of set, if set is not empty.","is_multi":false,"pos":{"len":64,"line_nr":22,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (set Set[T]) pick() !T","name":"pick","parent_name":"Set[T]","return_type":"!T","pos":{"len":29,"line_nr":23,"pos":483,"col":0,"last_line":28},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 rest returns the set consisting of all elements except for the arbitrary element.","is_multi":false,"pos":{"len":83,"line_nr":30,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (mut set Set[T]) rest() ![]T","name":"rest","parent_name":"Set[T]","return_type":"![]T","pos":{"len":35,"line_nr":31,"pos":676,"col":0,"last_line":34},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pop returns an arbitrary element and deleting it from set.","is_multi":false,"pos":{"len":60,"line_nr":36,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (mut set Set[T]) pop() !T","name":"pop","parent_name":"Set[T]","return_type":"!T","pos":{"len":32,"line_nr":37,"pos":853,"col":0,"last_line":41},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 delete all elements of set.","is_multi":false,"pos":{"len":29,"line_nr":43,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (mut set Set[T]) clear()","name":"clear","parent_name":"Set[T]","return_type":"void","pos":{"len":31,"line_nr":44,"pos":992,"col":0,"last_line":46},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 == checks whether the two given sets are equal (i.e. contain all and only the same elements).","is_multi":false,"pos":{"len":95,"line_nr":48,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (l Set[T]) == (r Set[T]) bool","name":"==","parent_name":"Set[T]","return_type":"bool","pos":{"len":36,"line_nr":49,"pos":1153,"col":0,"last_line":59},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 is_empty checks whether the set is empty or not.","is_multi":false,"pos":{"len":50,"line_nr":61,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (set Set[T]) is_empty() bool","name":"is_empty","parent_name":"Set[T]","return_type":"bool","pos":{"len":35,"line_nr":62,"pos":1390,"col":0,"last_line":64},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 size returns the number of elements in the set.","is_multi":false,"pos":{"len":49,"line_nr":66,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (set Set[T]) size() int","name":"size","parent_name":"Set[T]","return_type":"int","pos":{"len":30,"line_nr":67,"pos":1506,"col":0,"last_line":69},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 copy returns a copy of all the elements in the set.","is_multi":false,"pos":{"len":53,"line_nr":71,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (set Set[T]) copy() Set[T]","name":"copy","parent_name":"Set[T]","return_type":"Set[T]","pos":{"len":33,"line_nr":72,"pos":1622,"col":0,"last_line":76},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 add_all adds the whole `elements` array to the set","is_multi":false,"pos":{"len":52,"line_nr":78,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (mut set Set[T]) add_all(elements []T)","name":"add_all","parent_name":"Set[T]","return_type":"void","pos":{"len":45,"line_nr":79,"pos":1767,"col":0,"last_line":83},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 @union returns the union of the two sets.","is_multi":false,"pos":{"len":43,"line_nr":85,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (l Set[T]) @union(r Set[T]) Set[T]","name":"@union","parent_name":"Set[T]","return_type":"Set[T]","pos":{"len":41,"line_nr":86,"pos":1912,"col":0,"last_line":92},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 intersection returns the intersection of sets.","is_multi":false,"pos":{"len":48,"line_nr":94,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (l Set[T]) intersection(r Set[T]) Set[T]","name":"intersection","parent_name":"Set[T]","return_type":"Set[T]","pos":{"len":47,"line_nr":95,"pos":2077,"col":0,"last_line":108},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 - returns the difference of sets.","is_multi":false,"pos":{"len":35,"line_nr":110,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (l Set[T]) - (r Set[T]) Set[T]","name":"-","parent_name":"Set[T]","return_type":"Set[T]","pos":{"len":37,"line_nr":111,"pos":2333,"col":0,"last_line":119},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 subset returns true if the set `r` is a subset of the set `l`.","is_multi":false,"pos":{"len":64,"line_nr":121,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\set.v","content":"fn (l Set[T]) subset(r Set[T]) bool","name":"subset","parent_name":"Set[T]","return_type":"bool","pos":{"len":39,"line_nr":122,"pos":2537,"col":0,"last_line":129},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Set[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\stack.v","content":"struct Stack[T] {\nmut:\n\telements []T\n}","name":"Stack","parent_name":"","return_type":"","pos":{"len":16,"line_nr":2,"pos":18,"col":0,"last_line":5},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 is_empty checks if the stack is empty","is_multi":false,"pos":{"len":39,"line_nr":7,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\stack.v","content":"fn (stack Stack[T]) is_empty() bool","name":"is_empty","parent_name":"Stack[T]","return_type":"bool","pos":{"len":39,"line_nr":8,"pos":103,"col":0,"last_line":10},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 len returns the length of the stack","is_multi":false,"pos":{"len":37,"line_nr":12,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\stack.v","content":"fn (stack Stack[T]) len() int","name":"len","parent_name":"Stack[T]","return_type":"int","pos":{"len":33,"line_nr":13,"pos":219,"col":0,"last_line":15},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 peek returns the top of the stack","is_multi":false,"pos":{"len":35,"line_nr":17,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\stack.v","content":"fn (stack Stack[T]) peek() !T","name":"peek","parent_name":"Stack[T]","return_type":"!T","pos":{"len":33,"line_nr":18,"pos":322,"col":0,"last_line":20},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 push adds an element to the top of the stack","is_multi":false,"pos":{"len":46,"line_nr":22,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\stack.v","content":"fn (mut stack Stack[T]) push(item T)","name":"push","parent_name":"Stack[T]","return_type":"void","pos":{"len":40,"line_nr":23,"pos":497,"col":0,"last_line":25},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pop removes the element at the top of the stack and returns it","is_multi":false,"pos":{"len":64,"line_nr":27,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\stack.v","content":"fn (mut stack Stack[T]) pop() !T","name":"pop","parent_name":"Stack[T]","return_type":"!T","pos":{"len":36,"line_nr":28,"pos":633,"col":0,"last_line":30},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 str returns a string representation of the stack","is_multi":false,"pos":{"len":50,"line_nr":32,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\stack.v","content":"fn (stack Stack[T]) str() string","name":"str","parent_name":"Stack[T]","return_type":"string","pos":{"len":36,"line_nr":33,"pos":814,"col":0,"last_line":35},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 array returns a array representation of the stack","is_multi":false,"pos":{"len":51,"line_nr":37,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\datatypes\\stack.v","content":"fn (stack Stack[T]) array() []T","name":"array","parent_name":"Stack[T]","return_type":"[]T","pos":{"len":35,"line_nr":38,"pos":938,"col":0,"last_line":40},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Stack[T]","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"typedef","public":false,"from_scope":false}],"generator":"vdoc","time_generated":"2024-02-05 19:45:30"}