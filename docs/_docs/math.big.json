{"module_name":"math.big","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\big.v","content":"const zero_int = Integer{\n\tdigits: []u32{len: 0}\n\tsignum: 0\n\tis_const: true\n}","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":2,"pos":12,"col":0,"last_line":6},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\big.v","content":"const one_int = Integer{\n\tdigits: [u32(1)]\n\tsignum: 1\n\tis_const: true\n}","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":7,"pos":94,"col":0,"last_line":11},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\big.v","content":"const two_int = Integer{\n\tdigits: [u32(2)]\n\tsignum: 1\n\tis_const: true\n}","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":12,"pos":170,"col":0,"last_line":16},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\big.v","content":"const three_int = Integer{\n\tdigits: [u32(3)]\n\tsignum: 1\n\tis_const: true\n}","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":17,"pos":246,"col":0,"last_line":21},"platform":"cross","kind":"const_group","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Constants","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"const_group","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 big.Integer","is_multi":false,"pos":{"len":13,"line_nr":8,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 -----------","is_multi":false,"pos":{"len":13,"line_nr":9,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It has the following properties:","is_multi":false,"pos":{"len":34,"line_nr":10,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 1. Every \"digit\" is an integer in the range [0, 2^32).","is_multi":false,"pos":{"len":56,"line_nr":11,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 2. The signum can be one of three values: -1, 0, +1 for","is_multi":false,"pos":{"len":57,"line_nr":12,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 \t\tnegative, zero, and positive values, respectively.","is_multi":false,"pos":{"len":54,"line_nr":13,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 3. There should be no leading zeros in the digit array.","is_multi":false,"pos":{"len":57,"line_nr":14,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 4. The digits are stored in little endian format, that is,","is_multi":false,"pos":{"len":60,"line_nr":15,"pos":0,"col":0,"last_line":0}},{"text":"\u0001\t\tthe digits with a lower positional value (towards the right","is_multi":false,"pos":{"len":62,"line_nr":16,"pos":0,"col":0,"last_line":0}},{"text":"\u0001\t\twhen represented as a string) have a lower index, and vice versa.","is_multi":false,"pos":{"len":68,"line_nr":17,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 abs returns the absolute value of the integer `a`.","is_multi":false,"pos":{"len":52,"line_nr":267,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) abs() Integer","name":"abs","parent_name":"Integer","return_type":"Integer","pos":{"len":32,"line_nr":268,"pos":6388,"col":0,"last_line":277},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 neg returns the result of negation of the integer `a`.","is_multi":false,"pos":{"len":56,"line_nr":279,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) neg() Integer","name":"neg","parent_name":"Integer","return_type":"Integer","pos":{"len":32,"line_nr":280,"pos":6591,"col":0,"last_line":289},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 + returns the sum of the integers `augend` and `addend`.","is_multi":false,"pos":{"len":58,"line_nr":291,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (augend Integer) + (addend Integer) Integer","name":"+","parent_name":"Integer","return_type":"Integer","pos":{"len":50,"line_nr":292,"pos":6804,"col":0,"last_line":306},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 - returns the difference of the integers `minuend` and `subtrahend`","is_multi":false,"pos":{"len":69,"line_nr":308,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (minuend Integer) - (subtrahend Integer) Integer","name":"-","parent_name":"Integer","return_type":"Integer","pos":{"len":55,"line_nr":309,"pos":7191,"col":0,"last_line":323},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 * returns the product of the integers `multiplicand` and `multiplier`.","is_multi":false,"pos":{"len":72,"line_nr":350,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (multiplicand Integer) * (multiplier Integer) Integer","name":"*","parent_name":"Integer","return_type":"Integer","pos":{"len":60,"line_nr":351,"pos":8204,"col":0,"last_line":369},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 div_mod returns the quotient and remainder from the division of the integers `dividend`","is_multi":false,"pos":{"len":89,"line_nr":414,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 divided by `divisor`.","is_multi":false,"pos":{"len":23,"line_nr":415,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":416,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 WARNING: this method will panic if `divisor == 0`. Refer to div_mod_checked for a safer version.","is_multi":false,"pos":{"len":98,"line_nr":417,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (dividend Integer) div_mod(divisor Integer) (Integer, Integer)","name":"div_mod","parent_name":"Integer","return_type":"(Integer, Integer)","pos":{"len":69,"line_nr":419,"pos":10199,"col":0,"last_line":424},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 div_mod_checked returns the quotient and remainder from the division of the integers `dividend`","is_multi":false,"pos":{"len":97,"line_nr":426,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 divided by `divisor`. An error is returned if `divisor == 0`.","is_multi":false,"pos":{"len":63,"line_nr":427,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (dividend Integer) div_mod_checked(divisor Integer) !(Integer, Integer)","name":"div_mod_checked","parent_name":"Integer","return_type":"!(Integer, Integer)","pos":{"len":78,"line_nr":429,"pos":10575,"col":0,"last_line":434},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 / returns the quotient of `dividend` divided by `divisor`.","is_multi":false,"pos":{"len":60,"line_nr":436,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":437,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 WARNING: this method will panic if `divisor == 0`. For a division method that returns a Result","is_multi":false,"pos":{"len":96,"line_nr":438,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 refer to `div_checked`.","is_multi":false,"pos":{"len":25,"line_nr":439,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (dividend Integer) / (divisor Integer) Integer","name":"/","parent_name":"Integer","return_type":"Integer","pos":{"len":53,"line_nr":441,"pos":10993,"col":0,"last_line":448},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 % returns the remainder of `dividend` divided by `divisor`.","is_multi":false,"pos":{"len":61,"line_nr":450,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":451,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 WARNING: this method will panic if `divisor == 0`. For a modular division method that","is_multi":false,"pos":{"len":87,"line_nr":452,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 returns a Result refer to `mod_checked`.","is_multi":false,"pos":{"len":42,"line_nr":453,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (dividend Integer) % (divisor Integer) Integer","name":"%","parent_name":"Integer","return_type":"Integer","pos":{"len":53,"line_nr":455,"pos":11396,"col":0,"last_line":458},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 div_checked returns the quotient of `dividend` divided by `divisor`","is_multi":false,"pos":{"len":69,"line_nr":460,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 or an error if `divisor == 0`.","is_multi":false,"pos":{"len":32,"line_nr":461,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (dividend Integer) div_checked(divisor Integer) !Integer","name":"div_checked","parent_name":"Integer","return_type":"!Integer","pos":{"len":63,"line_nr":463,"pos":11615,"col":0,"last_line":466},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 mod_checked returns the remainder of `dividend` divided by `divisor`","is_multi":false,"pos":{"len":70,"line_nr":468,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 or an error if `divisor == 0`.","is_multi":false,"pos":{"len":32,"line_nr":469,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (dividend Integer) mod_checked(divisor Integer) !Integer","name":"mod_checked","parent_name":"Integer","return_type":"!Integer","pos":{"len":63,"line_nr":471,"pos":11854,"col":0,"last_line":474},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 pow returns the integer `base` raised to the power of the u32 `exponent`.","is_multi":false,"pos":{"len":75,"line_nr":515,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (base Integer) pow(exponent u32) Integer","name":"pow","parent_name":"Integer","return_type":"Integer","pos":{"len":47,"line_nr":516,"pos":12836,"col":0,"last_line":534},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 mod_pow returns the integer `base` raised to the power of the u32 `exponent` modulo the integer `modulus`.","is_multi":false,"pos":{"len":108,"line_nr":536,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (base Integer) mod_pow(exponent u32, modulus Integer) Integer","name":"mod_pow","parent_name":"Integer","return_type":"Integer","pos":{"len":68,"line_nr":537,"pos":13217,"col":0,"last_line":555},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 big_mod_pow returns the integer `base` raised to the power of the integer `exponent` modulo the integer `modulus`.","is_multi":false,"pos":{"len":116,"line_nr":557,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (base Integer) big_mod_pow(exponent Integer, modulus Integer) !Integer","name":"big_mod_pow","parent_name":"Integer","return_type":"!Integer","pos":{"len":77,"line_nr":559,"pos":13692,"col":0,"last_line":604},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 inc increments `a` by 1 in place.","is_multi":false,"pos":{"len":35,"line_nr":606,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (mut a Integer) inc()","name":"inc","parent_name":"Integer","return_type":"void","pos":{"len":28,"line_nr":607,"pos":14977,"col":0,"last_line":609},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 dec decrements `a` by 1 in place.","is_multi":false,"pos":{"len":35,"line_nr":611,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (mut a Integer) dec()","name":"dec","parent_name":"Integer","return_type":"void","pos":{"len":28,"line_nr":612,"pos":15065,"col":0,"last_line":614},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 == returns `true` if the integers `a` and `b` are equal in value and sign.","is_multi":false,"pos":{"len":76,"line_nr":616,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) == (b Integer) bool","name":"==","parent_name":"Integer","return_type":"bool","pos":{"len":38,"line_nr":617,"pos":15194,"col":0,"last_line":619},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 abs_cmp returns the result of comparing the magnitudes of the integers `a` and `b`.","is_multi":false,"pos":{"len":85,"line_nr":621,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 It returns a negative int if `|a| < |b|`, 0 if `|a| == |b|`, and a positive int if `|a| > |b|`.","is_multi":false,"pos":{"len":97,"line_nr":622,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) abs_cmp(b Integer) int","name":"abs_cmp","parent_name":"Integer","return_type":"int","pos":{"len":41,"line_nr":623,"pos":15509,"col":0,"last_line":625},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 < returns `true` if the integer `a` is less than `b`.","is_multi":false,"pos":{"len":55,"line_nr":627,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) < (b Integer) bool","name":"<","parent_name":"Integer","return_type":"bool","pos":{"len":37,"line_nr":628,"pos":15661,"col":0,"last_line":644},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 get_bit checks whether the bit at the given index is set.","is_multi":false,"pos":{"len":59,"line_nr":646,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) get_bit(i u32) bool","name":"get_bit","parent_name":"Integer","return_type":"bool","pos":{"len":38,"line_nr":648,"pos":16166,"col":0,"last_line":655},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set_bit sets the bit at the given index to the given value.","is_multi":false,"pos":{"len":61,"line_nr":657,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (mut a Integer) set_bit(i u32, value bool)","name":"set_bit","parent_name":"Integer","return_type":"void","pos":{"len":49,"line_nr":658,"pos":16420,"col":0,"last_line":681},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 bitwise_or returns the \"bitwise or\" of the integers `|a|` and `|b|`.","is_multi":false,"pos":{"len":70,"line_nr":683,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":684,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Note: both operands are treated as absolute values.","is_multi":false,"pos":{"len":53,"line_nr":685,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) bitwise_or(b Integer) Integer","name":"bitwise_or","parent_name":"Integer","return_type":"Integer","pos":{"len":48,"line_nr":686,"pos":16939,"col":0,"last_line":693},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 bitwise_and returns the \"bitwise and\" of the integers `|a|` and `|b|`.","is_multi":false,"pos":{"len":72,"line_nr":695,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":696,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Note: both operands are treated as absolute values.","is_multi":false,"pos":{"len":53,"line_nr":697,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) bitwise_and(b Integer) Integer","name":"bitwise_and","parent_name":"Integer","return_type":"Integer","pos":{"len":49,"line_nr":698,"pos":17324,"col":0,"last_line":705},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 bitwise_not returns the \"bitwise not\" of the integer `|a|`.","is_multi":false,"pos":{"len":61,"line_nr":707,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":708,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Note: the integer is treated as an absolute value.","is_multi":false,"pos":{"len":52,"line_nr":709,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) bitwise_not() Integer","name":"bitwise_not","parent_name":"Integer","return_type":"Integer","pos":{"len":40,"line_nr":710,"pos":17699,"col":0,"last_line":717},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 bitwise_xor returns the \"bitwise exclusive or\" of the integers `|a|` and `|b|`.","is_multi":false,"pos":{"len":81,"line_nr":719,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":720,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Note: both operands are treated as absolute values.","is_multi":false,"pos":{"len":53,"line_nr":721,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) bitwise_xor(b Integer) Integer","name":"bitwise_xor","parent_name":"Integer","return_type":"Integer","pos":{"len":49,"line_nr":722,"pos":18056,"col":0,"last_line":729},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 lshift returns the integer `a` shifted left by `amount` bits.","is_multi":false,"pos":{"len":63,"line_nr":731,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["deprecated: 'use a.Integer.left_shift(amount) instead'"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) lshift(amount u32) Integer","name":"lshift","parent_name":"Integer","return_type":"Integer","pos":{"len":45,"line_nr":733,"pos":18434,"col":0,"last_line":735},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 left_shift returns the integer `a` shifted left by `amount` bits.","is_multi":false,"pos":{"len":67,"line_nr":737,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) left_shift(amount u32) Integer","name":"left_shift","parent_name":"Integer","return_type":"Integer","pos":{"len":49,"line_nr":739,"pos":18606,"col":0,"last_line":759},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 rshift returns the integer `a` shifted right by `amount` bits.","is_multi":false,"pos":{"len":64,"line_nr":761,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["deprecated: 'use a.Integer.right_shift(amount) instead'"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) rshift(amount u32) Integer","name":"rshift","parent_name":"Integer","return_type":"Integer","pos":{"len":45,"line_nr":763,"pos":19222,"col":0,"last_line":765},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 right_shift returns the integer `a` shifted right by `amount` bits.","is_multi":false,"pos":{"len":69,"line_nr":767,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) right_shift(amount u32) Integer","name":"right_shift","parent_name":"Integer","return_type":"Integer","pos":{"len":50,"line_nr":769,"pos":19397,"col":0,"last_line":792},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 binary_str returns the binary string representation of the integer `a`.","is_multi":false,"pos":{"len":73,"line_nr":794,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["deprecated: 'use integer.bin_str() instead'"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (integer Integer) binary_str() string","name":"binary_str","parent_name":"Integer","return_type":"string","pos":{"len":44,"line_nr":796,"pos":20069,"col":0,"last_line":798},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 bin_str returns the binary string representation of the integer `a`.","is_multi":false,"pos":{"len":70,"line_nr":800,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (integer Integer) bin_str() string","name":"bin_str","parent_name":"Integer","return_type":"string","pos":{"len":41,"line_nr":802,"pos":20240,"col":0,"last_line":820},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 hex returns the hexadecimal string representation of the integer `a`.","is_multi":false,"pos":{"len":71,"line_nr":822,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (integer Integer) hex() string","name":"hex","parent_name":"Integer","return_type":"string","pos":{"len":37,"line_nr":824,"pos":20936,"col":0,"last_line":843},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 radix_str returns the string representation of the integer `a` in the specified radix.","is_multi":false,"pos":{"len":88,"line_nr":845,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (integer Integer) radix_str(radix u32) string","name":"radix_str","parent_name":"Integer","return_type":"string","pos":{"len":52,"line_nr":846,"pos":21623,"col":0,"last_line":861},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 str returns the decimal string representation of the integer `a`.","is_multi":false,"pos":{"len":67,"line_nr":888,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (integer Integer) str() string","name":"str","parent_name":"Integer","return_type":"string","pos":{"len":37,"line_nr":889,"pos":22530,"col":0,"last_line":891},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 int returns the integer value of the integer `a`.","is_multi":false,"pos":{"len":51,"line_nr":921,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 NOTE: This may cause loss of precision.","is_multi":false,"pos":{"len":41,"line_nr":922,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) int() int","name":"int","parent_name":"Integer","return_type":"int","pos":{"len":28,"line_nr":923,"pos":23446,"col":0,"last_line":934},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 bytes returns the a byte representation of the integer a, along with the signum int.","is_multi":false,"pos":{"len":86,"line_nr":936,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 NOTE: The byte array returned is in big endian order.","is_multi":false,"pos":{"len":55,"line_nr":937,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) bytes() ([]u8, int)","name":"bytes","parent_name":"Integer","return_type":"([]u8, int)","pos":{"len":38,"line_nr":939,"pos":23891,"col":0,"last_line":962},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 factorial returns the factorial of the integer `a`.","is_multi":false,"pos":{"len":53,"line_nr":964,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) factorial() Integer","name":"factorial","parent_name":"Integer","return_type":"Integer","pos":{"len":38,"line_nr":965,"pos":24475,"col":0,"last_line":976},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 isqrt returns the closest integer square root of the integer `a`.","is_multi":false,"pos":{"len":67,"line_nr":978,"pos":0,"col":0,"last_line":0}},{"text":"\u0001","is_multi":false,"pos":{"len":1,"line_nr":979,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 WARNING: this method will panic if `a < 0`. Refer to isqrt_checked for a safer version.","is_multi":false,"pos":{"len":89,"line_nr":980,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) isqrt() Integer","name":"isqrt","parent_name":"Integer","return_type":"Integer","pos":{"len":34,"line_nr":982,"pos":24857,"col":0,"last_line":984},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 isqrt returns the closest integer square root of the integer `a`.","is_multi":false,"pos":{"len":67,"line_nr":986,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 An error is returned if `a < 0`.","is_multi":false,"pos":{"len":34,"line_nr":987,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) isqrt_checked() !Integer","name":"isqrt_checked","parent_name":"Integer","return_type":"!Integer","pos":{"len":43,"line_nr":988,"pos":25046,"col":0,"last_line":1013},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 gcd returns the greatest common divisor of the two integers `a` and `b`.","is_multi":false,"pos":{"len":74,"line_nr":1025,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) gcd(b Integer) Integer","name":"gcd","parent_name":"Integer","return_type":"Integer","pos":{"len":41,"line_nr":1026,"pos":25830,"col":0,"last_line":1032},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 gcd_binary returns the greatest common divisor of the two integers `a` and `b`.","is_multi":false,"pos":{"len":81,"line_nr":1034,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Note that gcd_binary is faster than gcd_euclid, for large integers (over 8 bytes long).","is_multi":false,"pos":{"len":89,"line_nr":1035,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Inspired by the 2013-christmas-special by D. Lemire & R. Corderoy https://en.algorithmica.org/hpc/analyzing-performance/gcd/","is_multi":false,"pos":{"len":126,"line_nr":1036,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 For more information, refer to the Wikipedia article: https://en.wikipedia.org/wiki/Binary_GCD_algorithm","is_multi":false,"pos":{"len":106,"line_nr":1037,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Discussion and further information: https://lemire.me/blog/2013/12/26/fastest-way-to-compute-the-greatest-common-divisor/","is_multi":false,"pos":{"len":123,"line_nr":1038,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) gcd_binary(b Integer) Integer","name":"gcd_binary","parent_name":"Integer","return_type":"Integer","pos":{"len":48,"line_nr":1039,"pos":26584,"col":0,"last_line":1060},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 gcd_euclid returns the greatest common divisor of the two integers `a` and `b`.","is_multi":false,"pos":{"len":81,"line_nr":1062,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Note that gcd_euclid is faster than gcd_binary, for very-small-integers up to 8-byte/u64.","is_multi":false,"pos":{"len":91,"line_nr":1063,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) gcd_euclid(b Integer) Integer","name":"gcd_euclid","parent_name":"Integer","return_type":"Integer","pos":{"len":48,"line_nr":1064,"pos":27208,"col":0,"last_line":1086},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 mod_inverse calculates the multiplicative inverse of the integer `a` in the ring `ℤ/nℤ`.","is_multi":false,"pos":{"len":94,"line_nr":1088,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Therefore, the return value `x` satisfies `a * x == 1 (mod m)`.","is_multi":false,"pos":{"len":65,"line_nr":1089,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 An error is returned if `a` and `n` are not relatively prime, i.e. `gcd(a, n) != 1` or","is_multi":false,"pos":{"len":88,"line_nr":1090,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 if n <= 1","is_multi":false,"pos":{"len":11,"line_nr":1091,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (a Integer) mod_inverse(n Integer) !Integer","name":"mod_inverse","parent_name":"Integer","return_type":"!Integer","pos":{"len":50,"line_nr":1093,"pos":27826,"col":0,"last_line":1101},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 is_odd returns true if the integer `x` is odd, therefore an integer of the form `2k + 1`.","is_multi":false,"pos":{"len":91,"line_nr":1186,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 An input of 0 returns false.","is_multi":false,"pos":{"len":30,"line_nr":1187,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (x Integer) is_odd() bool","name":"is_odd","parent_name":"Integer","return_type":"bool","pos":{"len":32,"line_nr":1189,"pos":30302,"col":0,"last_line":1191},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 is_power_of_2 returns true when the integer `x` satisfies `2^n`, where `n >= 0`","is_multi":false,"pos":{"len":81,"line_nr":1193,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (x Integer) is_power_of_2() bool","name":"is_power_of_2","parent_name":"Integer","return_type":"bool","pos":{"len":39,"line_nr":1195,"pos":30504,"col":0,"last_line":1208},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 bit_len returns the number of bits required to represent the integer `a`.","is_multi":false,"pos":{"len":75,"line_nr":1210,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn (x Integer) bit_len() int","name":"bit_len","parent_name":"Integer","return_type":"int","pos":{"len":32,"line_nr":1212,"pos":30874,"col":0,"last_line":1220},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"struct Integer {\n\tdigits []u32\npub:\n\tsignum   int\n\tis_const bool\n}","name":"Integer","parent_name":"","return_type":"","pos":{"len":18,"line_nr":18,"pos":622,"col":0,"last_line":23},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 integer_from_int creates a new `big.Integer` from the given int value.","is_multi":false,"pos":{"len":72,"line_nr":48,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn integer_from_int(value int) Integer","name":"integer_from_int","parent_name":"","return_type":"Integer","pos":{"len":42,"line_nr":49,"pos":1090,"col":0,"last_line":57},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 integer_from_u32 creates a new `big.Integer` from the given u32 value.","is_multi":false,"pos":{"len":72,"line_nr":59,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn integer_from_u32(value u32) Integer","name":"integer_from_u32","parent_name":"","return_type":"Integer","pos":{"len":42,"line_nr":60,"pos":1327,"col":0,"last_line":68},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 integer_from_i64 creates a new `big.Integer` from the given i64 value.","is_multi":false,"pos":{"len":72,"line_nr":70,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn integer_from_i64(value i64) Integer","name":"integer_from_i64","parent_name":"","return_type":"Integer","pos":{"len":42,"line_nr":71,"pos":1537,"col":0,"last_line":93},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 integer_from_u64 creates a new `big.Integer` from the given u64 value.","is_multi":false,"pos":{"len":72,"line_nr":95,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn integer_from_u64(value u64) Integer","name":"integer_from_u64","parent_name":"","return_type":"Integer","pos":{"len":42,"line_nr":96,"pos":2011,"col":0,"last_line":115},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"struct IntegerConfig {\n\tsignum int = 1\n}","name":"IntegerConfig","parent_name":"","return_type":"","pos":{"len":24,"line_nr":118,"pos":2346,"col":0,"last_line":120},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 integer_from_bytes creates a new `big.Integer` from the given byte array.","is_multi":false,"pos":{"len":75,"line_nr":122,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 By default, positive integers are assumed.","is_multi":false,"pos":{"len":44,"line_nr":123,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If you want a negative integer, use in the following manner:","is_multi":false,"pos":{"len":62,"line_nr":124,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 `value := big.integer_from_bytes(bytes, signum: -1)`","is_multi":false,"pos":{"len":54,"line_nr":125,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn integer_from_bytes(input []u8, config IntegerConfig) Integer","name":"integer_from_bytes","parent_name":"","return_type":"Integer","pos":{"len":67,"line_nr":127,"pos":2658,"col":0,"last_line":149},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 integer_from_string creates a new `big.Integer` from the decimal digits specified in the given string.","is_multi":false,"pos":{"len":104,"line_nr":151,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 For other bases, use `big.integer_from_radix` instead.","is_multi":false,"pos":{"len":56,"line_nr":152,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn integer_from_string(characters string) !Integer","name":"integer_from_string","parent_name":"","return_type":"!Integer","pos":{"len":54,"line_nr":153,"pos":3613,"col":0,"last_line":155},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 integer_from_radix creates a new `big.Integer` from the given string and radix.","is_multi":false,"pos":{"len":81,"line_nr":157,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\integer.v","content":"fn integer_from_radix(all_characters string, radix u32) !Integer","name":"integer_from_radix","parent_name":"","return_type":"!Integer","pos":{"len":68,"line_nr":158,"pos":3799,"col":0,"last_line":175},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 bit_length returns the number of bits needed to represent the absolute value of the integer a.","is_multi":false,"pos":{"len":96,"line_nr":62,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["deprecated: 'use a.bit_len() instead'"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\math\\big\\special_array_ops.v","content":"fn bit_length(a Integer) int","name":"bit_length","parent_name":"","return_type":"int","pos":{"len":32,"line_nr":65,"pos":1730,"col":0,"last_line":67},"platform":"cross","kind":"function","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-02-05 19:45:33"}