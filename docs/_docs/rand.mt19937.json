{"module_name":"rand.mt19937","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\nC++ functions for MT19937, with initialization improved 2002/2/10.\n   Coded by Takuji Nishimura and Makoto Matsumoto.\n   This is a faster version by taking Shawn Cokus's optimization,\n   Matthe Bellew's simplification, Isaku Wada's real version.\n\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n\n     1. Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n\n     2. Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n\n     3. The names of its contributors may not be used to endorse or promote\n        products derived from this software without specific prior written\n        permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n   Any feedback is very welcome.\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n","is_multi":true,"pos":{"len":1981,"line_nr":8,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\mt19937\\mt19937.v","content":"const seed_len = 2","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":49,"pos":2209,"col":0,"last_line":49},"platform":"cross","kind":"const_group","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Constants","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"const_group","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 MT19937RNG is generator that uses the Mersenne Twister algorithm with period 2^19937.","is_multi":false,"pos":{"len":87,"line_nr":58,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 **NOTE**: The RNG is not seeded when instantiated so remember to seed it before use.","is_multi":false,"pos":{"len":86,"line_nr":59,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 seed sets the current random state based on `seed_data`.","is_multi":false,"pos":{"len":58,"line_nr":84,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 seed expects `seed_data` to be only two `u32`s in little-endian format as [lower, higher].","is_multi":false,"pos":{"len":92,"line_nr":85,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\mt19937\\mt19937.v","content":"fn (mut rng MT19937RNG) seed(seed_data []u32)","name":"seed","parent_name":"MT19937RNG","return_type":"void","pos":{"len":49,"line_nr":86,"pos":3368,"col":0,"last_line":95},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 byte returns a uniformly distributed pseudorandom 8-bit unsigned positive `byte`.","is_multi":false,"pos":{"len":83,"line_nr":97,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\mt19937\\mt19937.v","content":"fn (mut rng MT19937RNG) u8() u8","name":"u8","parent_name":"MT19937RNG","return_type":"u8","pos":{"len":35,"line_nr":99,"pos":3746,"col":0,"last_line":111},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 u16 returns a pseudorandom 16bit int in range `[0, 2¹⁶)`.","is_multi":false,"pos":{"len":62,"line_nr":113,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\mt19937\\mt19937.v","content":"fn (mut rng MT19937RNG) u16() u16","name":"u16","parent_name":"MT19937RNG","return_type":"u16","pos":{"len":37,"line_nr":115,"pos":4073,"col":0,"last_line":126},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 u32 returns a pseudorandom 32bit int in range `[0, 2³²)`.","is_multi":false,"pos":{"len":61,"line_nr":128,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\mt19937\\mt19937.v","content":"fn (mut rng MT19937RNG) u32() u32","name":"u32","parent_name":"MT19937RNG","return_type":"u32","pos":{"len":37,"line_nr":130,"pos":4381,"col":0,"last_line":142},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 u64 returns a pseudorandom 64bit int in range `[0, 2⁶⁴)`.","is_multi":false,"pos":{"len":63,"line_nr":146,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\mt19937\\mt19937.v","content":"fn (mut rng MT19937RNG) u64() u64","name":"u64","parent_name":"MT19937RNG","return_type":"u64","pos":{"len":37,"line_nr":148,"pos":4798,"col":0,"last_line":172},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 block_size returns the number of bits that the RNG can produce in a single iteration.","is_multi":false,"pos":{"len":87,"line_nr":174,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\mt19937\\mt19937.v","content":"fn (mut rng MT19937RNG) block_size() int","name":"block_size","parent_name":"MT19937RNG","return_type":"int","pos":{"len":44,"line_nr":176,"pos":5772,"col":0,"last_line":178},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 free should be called when the generator is no longer needed","is_multi":false,"pos":{"len":62,"line_nr":180,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["unsafe"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\mt19937\\mt19937.v","content":"fn (mut rng MT19937RNG) free()","name":"free","parent_name":"MT19937RNG","return_type":"void","pos":{"len":34,"line_nr":182,"pos":5907,"col":0,"last_line":184},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\mt19937\\mt19937.v","content":"struct MT19937RNG {\n\tbuffer.PRNGBuffer\nmut:\n\tstate []u64 = get_first_state(seed.time_seed_array(2))\n\tmti   int   = mt19937.nn\n}","name":"MT19937RNG","parent_name":"","return_type":"","pos":{"len":21,"line_nr":60,"pos":2576,"col":0,"last_line":65},"platform":"cross","kind":"struct_","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-02-05 19:45:35"}