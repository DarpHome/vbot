{"module_name":"toml.scanner","description":"","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"const digit_extras = [`_`, `.`, `x`, `o`, `b`, `e`, `E`]","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":9,"pos":230,"col":0,"last_line":9},"platform":"cross","kind":"const_group","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"const end_of_text = u32(~0)","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":10,"pos":291,"col":0,"last_line":10},"platform":"cross","kind":"const_group","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Constants","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"const_group","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Scanner contains the necessary fields for the state of the scan process.","is_multi":false,"pos":{"len":74,"line_nr":12,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 the task the scanner does is also referred to as \"lexing\" or \"tokenizing\".","is_multi":false,"pos":{"len":76,"line_nr":13,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 The Scanner methods are based on much of the work in `vlib/strings/textscanner`.","is_multi":false,"pos":{"len":82,"line_nr":14,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 scan returns the next token from the input.","is_multi":false,"pos":{"len":45,"line_nr":93,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (mut s Scanner) scan() !token.Token","name":"scan","parent_name":"Scanner","return_type":"!toml.token.Token","pos":{"len":42,"line_nr":95,"pos":2789,"col":0,"last_line":243},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 free frees all allocated resources.","is_multi":false,"pos":{"len":37,"line_nr":245,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["unsafe"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (mut s Scanner) free()","name":"free","parent_name":"Scanner","return_type":"void","pos":{"len":29,"line_nr":247,"pos":8955,"col":0,"last_line":251},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 remaining returns how many characters remain in the text input.","is_multi":false,"pos":{"len":65,"line_nr":253,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (s &Scanner) remaining() int","name":"remaining","parent_name":"Scanner","return_type":"int","pos":{"len":35,"line_nr":255,"pos":9096,"col":0,"last_line":257},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 next returns the next character code from the input text.","is_multi":false,"pos":{"len":59,"line_nr":259,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 next returns `end_of_text` if it can't reach the next character.","is_multi":false,"pos":{"len":66,"line_nr":260,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (mut s Scanner) next() u32","name":"next","parent_name":"Scanner","return_type":"u32","pos":{"len":33,"line_nr":262,"pos":9324,"col":0,"last_line":271},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 skip skips one character ahead.","is_multi":false,"pos":{"len":33,"line_nr":273,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (mut s Scanner) skip()","name":"skip","parent_name":"Scanner","return_type":"void","pos":{"len":29,"line_nr":275,"pos":9531,"col":0,"last_line":280},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 skip_n skips ahead `n` characters.","is_multi":false,"pos":{"len":36,"line_nr":282,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 If the skip goes out of bounds from the length of `Scanner.text`,","is_multi":false,"pos":{"len":67,"line_nr":283,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 the scanner position will be sat to the last character possible.","is_multi":false,"pos":{"len":66,"line_nr":284,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (mut s Scanner) skip_n(n int)","name":"skip_n","parent_name":"Scanner","return_type":"void","pos":{"len":36,"line_nr":286,"pos":9803,"col":0,"last_line":292},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 at returns the *current* character code from the input text.","is_multi":false,"pos":{"len":62,"line_nr":294,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 at returns `end_of_text` if it can't get the current character.","is_multi":false,"pos":{"len":65,"line_nr":295,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 unlike `next()`, `at()` does not change the state of the scanner.","is_multi":false,"pos":{"len":67,"line_nr":296,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (s &Scanner) at() u32","name":"at","parent_name":"Scanner","return_type":"u32","pos":{"len":28,"line_nr":298,"pos":10152,"col":0,"last_line":303},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 peek returns the character code from the input text at position + `n`.","is_multi":false,"pos":{"len":72,"line_nr":311,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 peek returns `end_of_text` if it can't peek `n` characters ahead.","is_multi":false,"pos":{"len":67,"line_nr":312,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (s &Scanner) peek(n int) u32","name":"peek","parent_name":"Scanner","return_type":"u32","pos":{"len":35,"line_nr":314,"pos":10619,"col":0,"last_line":324},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 reset resets the internal state of the scanner.","is_multi":false,"pos":{"len":49,"line_nr":326,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (mut s Scanner) reset()","name":"reset","parent_name":"Scanner","return_type":"void","pos":{"len":30,"line_nr":327,"pos":11089,"col":0,"last_line":332},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 excerpt returns a string excerpt of the input text centered","is_multi":false,"pos":{"len":61,"line_nr":653,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 at `pos`. The `margin` argument defines how many chacters","is_multi":false,"pos":{"len":59,"line_nr":654,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 on each side of `pos` is returned","is_multi":false,"pos":{"len":35,"line_nr":655,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (s Scanner) excerpt(pos int, margin int) string","name":"excerpt","parent_name":"Scanner","return_type":"string","pos":{"len":54,"line_nr":656,"pos":21350,"col":0,"last_line":660},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 state returns a read-only view of the scanner's internal state.","is_multi":false,"pos":{"len":65,"line_nr":662,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn (s Scanner) state() State","name":"state","parent_name":"Scanner","return_type":"State","pos":{"len":32,"line_nr":663,"pos":21665,"col":0,"last_line":669},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"struct Scanner {\npub:\n\tconfig Config\n\ttext   string // the input TOML text\nmut:\n\tcol        int // current column number (x coordinate)\n\tline_nr    int = 1 // current line number (y coordinate)\n\tpos        int // current flat/index position in the `text` field\n\theader_len int // Length, how many bytes of header was found\n\t// Quirks\n\tis_left_of_assign bool = true // indicates if the scanner is on the *left* side of an assignment\n}","name":"Scanner","parent_name":"","return_type":"","pos":{"len":18,"line_nr":15,"pos":562,"col":0,"last_line":26},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 State is a read-only copy of the scanner's internal state.","is_multi":false,"pos":{"len":60,"line_nr":28,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 See also `Scanner.state()`.","is_multi":false,"pos":{"len":29,"line_nr":29,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"struct State {\npub:\n\tcol     int // current column number (x coordinate)\n\tline_nr int = 1 // current line number (y coordinate)\n\tpos     int // current flat/index position in the `text` field\n}","name":"State","parent_name":"","return_type":"","pos":{"len":16,"line_nr":30,"pos":1094,"col":0,"last_line":35},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 Config is used to configure a Scanner instance.","is_multi":false,"pos":{"len":49,"line_nr":37,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 Only one of the fields `text` and `file_path` is allowed to be set at time of configuration.","is_multi":false,"pos":{"len":94,"line_nr":38,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"struct Config {\npub:\n\tinput               input.Config\n\ttokenize_formatting bool = true // if true, generate tokens for `\\n`, ` `, `\\t`, `\\r` etc.\n}","name":"Config","parent_name":"","return_type":"","pos":{"len":17,"line_nr":39,"pos":1440,"col":0,"last_line":43},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_scanner returns a new *heap* allocated `Scanner` instance, based on the file in config.input.file_path,","is_multi":false,"pos":{"len":109,"line_nr":45,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 or based on the text in config.input.text .","is_multi":false,"pos":{"len":45,"line_nr":46,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn new_scanner(config Config) !&Scanner","name":"new_scanner","parent_name":"","return_type":"Scanner","pos":{"len":43,"line_nr":47,"pos":1752,"col":0,"last_line":53},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_simple returns a new *stack* allocated `Scanner` instance.","is_multi":false,"pos":{"len":64,"line_nr":55,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn new_simple(config Config) !Scanner","name":"new_simple","parent_name":"","return_type":"!Scanner","pos":{"len":41,"line_nr":56,"pos":1952,"col":0,"last_line":61},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_simple_text returns a new *stack* allocated `Scanner` instance","is_multi":false,"pos":{"len":68,"line_nr":63,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 ready for parsing TOML in `text`.","is_multi":false,"pos":{"len":35,"line_nr":64,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn new_simple_text(text string) !Scanner","name":"new_simple_text","parent_name":"","return_type":"!Scanner","pos":{"len":44,"line_nr":65,"pos":2178,"col":0,"last_line":76},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 new_simple_file returns a new *stack* allocated `Scanner` instance","is_multi":false,"pos":{"len":68,"line_nr":78,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 ready for parsing TOML in file read from `path`.","is_multi":false,"pos":{"len":50,"line_nr":79,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\toml\\scanner\\scanner.v","content":"fn new_simple_file(path string) !Scanner","name":"new_simple_file","parent_name":"","return_type":"!Scanner","pos":{"len":44,"line_nr":80,"pos":2507,"col":0,"last_line":91},"platform":"cross","kind":"function","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:38"}