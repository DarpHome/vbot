{"module_name":"term.ui","description":"## `term.ui`\n\nA V module for designing terminal UI apps\n\n#### Quickstart\n\n\n```v\nimport term.ui as tui\n\nstruct App {\nmut:\ntui &tui.Context = unsafe { nil }\n}\n\nfn event(e &tui.Event, x voidptr) {\nif e.typ == .key_down && e.code == .escape {\nexit(0)\n}\n}\n\nfn frame(x voidptr) {\nmut app := unsafe { &App(x) }\n\napp.tui.clear()\napp.tui.set_bg_color(r: 63, g: 81, b: 181)\napp.tui.draw_rect(20, 6, 41, 10)\napp.tui.draw_text(24, 8, 'Hello from V!')\napp.tui.set_cursor_position(0, 0)\n\napp.tui.reset()\napp.tui.flush()\n}\n\nfn main() {\nmut app := &App{}\napp.tui = tui.init(\nuser_data: app\nevent_fn: event\nframe_fn: frame\nhide_cursor: true\n)\napp.tui.run()!\n}\n```\n\nSee the `/examples/term.ui/` folder for more usage examples.\n\n#### Configuration\n\n- `user_data voidptr` - a pointer to any `user_data`, it will be passed as the last argument to\neach callback. Used for accessing your app context from the different callbacks.\n- `init_fn fn(voidptr)` - a callback that will be called after initialization\nand before the first event / frame. Useful for initializing any user data.\n- `frame_fn fn(voidptr)` - a callback that will be fired on each frame,\nat a rate of `frame_rate` frames per second.\n`event_fn fn(&Event, voidptr)` - a callback that will be fired for every event received.\n- `cleanup_fn fn(voidptr)` - a callback that will be fired once, before the application exits.\n- `fail_fn  fn(string)` - a callback that will be fired\nif a fatal error occurs during app initialization.\n- `buffer_size int = 256` - the internal size of the read buffer.\nIncreasing it may help in case you're missing events, but you probably shouldn't lower\nthis value unless you make sure you're still receiving all events. In general,\nhigher frame rates work better with lower buffer sizes, and vice versa.\n- `frame_rate int = 30` - the number of times per second that the `frame` callback will be fired.\n30fps is a nice balance between smoothness and performance,\nbut you can increase or lower it as you wish.\n- `hide_cursor bool` - whether to hide the mouse cursor. Useful if you want to use your own.\n- `capture_events bool` - sets the terminal into raw mode, which makes it intercept some\nescape codes such as `ctrl + c` and `ctrl + z`.\nUseful if you want to use those key combinations in your app.\n- `window_title string` - sets the title of the terminal window.\nThis may be changed later, by calling the `set_window_title()` method.\n- `reset []int = [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 19]` - a list of reset signals,\nto setup handlers to cleanup the terminal state when they're received.\nYou should not need to change this, unless you know what you're doing.\n\nAll of these fields may be omitted, in which case, the default value will be used.\nIn the case of the various callbacks, they will not be fired if a handler has not been specified.\n\n\n#### FAQ\n\nQ: My terminal (doesn't receive events / doesn't print anything / prints gibberish characters),\nwhat's up with that?\nA: Please check if your terminal. The module has been tested with `xterm`-based terminals on Linux\n(like `gnome-terminal` and `konsole`), and `Terminal.app` and `iterm2` on macOS.\nIf your terminal does not work, open an issue with the output of `echo $TERM`.\n\nQ: There are screen tearing issues when doing large prints\nA: This is an issue with how terminals render frames,\nas they may decide to do so in the middle of receiving a frame,\nand cannot be fully fixed unless your console implements the [synchronized updates spec](https://gitlab.com/gnachman/iterm2/-/wikis/synchronized-updates-spec).\nIt can be reduced *drastically*, though, by using the rendering methods built in to the module,\nand by only painting frames when your app's content has actually changed.\n\nQ: Why does the module only emit `keydown` events, and not `keyup` like `sokol`/`gg`?\nA: It's because of the way terminals emit events. Every key event is received as a keypress,\nand there isn't a way of telling terminals to send keyboard events differently,\nnor a reliable way of converting these into `keydown` / `keyup` events.\n","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\color.v","content":"const color_table = init_color_table()","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":8,"pos":211,"col":0,"last_line":8},"platform":"cross","kind":"const_group","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Constants","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"const_group","public":false,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"union C.Event {\n\tKeyEvent              C.KEY_EVENT_RECORD\n\tMouseEvent            C.MOUSE_EVENT_RECORD\n\tWindowBufferSizeEvent C.WINDOW_BUFFER_SIZE_RECORD\n\tMenuEvent             C.MENU_EVENT_RECORD\n\tFocusEvent            C.FOCUS_EVENT_RECORD\n}","name":"C.Event","parent_name":"","return_type":"","pos":{"len":17,"line_nr":2,"pos":11,"col":0,"last_line":8},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"struct C.INPUT_RECORD {\n\tEventType u16\n\tEvent     C.Event\n}","name":"C.INPUT_RECORD","parent_name":"","return_type":"","pos":{"len":25,"line_nr":11,"pos":269,"col":0,"last_line":14},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"union C.uChar {\nmut:\n\tUnicodeChar rune\n\tAsciiChar   u8\n}","name":"C.uChar","parent_name":"","return_type":"","pos":{"len":17,"line_nr":16,"pos":334,"col":0,"last_line":20},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"struct C.KEY_EVENT_RECORD {\n\tbKeyDown          int\n\twRepeatCount      u16\n\twVirtualKeyCode   u16\n\twVirtualScanCode  u16\n\tuChar             C.uChar\n\tdwControlKeyState u32\n}","name":"C.KEY_EVENT_RECORD","parent_name":"","return_type":"","pos":{"len":29,"line_nr":23,"pos":407,"col":0,"last_line":30},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"struct C.MOUSE_EVENT_RECORD {\n\tdwMousePosition   C.COORD\n\tdwButtonState     u32\n\tdwControlKeyState u32\n\tdwEventFlags      u32\n}","name":"C.MOUSE_EVENT_RECORD","parent_name":"","return_type":"","pos":{"len":31,"line_nr":33,"pos":595,"col":0,"last_line":38},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"struct C.WINDOW_BUFFER_SIZE_RECORD {\n\tdwSize C.COORD\n}","name":"C.WINDOW_BUFFER_SIZE_RECORD","parent_name":"","return_type":"","pos":{"len":38,"line_nr":41,"pos":739,"col":0,"last_line":43},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"struct C.MENU_EVENT_RECORD {\n\tdwCommandId u32\n}","name":"C.MENU_EVENT_RECORD","parent_name":"","return_type":"","pos":{"len":30,"line_nr":46,"pos":810,"col":0,"last_line":48},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"struct C.FOCUS_EVENT_RECORD {\n\tbSetFocus int\n}","name":"C.FOCUS_EVENT_RECORD","parent_name":"","return_type":"","pos":{"len":31,"line_nr":51,"pos":874,"col":0,"last_line":53},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"struct C.COORD {\nmut:\n\tX i16\n\tY i16\n}","name":"C.COORD","parent_name":"","return_type":"","pos":{"len":18,"line_nr":56,"pos":937,"col":0,"last_line":60},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"struct C.SMALL_RECT {\nmut:\n\tLeft   u16\n\tTop    u16\n\tRight  u16\n\tBottom u16\n}","name":"C.SMALL_RECT","parent_name":"","return_type":"","pos":{"len":23,"line_nr":63,"pos":991,"col":0,"last_line":69},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\consoleapi_windows.c.v","content":"struct C.CONSOLE_SCREEN_BUFFER_INFO {\nmut:\n\tdwSize              C.COORD\n\tdwCursorPosition    C.COORD\n\twAttributes         u16\n\tsrWindow            C.SMALL_RECT\n\tdwMaximumWindowSize C.COORD\n}","name":"C.CONSOLE_SCREEN_BUFFER_INFO","parent_name":"","return_type":"","pos":{"len":39,"line_nr":72,"pos":1084,"col":0,"last_line":79},"platform":"windows","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input.v","content":"enum KeyCode {\n\tnull                 = 0\n\ttab                  = 9\n\tenter                = 10\n\tescape               = 27\n\tspace                = 32\n\tbackspace            = 127\n\texclamation          = 33\n\tdouble_quote         = 34\n\thashtag              = 35\n\tdollar               = 36\n\tpercent              = 37\n\tampersand            = 38\n\tsingle_quote         = 39\n\tleft_paren           = 40\n\tright_paren          = 41\n\tasterisk             = 42\n\tplus                 = 43\n\tcomma                = 44\n\tminus                = 45\n\tperiod               = 46\n\tslash                = 47\n\t_0                   = 48\n\t_1                   = 49\n\t_2                   = 50\n\t_3                   = 51\n\t_4                   = 52\n\t_5                   = 53\n\t_6                   = 54\n\t_7                   = 55\n\t_8                   = 56\n\t_9                   = 57\n\tcolon                = 58\n\tsemicolon            = 59\n\tless_than            = 60\n\tequal                = 61\n\tgreater_than         = 62\n\tquestion_mark        = 63\n\tat                   = 64\n\ta                    = 97\n\tb                    = 98\n\tc                    = 99\n\td                    = 100\n\te                    = 101\n\tf                    = 102\n\tg                    = 103\n\th                    = 104\n\ti                    = 105\n\tj                    = 106\n\tk                    = 107\n\tl                    = 108\n\tm                    = 109\n\tn                    = 110\n\to                    = 111\n\tp                    = 112\n\tq                    = 113\n\tr                    = 114\n\ts                    = 115\n\tt                    = 116\n\tu                    = 117\n\tv                    = 118\n\tw                    = 119\n\tx                    = 120\n\ty                    = 121\n\tz                    = 122\n\tleft_square_bracket  = 91\n\tbackslash            = 92\n\tright_square_bracket = 93\n\tcaret                = 94\n\tunderscore           = 95\n\tbacktick             = 96\n\tleft_curly_bracket   = 123\n\tvertical_bar         = 124\n\tright_curly_bracket  = 125\n\ttilde                = 126\n\tinsert               = 260\n\tdelete               = 261\n\tup                   = 262\n\tdown                 = 263\n\tright                = 264\n\tleft                 = 265\n\tpage_up              = 266\n\tpage_down            = 267\n\thome                 = 268\n\tend                  = 269\n\tf1                   = 290\n\tf2                   = 291\n\tf3                   = 292\n\tf4                   = 293\n\tf5                   = 294\n\tf6                   = 295\n\tf7                   = 296\n\tf8                   = 297\n\tf9                   = 298\n\tf10                  = 299\n\tf11                  = 300\n\tf12                  = 301\n\tf13                  = 302\n\tf14                  = 303\n\tf15                  = 304\n\tf16                  = 305\n\tf17                  = 306\n\tf18                  = 307\n\tf19                  = 308\n\tf20                  = 309\n\tf21                  = 310\n\tf22                  = 311\n\tf23                  = 312\n\tf24                  = 313\n}","name":"KeyCode","parent_name":"","return_type":"","pos":{"len":16,"line_nr":7,"pos":187,"col":0,"last_line":116},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input.v","content":"enum Direction {\n\tunknown\n\tup\n\tdown\n\tleft\n\tright\n}","name":"Direction","parent_name":"","return_type":"","pos":{"len":18,"line_nr":118,"pos":3185,"col":0,"last_line":124},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input.v","content":"enum MouseButton {\n\tunknown\n\tleft\n\tmiddle\n\tright\n}","name":"MouseButton","parent_name":"","return_type":"","pos":{"len":20,"line_nr":126,"pos":3241,"col":0,"last_line":131},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input.v","content":"enum EventType {\n\tunknown\n\tmouse_down\n\tmouse_up\n\tmouse_move\n\tmouse_drag\n\tmouse_scroll\n\tkey_down\n\tresized\n}","name":"EventType","parent_name":"","return_type":"","pos":{"len":18,"line_nr":133,"pos":3297,"col":0,"last_line":142},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input.v","content":"enum Modifiers {\n\tctrl\n\tshift\n\talt\n}","name":"Modifiers","parent_name":"","return_type":"","pos":{"len":18,"line_nr":145,"pos":3417,"col":0,"last_line":149},"platform":"cross","kind":"enum_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input.v","content":"struct Event {\npub:\n\ttyp EventType\n\t// Mouse event info\n\tx         int\n\ty         int\n\tbutton    MouseButton\n\tdirection Direction\n\t// Keyboard event info\n\tcode      KeyCode\n\tmodifiers Modifiers\n\tascii     u8\n\tutf8      string\n\t// Resized event info\n\twidth  int\n\theight int\n}","name":"Event","parent_name":"","return_type":"","pos":{"len":16,"line_nr":151,"pos":3459,"col":0,"last_line":167},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 bold sets the character state to bold.","is_multi":false,"pos":{"len":40,"line_nr":48,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) bold()","name":"bold","parent_name":"Context","return_type":"void","pos":{"len":31,"line_nr":50,"pos":1239,"col":0,"last_line":52},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 clear erases the entire terminal window and any saved lines.","is_multi":false,"pos":{"len":62,"line_nr":110,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) clear()","name":"clear","parent_name":"Context","return_type":"void","pos":{"len":32,"line_nr":112,"pos":2891,"col":0,"last_line":114},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 draw_dashed_line draws a dashed line segment, starting at point `x`,`y`, and ending at point `x2`,`y2`.","is_multi":false,"pos":{"len":105,"line_nr":173,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) draw_dashed_line(x int, y int, x2 int, y2 int)","name":"draw_dashed_line","parent_name":"Context","return_type":"void","pos":{"len":71,"line_nr":174,"pos":4566,"col":0,"last_line":202},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 draw_empty_dashed_rect draws a rectangle with dashed lines, starting at top left `x`,`y`, and ending at bottom right `x2`,`y2`.","is_multi":false,"pos":{"len":129,"line_nr":216,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) draw_empty_dashed_rect(x int, y int, x2 int, y2 int)","name":"draw_empty_dashed_rect","parent_name":"Context","return_type":"void","pos":{"len":77,"line_nr":217,"pos":5662,"col":0,"last_line":238},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 draw_empty_rect draws a rectangle with no fill, starting at top left `x`,`y`, and ending at bottom right `x2`,`y2`.","is_multi":false,"pos":{"len":117,"line_nr":240,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) draw_empty_rect(x int, y int, x2 int, y2 int)","name":"draw_empty_rect","parent_name":"Context","return_type":"void","pos":{"len":70,"line_nr":241,"pos":6444,"col":0,"last_line":250},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 draw_line draws a line segment, starting at point `x`,`y`, and ending at point `x2`,`y2`.","is_multi":false,"pos":{"len":91,"line_nr":137,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) draw_line(x int, y int, x2 int, y2 int)","name":"draw_line","parent_name":"Context","return_type":"void","pos":{"len":64,"line_nr":138,"pos":3568,"col":0,"last_line":171},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 draw_point draws a point at position `x`,`y`.","is_multi":false,"pos":{"len":47,"line_nr":123,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) draw_point(x int, y int)","name":"draw_point","parent_name":"Context","return_type":"void","pos":{"len":49,"line_nr":125,"pos":3187,"col":0,"last_line":128},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 draw_rect draws a rectangle, starting at top left `x`,`y`, and ending at bottom right `x2`,`y2`.","is_multi":false,"pos":{"len":98,"line_nr":204,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) draw_rect(x int, y int, x2 int, y2 int)","name":"draw_rect","parent_name":"Context","return_type":"void","pos":{"len":64,"line_nr":205,"pos":5267,"col":0,"last_line":214},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 draw_text draws the string `s`, starting from position `x`,`y`.","is_multi":false,"pos":{"len":65,"line_nr":130,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) draw_text(x int, y int, s string)","name":"draw_text","parent_name":"Context","return_type":"void","pos":{"len":58,"line_nr":132,"pos":3366,"col":0,"last_line":135},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 flush displays the accumulated print buffer to the screen.","is_multi":false,"pos":{"len":60,"line_nr":34,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) flush()","name":"flush","parent_name":"Context","return_type":"void","pos":{"len":32,"line_nr":36,"pos":825,"col":0,"last_line":46},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 hide_cursor will make the cursor invisible","is_multi":false,"pos":{"len":44,"line_nr":66,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) hide_cursor()","name":"hide_cursor","parent_name":"Context","return_type":"void","pos":{"len":38,"line_nr":68,"pos":1685,"col":0,"last_line":70},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 horizontal_separator draws a horizontal separator, spanning the width of the screen.","is_multi":false,"pos":{"len":86,"line_nr":252,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) horizontal_separator(y int)","name":"horizontal_separator","parent_name":"Context","return_type":"void","pos":{"len":52,"line_nr":254,"pos":6801,"col":0,"last_line":257},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 reset restores the state of all colors and text formats back to their default values.","is_multi":false,"pos":{"len":87,"line_nr":104,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) reset()","name":"reset","parent_name":"Context","return_type":"void","pos":{"len":32,"line_nr":106,"pos":2757,"col":0,"last_line":108},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 reset_bg_color sets the current background color back to it's default value.","is_multi":false,"pos":{"len":78,"line_nr":98,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) reset_bg_color()","name":"reset_bg_color","parent_name":"Context","return_type":"void","pos":{"len":41,"line_nr":100,"pos":2588,"col":0,"last_line":102},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 reset_color sets the current foreground color back to it's default value.","is_multi":false,"pos":{"len":75,"line_nr":92,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) reset_color()","name":"reset_color","parent_name":"Context","return_type":"void","pos":{"len":38,"line_nr":94,"pos":2431,"col":0,"last_line":96},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 run starts the windows console or restarts if it was paused.","is_multi":false,"pos":{"len":62,"line_nr":100,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input_windows.c.v","content":"fn (mut ctx Context) run() !","name":"run","parent_name":"Context","return_type":"!","pos":{"len":32,"line_nr":101,"pos":2494,"col":0,"last_line":126},"platform":"windows","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set_color sets the current background color used by any succeeding `draw_*` calls.","is_multi":false,"pos":{"len":84,"line_nr":82,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) set_bg_color(c Color)","name":"set_bg_color","parent_name":"Context","return_type":"void","pos":{"len":46,"line_nr":84,"pos":2143,"col":0,"last_line":90},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set_color sets the current foreground color used by any succeeding `draw_*` calls.","is_multi":false,"pos":{"len":84,"line_nr":72,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) set_color(c Color)","name":"set_color","parent_name":"Context","return_type":"void","pos":{"len":43,"line_nr":74,"pos":1849,"col":0,"last_line":80},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set_cursor_position positions the cusor at the given coordinates `x`,`y`.","is_multi":false,"pos":{"len":75,"line_nr":54,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) set_cursor_position(x int, y int)","name":"set_cursor_position","parent_name":"Context","return_type":"void","pos":{"len":58,"line_nr":56,"pos":1385,"col":0,"last_line":58},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 set_window_title sets the string `s` as the window title.","is_multi":false,"pos":{"len":59,"line_nr":116,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) set_window_title(s string)","name":"set_window_title","parent_name":"Context","return_type":"void","pos":{"len":51,"line_nr":118,"pos":3029,"col":0,"last_line":121},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 show_cursor will make the cursor appear if it is not already visible","is_multi":false,"pos":{"len":70,"line_nr":60,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) show_cursor()","name":"show_cursor","parent_name":"Context","return_type":"void","pos":{"len":38,"line_nr":62,"pos":1561,"col":0,"last_line":64},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 write puts the string `s` into the print buffer.","is_multi":false,"pos":{"len":50,"line_nr":25,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (mut ctx Context) write(s string)","name":"write","parent_name":"Context","return_type":"void","pos":{"len":40,"line_nr":27,"pos":631,"col":0,"last_line":32},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input.v","content":"struct Context {\n\tExtraContext // contains fields specific to an implementation\npub:\n\tcfg Config // the initial configuration, passed to ui.init()\nmut:\n\tprint_buf  []u8\n\tpaused     bool\n\tenable_su  bool\n\tenable_rgb bool\npub mut:\n\tframe_count   u64\n\twindow_width  int\n\twindow_height int\n}","name":"Context","parent_name":"","return_type":"","pos":{"len":18,"line_nr":169,"pos":3739,"col":0,"last_line":182},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input.v","content":"struct Config {\n\tuser_data  voidptr\n\tinit_fn    ?fn (voidptr)\n\tframe_fn   ?fn (voidptr)\n\tcleanup_fn ?fn (voidptr)\n\tevent_fn   ?fn (&Event, voidptr)\n\tfail_fn    ?fn (string)\n\n\tbuffer_size int = 256\n\tframe_rate  int = 30\n\tuse_x11     bool\n\n\twindow_title         string\n\thide_cursor          bool\n\tcapture_events       bool\n\tuse_alternate_buffer bool = true\n\tskip_init_checks     bool\n\t// All kill signals to set up exit listeners on:\n\treset []os.Signal = [.hup, .int, .quit, .ill, .abrt, .bus, .fpe, .kill, .segv, .pipe, .alrm, .term,\n\t.stop]\n}","name":"Config","parent_name":"","return_type":"","pos":{"len":17,"line_nr":184,"pos":4032,"col":0,"last_line":204},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 init initializes the context of a windows console given the `cfg`.","is_multi":false,"pos":{"len":68,"line_nr":37,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\input_windows.c.v","content":"fn init(cfg Config) &Context","name":"init","parent_name":"","return_type":"Context","pos":{"len":32,"line_nr":38,"pos":853,"col":0,"last_line":98},"platform":"windows","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 hex returns `c`'s RGB color in hex format.","is_multi":false,"pos":{"len":44,"line_nr":14,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"fn (c Color) hex() string","name":"hex","parent_name":"Color","return_type":"string","pos":{"len":29,"line_nr":15,"pos":283,"col":0,"last_line":17},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\term\\ui\\ui.c.v","content":"struct Color {\npub:\n\tr u8\n\tg u8\n\tb u8\n}","name":"Color","parent_name":"","return_type":"","pos":{"len":16,"line_nr":7,"pos":192,"col":0,"last_line":12},"platform":"cross","kind":"struct_","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:38"}