{"module_name":"rand.wyrand","description":"","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\wyrand\\wyrand.v","content":"const seed_len = 2","name":"","parent_name":"","return_type":"","pos":{"len":9,"line_nr":13,"pos":397,"col":0,"last_line":13},"platform":"cross","kind":"const_group","public":true,"from_scope":false}],"tags":[],"file_path":"","content":"","name":"Constants","parent_name":"","return_type":"","pos":{"len":0,"line_nr":0,"pos":0,"col":0,"last_line":0},"platform":"auto","kind":"const_group","public":false,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 WyRandRNG is a RNG based on the WyHash hashing algorithm.","is_multi":false,"pos":{"len":59,"line_nr":15,"pos":0,"col":0,"last_line":0}}],"children":[{"attributes":{},"comments":[{"text":"\u0001 free should be called when the generator is no longer needed","is_multi":false,"pos":{"len":62,"line_nr":2,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["unsafe"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\wyrand\\z_wyrand.c.v","content":"fn (mut rng WyRandRNG) free()","name":"free","parent_name":"WyRandRNG","return_type":"void","pos":{"len":33,"line_nr":4,"pos":89,"col":0,"last_line":6},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 seed sets the seed, needs only two `u32`s in little-endian format as [lower, higher].","is_multi":false,"pos":{"len":87,"line_nr":24,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\wyrand\\wyrand.v","content":"fn (mut rng WyRandRNG) seed(seed_data []u32)","name":"seed","parent_name":"WyRandRNG","return_type":"void","pos":{"len":48,"line_nr":25,"pos":691,"col":0,"last_line":33},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 u16 returns a pseudorandom 16bit int in range `[0, 2¹⁶)`.","is_multi":false,"pos":{"len":62,"line_nr":53,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\wyrand\\wyrand.v","content":"fn (mut rng WyRandRNG) u16() u16","name":"u16","parent_name":"WyRandRNG","return_type":"u16","pos":{"len":36,"line_nr":55,"pos":1442,"col":0,"last_line":66},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 u32 returns a pseudorandom 32bit int in range `[0, 2³²)`.","is_multi":false,"pos":{"len":61,"line_nr":68,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\wyrand\\wyrand.v","content":"fn (mut rng WyRandRNG) u32() u32","name":"u32","parent_name":"WyRandRNG","return_type":"u32","pos":{"len":36,"line_nr":70,"pos":1749,"col":0,"last_line":81},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 u64 returns a pseudorandom 64bit int in range `[0, 2⁶⁴)`.","is_multi":false,"pos":{"len":63,"line_nr":83,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\wyrand\\wyrand.v","content":"fn (mut rng WyRandRNG) u64() u64","name":"u64","parent_name":"WyRandRNG","return_type":"u64","pos":{"len":36,"line_nr":85,"pos":2058,"col":0,"last_line":93},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 byte returns a uniformly distributed pseudorandom 8-bit unsigned positive `byte`.","is_multi":false,"pos":{"len":83,"line_nr":35,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\wyrand\\wyrand.v","content":"fn (mut rng WyRandRNG) u8() u8","name":"u8","parent_name":"WyRandRNG","return_type":"u8","pos":{"len":34,"line_nr":37,"pos":1038,"col":0,"last_line":51},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 block_size returns the number of bits that the RNG can produce in a single iteration.","is_multi":false,"pos":{"len":87,"line_nr":95,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\wyrand\\wyrand.v","content":"fn (mut rng WyRandRNG) block_size() int","name":"block_size","parent_name":"WyRandRNG","return_type":"int","pos":{"len":43,"line_nr":97,"pos":2338,"col":0,"last_line":99},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\rand\\wyrand\\wyrand.v","content":"struct WyRandRNG {\n\tbuffer.PRNGBuffer\nmut:\n\tstate      u64 = seed.time_seed_64()\n\tbytes_left int\n\tbuffer     u64\n}","name":"WyRandRNG","parent_name":"","return_type":"","pos":{"len":20,"line_nr":16,"pos":482,"col":0,"last_line":22},"platform":"cross","kind":"struct_","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:36"}