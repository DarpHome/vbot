{"module_name":"v.gen.c","description":"","contents":[{"attributes":{},"comments":[],"children":[{"attributes":{},"comments":[{"text":"\u0001 returns true if `t` includes any pointer(s) - during garbage collection heap regions","is_multi":false,"pos":{"len":86,"line_nr":7237,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 that contain no pointers do not have to be scanned","is_multi":false,"pos":{"len":52,"line_nr":7238,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) contains_ptr(el_typ ast.Type) bool","name":"contains_ptr","parent_name":"Gen","return_type":"bool","pos":{"len":53,"line_nr":7239,"pos":229640,"col":0,"last_line":7295},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) current_tmp_var() string","name":"current_tmp_var","parent_name":"Gen","return_type":"string","pos":{"len":43,"line_nr":1750,"pos":61352,"col":0,"last_line":1752},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) filter_only_matching_fn_names(fnames []string) []string","name":"filter_only_matching_fn_names","parent_name":"Gen","return_type":"[]string","pos":{"len":74,"line_nr":314,"pos":10568,"col":0,"last_line":337},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) finish()","name":"finish","parent_name":"Gen","return_type":"void","pos":{"len":27,"line_nr":894,"pos":35646,"col":0,"last_line":907},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\u0001 free_builders should be called only when a Gen would NOT be used anymore","is_multi":false,"pos":{"len":74,"line_nr":699,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 it frees the bulk of the memory that is private to the Gen instance","is_multi":false,"pos":{"len":69,"line_nr":700,"pos":0,"col":0,"last_line":0}},{"text":"\u0001 (the various string builders)","is_multi":false,"pos":{"len":31,"line_nr":701,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":["unsafe"],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) free_builders()","name":"free_builders","parent_name":"Gen","return_type":"void","pos":{"len":34,"line_nr":703,"pos":29561,"col":0,"last_line":735},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) gen_c_android_sokol_main()","name":"gen_c_android_sokol_main","parent_name":"Gen","return_type":"void","pos":{"len":45,"line_nr":131,"pos":3857,"col":0,"last_line":189},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) gen_c_main()","name":"gen_c_main","parent_name":"Gen","return_type":"void","pos":{"len":31,"line_nr":5,"pos":38,"col":0,"last_line":33},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) gen_c_main_footer()","name":"gen_c_main_footer","parent_name":"Gen","return_type":"void","pos":{"len":38,"line_nr":125,"pos":3742,"col":0,"last_line":129},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) gen_c_main_for_tests()","name":"gen_c_main_for_tests","parent_name":"Gen","return_type":"void","pos":{"len":41,"line_nr":234,"pos":7576,"col":0,"last_line":312},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) gen_c_main_profile_hook()","name":"gen_c_main_profile_hook","parent_name":"Gen","return_type":"void","pos":{"len":44,"line_nr":216,"pos":7086,"col":0,"last_line":232},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) gen_c_main_trace_calls_hook()","name":"gen_c_main_trace_calls_hook","parent_name":"Gen","return_type":"void","pos":{"len":48,"line_nr":339,"pos":11032,"col":0,"last_line":344},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) gen_failing_error_propagation_for_test_fn(or_block ast.OrExpr, cvar_name string)","name":"gen_failing_error_propagation_for_test_fn","parent_name":"Gen","return_type":"void","pos":{"len":99,"line_nr":196,"pos":5729,"col":0,"last_line":204},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) gen_failing_return_error_for_test_fn(return_stmt ast.Return, cvar_name string)","name":"gen_failing_return_error_for_test_fn","parent_name":"Gen","return_type":"void","pos":{"len":97,"line_nr":206,"pos":6382,"col":0,"last_line":214},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) gen_file()","name":"gen_file","parent_name":"Gen","return_type":"void","pos":{"len":29,"line_nr":737,"pos":30316,"col":0,"last_line":753},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\profile.v","content":"fn (mut g Gen) gen_vprint_profile_stats()","name":"gen_vprint_profile_stats","parent_name":"Gen","return_type":"void","pos":{"len":45,"line_nr":49,"pos":1716,"col":0,"last_line":73},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) get_array_depth(el_typ ast.Type) int","name":"get_array_depth","parent_name":"Gen","return_type":"int","pos":{"len":55,"line_nr":7226,"pos":229245,"col":0,"last_line":7235},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (g &Gen) hashes() string","name":"hashes","parent_name":"Gen","return_type":"string","pos":{"len":31,"line_nr":755,"pos":30804,"col":0,"last_line":757},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) init()","name":"init","parent_name":"Gen","return_type":"void","pos":{"len":25,"line_nr":759,"pos":30903,"col":0,"last_line":892},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) is_generic_param_var(node ast.Expr) bool","name":"is_generic_param_var","parent_name":"Gen","return_type":"bool","pos":{"len":59,"line_nr":4350,"pos":134521,"col":0,"last_line":4353},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) new_global_tmp_var() string","name":"new_global_tmp_var","parent_name":"Gen","return_type":"string","pos":{"len":46,"line_nr":1740,"pos":61118,"col":0,"last_line":1743},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) new_tmp_declaration_name() string","name":"new_tmp_declaration_name","parent_name":"Gen","return_type":"string","pos":{"len":52,"line_nr":1745,"pos":61226,"col":0,"last_line":1748},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) new_tmp_var() string","name":"new_tmp_var","parent_name":"Gen","return_type":"string","pos":{"len":39,"line_nr":1735,"pos":61031,"col":0,"last_line":1738},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[{"text":"\npub fn (mut g Gen) new_tmp_var2() string {\n\tg.tmp_count_af++\n\treturn '_tt$g.tmp_count_af'\n}\n","is_multi":true,"pos":{"len":93,"line_nr":1754,"pos":0,"col":0,"last_line":0}}],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) reset_tmp_count()","name":"reset_tmp_count","parent_name":"Gen","return_type":"void","pos":{"len":36,"line_nr":1760,"pos":61526,"col":0,"last_line":1762},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) write_alias_typesymbol_declaration(sym ast.TypeSymbol)","name":"write_alias_typesymbol_declaration","parent_name":"Gen","return_type":"void","pos":{"len":73,"line_nr":1536,"pos":54687,"col":0,"last_line":1566},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) write_array_fixed_return_types()","name":"write_array_fixed_return_types","parent_name":"Gen","return_type":"void","pos":{"len":51,"line_nr":1652,"pos":58075,"col":0,"last_line":1674},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) write_fn_typesymbol_declaration(sym ast.TypeSymbol)","name":"write_fn_typesymbol_declaration","parent_name":"Gen","return_type":"void","pos":{"len":70,"line_nr":1603,"pos":56770,"col":0,"last_line":1650},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) write_interface_typedef(sym ast.TypeSymbol)","name":"write_interface_typedef","parent_name":"Gen","return_type":"void","pos":{"len":62,"line_nr":1568,"pos":55743,"col":0,"last_line":1571},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) write_interface_typesymbol_declaration(sym ast.TypeSymbol)","name":"write_interface_typesymbol_declaration","parent_name":"Gen","return_type":"void","pos":{"len":77,"line_nr":1573,"pos":55914,"col":0,"last_line":1601},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) write_multi_return_types()","name":"write_multi_return_types","parent_name":"Gen","return_type":"void","pos":{"len":45,"line_nr":1676,"pos":59009,"col":0,"last_line":1733},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cmain.v","content":"fn (mut g Gen) write_tests_definitions()","name":"write_tests_definitions","parent_name":"Gen","return_type":"void","pos":{"len":44,"line_nr":191,"pos":5567,"col":0,"last_line":194},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) write_typedef_types()","name":"write_typedef_types","parent_name":"Gen","return_type":"void","pos":{"len":40,"line_nr":1436,"pos":51350,"col":0,"last_line":1534},"platform":"cross","kind":"method","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn (mut g Gen) write_typeof_functions()","name":"write_typeof_functions","parent_name":"Gen","return_type":"void","pos":{"len":43,"line_nr":909,"pos":35973,"col":0,"last_line":987},"platform":"cross","kind":"method","public":true,"from_scope":false}],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"struct Gen {\n\tpref                &pref.Preferences = unsafe { nil }\n\tfield_data_type     ast.Type // cache her to avoid map lookups\n\tenum_data_type      ast.Type // cache her to avoid map lookups\n\tvariant_data_type   ast.Type // cache her to avoid map lookups\n\tmodule_built        string\n\ttimers_should_print bool\nmut:\n\tout                       strings.Builder\n\tcheaders                  strings.Builder\n\tpreincludes               strings.Builder // allows includes to go before `definitions`\n\tincludes                  strings.Builder // all C #includes required by V modules\n\ttypedefs                  strings.Builder\n\tenum_typedefs             strings.Builder // enum types\n\tdefinitions               strings.Builder // typedefs, defines etc (everything that goes to the top of the file)\n\ttype_definitions          strings.Builder // typedefs, defines etc (everything that goes to the top of the file)\n\talias_definitions         strings.Builder // alias fixed array of non-builtin\n\thotcode_definitions       strings.Builder // -live declarations & functions\n\tchannel_definitions       strings.Builder // channel related code\n\tthread_definitions        strings.Builder // thread defines\n\tcomptime_definitions      strings.Builder // custom defines, given by -d/-define flags on the CLI\n\tcleanup                   strings.Builder\n\tcleanups                  map[string]strings.Builder // contents of `void _vcleanup(){}`\n\tgowrappers                strings.Builder // all go callsite wrappers\n\tauto_str_funcs            strings.Builder // function bodies of all auto generated _str funcs\n\tdump_funcs                strings.Builder // function bodies of all auto generated _str funcs\n\tpcs_declarations          strings.Builder // -prof profile counter declarations for each function\n\tembedded_data             strings.Builder // data to embed in the executable/binary\n\tshared_types              strings.Builder // shared/lock types\n\tshared_functions          strings.Builder // shared constructors\n\tout_options_forward       strings.Builder // forward `option_xxxx` types\n\tout_options               strings.Builder // `option_xxxx` types\n\tout_results_forward       strings.Builder // forward`result_xxxx` types\n\tout_results               strings.Builder // `result_xxxx` types\n\tjson_forward_decls        strings.Builder // json type forward decls\n\tsql_buf                   strings.Builder // for writing exprs to args via `sqlite3_bind_int()` etc\n\tglobal_const_defs         map[string]GlobalConstDef\n\tsorted_global_const_names []string\n\tfile                      &ast.File  = unsafe { nil }\n\ttable                     &ast.Table = unsafe { nil }\n\tunique_file_path_hash     u64 // a hash of file.path, used for making auxiliary fn generation unique (like `compare_xyz`)\n\tfn_decl                   &ast.FnDecl = unsafe { nil } // pointer to the FnDecl we are currently inside otherwise 0\n\tlast_fn_c_name            string\n\ttmp_count                 int         // counter for unique tmp vars (_tmp1, _tmp2 etc); resets at the start of each fn.\n\ttmp_count_af              int  // a separate tmp var counter for autofree fn calls\n\ttmp_count_declarations    int  // counter for unique tmp names (_d1, _d2 etc); does NOT reset, used for C declarations\n\tglobal_tmp_count          int  // like tmp_count but global and not reset in each function\n\tdiscard_or_result         bool // do not safe last ExprStmt of `or` block in tmp variable to defer ongoing expr usage\n\tis_direct_array_access    bool // inside a `[direct_array_access fn a() {}` function\n\tis_assign_lhs             bool // inside left part of assign expr (for array_set(), etc)\n\tis_void_expr_stmt         bool // ExprStmt whose result is discarded\n\tis_arraymap_set           bool // map or array set value state\n\tis_amp                    bool // for `&Foo{}` to merge PrefixExpr `&` and StructInit `Foo{}`; also for `&u8(0)` etc\n\tis_sql                    bool // Inside `sql db{}` statement, generating sql instead of C (e.g. `and` instead of `&&` etc)\n\tis_shared                 bool // for initialization of hidden mutex in `[rw]shared` literals\n\tis_vlines_enabled         bool // is it safe to generate #line directives when -g is passed\n\tis_autofree               bool // false, inside the bodies of fns marked with [manualfree], otherwise === g.pref.autofree\n\tis_builtin_mod            bool\n\tis_json_fn                bool // inside json.encode()\n\tis_js_call                bool // for handling a special type arg #1 `json.decode(User, ...)`\n\tis_fn_index_call          bool\n\tis_cc_msvc                bool // g.pref.ccompiler == 'msvc'\n\tis_option_auto_heap       bool\n\tvlines_path               string   // set to the proper path for generating #line directives\n\toptions_pos_forward       int      // insertion point to forward\n\toptions_forward           []string // to forward\n\toptions                   map[string]string // to avoid duplicates\n\tresults_forward           []string // to forward\n\tresults                   map[string]string // to avoid duplicates\n\tdone_options              shared []string   // to avoid duplicates\n\tdone_results              shared []string   // to avoid duplicates\n\tchan_pop_options          map[string]string // types for `x := <-ch or {...}`\n\tchan_push_options         map[string]string // types for `ch <- x or {...}`\n\tmtxs                      string // array of mutexes if the `lock` has multiple variables\n\tlabeled_loops             map[string]&ast.Stmt\n\tinner_loop                &ast.Stmt = unsafe { nil }\n\tshareds                   map[int]string // types with hidden mutex for which decl has been emitted\n\tinside_ternary            int  // ?: comma separated statements on a single line\n\tinside_map_postfix        bool // inside map++/-- postfix expr\n\tinside_map_infix          bool // inside map<</+=/-= infix expr\n\tinside_assign             bool\n\tinside_map_index          bool\n\tinside_array_index        bool\n\tinside_opt_or_res         bool\n\tinside_opt_data           bool\n\tinside_if_option          bool\n\tinside_if_result          bool\n\tinside_match_option       bool\n\tinside_match_result       bool\n\tinside_vweb_tmpl          bool\n\tinside_return             bool\n\tinside_return_tmpl        bool\n\tinside_struct_init        bool\n\tinside_or_block           bool\n\tinside_call               bool\n\tinside_curry_call         bool // inside foo()()!, foo()()?, foo()()\n\texpected_fixed_arr        bool\n\tinside_for_c_stmt         bool\n\t// inside_comptime_for_field bool\n\tinside_cast_in_heap     int // inside cast to interface type in heap (resolve recursive calls)\n\tinside_cast             bool\n\tinside_const            bool\n\tinside_array_item       bool\n\tinside_const_opt_or_res bool\n\tinside_lambda           bool\n\tinside_cinit            bool\n\tinside_interface_deref  bool\n\tlast_tmp_call_var       []string\n\tloop_depth              int\n\tternary_names           map[string]string\n\tternary_level_names     map[string][]string\n\tarraymap_set_pos        int      // map or array set value position\n\tstmt_path_pos           []int    // positions of each statement start, for inserting C statements before the current statement\n\tskip_stmt_pos           bool     // for handling if expressions + autofree (since both prepend C statements)\n\tleft_is_opt             bool     // left hand side on assignment is an option\n\tright_is_opt            bool     // right hand side on assignment is an option\n\tassign_ct_type          ast.Type // left hand side resolved comptime type\n\tindent                  int\n\tempty_line              bool\n\tassign_op               token.Kind // *=, =, etc (for array_set)\n\tdefer_stmts             []ast.DeferStmt\n\tdefer_ifdef             string\n\tdefer_profile_code      string\n\tdefer_vars              []string\n\tstr_types               []StrType       // types that need automatic str() generation\n\tgenerated_str_fns       []StrType       // types that already have a str() function\n\tstr_fn_names            []string        // remove duplicate function names\n\tthreaded_fns            shared []string // for generating unique wrapper types and fns for `go xxx()`\n\twaiter_fns              shared []string // functions that wait for `go xxx()` to finish\n\tneeded_equality_fns     []ast.Type\n\tgenerated_eq_fns        []ast.Type\n\tarray_sort_fn           shared []string\n\tarray_contains_types    []ast.Type\n\tarray_index_types       []ast.Type\n\tauto_fn_definitions     []string // auto generated functions definition list\n\tsumtype_casting_fns     []SumtypeCastingFn\n\tanon_fn_definitions     []string     // anon generated functions definition list\n\tsumtype_definitions     map[int]bool // `_TypeA_to_sumtype_TypeB()` fns that have been generated\n\tjson_types              []ast.Type   // to avoid json gen duplicates\n\tpcs                     []ProfileCounterMeta // -prof profile counter fn_names => fn counter name\n\thotcode_fn_names        []string\n\thotcode_fpaths          []string\n\tembedded_files          []ast.EmbeddedFile\n\tsql_i                   int\n\tsql_stmt_name           string\n\tsql_bind_name           string\n\tsql_idents              []string\n\tsql_idents_types        []ast.Type\n\tsql_left_type           ast.Type\n\tsql_table_name          string\n\tsql_fkey                string\n\tsql_parent_id           string\n\tsql_side                SqlExprSide // left or right, to distinguish idents in `name == name`\n\tstrs_to_free0           []string    // strings.Builder\n\t// strs_to_free          []string // strings.Builder\n\t// tmp_arg_vars_to_free  []string\n\t// autofree_pregen       map[string]string\n\t// autofree_pregen_buf   strings.Builder\n\t// autofree_tmp_vars     []string // to avoid redefining the same tmp vars in a single function\n\t// nr_vars_to_free       int\n\t// doing_autofree_tmp    bool\n\tcomptime_info_stack              []comptime.ComptimeInfo // stores the values from the above on each $for loop, to make nesting them easier\n\tcomptime                         comptime.ComptimeInfo\n\tprevent_sum_type_unwrapping_once bool // needed for assign new values to sum type\n\t// used in match multi branch\n\t// TypeOne, TypeTwo {}\n\t// where an aggregate (at least two types) is generated\n\t// sum type deref needs to know which index to deref because unions take care of the correct field\n\taggregate_type_idx  int\n\tbranch_parent_pos   int    // used in BranchStmt (continue/break) for autofree stop position\n\treturned_var_name   string // to detect that a var doesn't need to be freed since it's being returned\n\tinfix_left_var_name string // a && if expr\n\tcalled_fn_name      string\n\ttimers              &util.Timers = util.get_timers()\n\tforce_main_console  bool // true when [console] used on fn main()\n\tas_cast_type_names  map[string]string // table for type name lookup in runtime (for __as_cast)\n\tobf_table           map[string]string\n\treferenced_fns      shared map[string]bool // functions that have been referenced\n\tnr_closures         int\n\texpected_cast_type  ast.Type // for match expr of sumtypes\n\tor_expr_return_type ast.Type // or { 0, 1 } return type\n\tanon_fn             bool\n\ttests_inited        bool\n\thas_main            bool\n\t// main_fn_decl_node  ast.FnDecl\n\tcur_mod                ast.Module\n\tcur_concrete_types     []ast.Type  // do not use table.cur_concrete_types because table is global, so should not be accessed by different threads\n\tcur_fn                 &ast.FnDecl = unsafe { nil } // same here\n\tcur_lock               ast.LockExpr\n\tcur_struct_init_typ    ast.Type\n\tautofree_methods       map[int]bool\n\tgenerated_free_methods map[int]bool\n\tautofree_scope_stmts   []string\n\tuse_segfault_handler   bool = true\n\ttest_function_names    []string\n\t/////////\n\t// out_parallel []strings.Builder\n\t// out_idx      int\n\tout_fn_start_pos []int  // for generating multiple .c files, stores locations of all fn positions in `out` string builder\n\tstatic_modifier  string // for parallel_cc\n\n\thas_reflection       bool\n\treflection_strings   &map[string]int\n\tdefer_return_tmp_var string\n\tvweb_filter_fn_name  string // vweb__filter or x__vweb__filter, used by $vweb.html() for escaping strings in the templates, depending on which `vweb` import is used\n}","name":"Gen","parent_name":"","return_type":"","pos":{"len":14,"line_nr":44,"pos":1656,"col":0,"last_line":249},"platform":"cross","kind":"struct_","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn gen(files []&ast.File, table &ast.Table, pref_ &pref.Preferences) (string, string, string, []int)","name":"gen","parent_name":"","return_type":"(string, string, string, []int)","pos":{"len":104,"line_nr":261,"pos":14252,"col":0,"last_line":632},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\cgen.v","content":"fn get_guarded_include_text(iname string, imessage string) string","name":"get_guarded_include_text","parent_name":"","return_type":"string","pos":{"len":69,"line_nr":7203,"pos":228806,"col":0,"last_line":7218},"platform":"cross","kind":"function","public":true,"from_scope":false},{"attributes":{},"comments":[],"children":[],"tags":[],"file_path":"D:\\Games\\Proekti\\V\\v\\vlib\\v\\gen\\c\\profile.v","content":"struct ProfileCounterMeta {\n\tfn_name   string\n\tvpc_name  string\n\tvpc_calls string\n}","name":"ProfileCounterMeta","parent_name":"","return_type":"","pos":{"len":29,"line_nr":4,"pos":24,"col":0,"last_line":8},"platform":"cross","kind":"struct_","public":true,"from_scope":false}],"generator":"vdoc","time_generated":"2024-01-13 21:06:41"}